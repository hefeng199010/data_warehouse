<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_output_detail_his</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>p_day</name>
      <default_value>20180328</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>p_duty_nm</name>
      <default_value>dma_sal_achv_income_detail_his</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection>public_data</connection>
    <schema/>
    <table>TRANS_LOG</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共7步！！', 0,'${p_day}',  NOW(),  'dl' );
  
/**********************处理多次出款的情况(多次出款显示多条记录)start**************************************/
-- 原则：以tb_issue_business_apply_output为主，取不到则取戴良以前按照业务计算的结果
-- tb_issue_business_apply_output 该表2018-03-22 14:35:15才上线
/*part1:一次性行收取费用 新增调查费和展期手续费 放在行政综合费后面*/

DROP TEMPORARY TABLE IF EXISTS tb_issue_business_apply_output_ods_tmp;
CREATE TEMPORARY TABLE tb_issue_business_apply_output_ods_tmp (
   src_data  VARCHAR(50) NOT NULL COMMENT '一次性行收取费用和按月收取费用',
  issue_id VARCHAR(50) NOT NULL COMMENT '上标编号',
  src_issue_id VARCHAR(50) DEFAULT NULL,
  business_id VARCHAR(50) DEFAULT NULL COMMENT '业务单号',
  src_business_id VARCHAR(50) DEFAULT NULL COMMENT '业务单号',
   full_time  DATE DEFAULT NULL COMMENT'启标时间',
   full_issue_date DATE DEFAULT NULL COMMENT'满标时间',
  one_time_fgsfw_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_syqzfw_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_xzzhf_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_dc_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_zqsxf_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_ptf_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  one_time_dbf_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  mon_fgsfw_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  mon_ptf_amt   DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  full_borrow_money   DECIMAL(12,2) NOT NULL DEFAULT '0.00' comment '标的满标金额'
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

/*
月平台费对于超过12期的 *12期
*/
INSERT INTO tb_issue_business_apply_output_ods_tmp
SELECT 
 '一次性行收取费用' src_data
,t.issue_id
,IFNULL(ib.org_issue_id,ib.issue_id) AS src_issue_id -- 原标的号
,ib.business_id
-- ,ib1.business_id AS src_business_id -- 原业务单号
,xb.first_business_id AS src_business_id -- 原业务单号
,DATE_FORMAT(ib.full_time,'%Y-%m-%d')       AS  full_time      -- 启标时间
,DATE_FORMAT(ib.full_issue_date,'%Y-%m-%d') AS full_issue_date -- 满标时间
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('分公司服务费') THEN t.fee_value END),0)   AS one_time_fgsfw_amt  -- 分公司服务费
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('剩余前置服务费') THEN t.fee_value END),0) AS one_time_syqzfw_amt -- 剩余前置服务费
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('行政综合费' ) THEN t.fee_value END),0)    AS one_time_xzzhf_amt  -- 行政综合费
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('调查费' ) THEN t.fee_value END),0)        AS one_time_dc_amt     -- 调查费 new add caihl20181208 
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('展期手续费' ) THEN t.fee_value END),0)    AS one_time_zqsxf_amt  -- 展期手续费  new add caihl20181208
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('平台费') THEN t.fee_value END),0)         AS one_time_ptf_amt     -- 平台费(一次性)
,IFNULL((CASE WHEN t.is_one_time_charge = 2 AND t.fee_item_name IN ('担保费') THEN t.fee_value END),0)         AS one_time_dbf_amt     -- 担保费(一次性)
-- ,IFNULL((CASE WHEN xb.platform_id=2 then 0 when ifnull(xb.platform_id,1) &lt;&gt; 2 and ib.borrow_limit&lt;36 and t.is_one_time_charge = 1 AND t.fee_item_name IN ('月收分公司服务费') THEN t.fee_value END),0) * IFNULL(ib.borrow_limit,0) AS mon_fgsfw_amt -- 分公司月服务费总额 对于月收的需要乘以借款期限
-- ,IFNULL((CASE WHEN xb.platform_id=2 then 0 when ifnull(xb.platform_id,1) &lt;&gt; 2 and ib.borrow_limit&lt;36 and t.is_one_time_charge = 1 AND t.fee_item_name IN ('月收平台费')       THEN t.fee_value END),0) * IFNULL(ib.borrow_limit,0) AS mon_ptf_amt   -- 月收平台费         对于月收的需要乘以借款期限
,IFNULL((CASE WHEN t.is_one_time_charge = 1 AND IFNULL(t.is_term_range,0) &lt;&gt;1 AND t.fee_item_name IN ('月收分公司服务费') THEN t.fee_value END),0) * IFNULL(ib.borrow_limit,0) AS mon_fgsfw_amt -- 分公司月服务费总额 对于月收的需要乘以借款期限
,IFNULL((CASE WHEN t.is_one_time_charge = 1 AND IFNULL(t.is_term_range,0) &lt;&gt;1 AND t.fee_item_name IN ('月收平台费')       THEN t.fee_value END),0) * IFNULL((case when ib.borrow_limit>12 then 12 else ib.borrow_limit end),0) AS mon_ptf_amt   -- 月收平台费         对于月收的需要乘以借款期限
-- ,0 as mon_fgsfw_amt -- 分公司月服务费总额 
-- ,0 as mon_ptf_amt   -- 月收平台费   
,ifnull(ib.full_borrow_money,0) as full_borrow_money
FROM ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t
LEFT JOIN DWS_DATA.dws_agr_xd_issue_business ib  ON t.issue_id=ib.issue_id AND ib.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
-- LEFT JOIN DWS_DATA.dws_agr_xd_issue_business ib1 ON IFNULL(ib.org_issue_id,ib.issue_id)=ib1.issue_id AND ib1.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
left join DWS_DATA.dws_agr_xd_business xb        on ib.business_id = xb.business_id AND xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
WHERE t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
;


/*part2:按月收取费用(分段收取)
验证标的:ffe849cd-0e43-44e1-bd3c-bc138308dabc
*/
INSERT INTO tb_issue_business_apply_output_ods_tmp
SELECT 
  '按月收取费用' src_data
,t.issue_id
,IFNULL(ib.org_issue_id,ib.issue_id) AS src_issue_id -- 原标的号
,ib.business_id
-- ,ib1.business_id AS src_business_id -- 原业务单号
,xb.first_business_id AS src_business_id -- 原业务单号
,DATE_FORMAT(ib.full_time,'%Y-%m-%d')       AS  full_time      -- 启标时间
,DATE_FORMAT(ib.full_issue_date,'%Y-%m-%d') AS full_issue_date -- 满标时间
,0 AS one_time_fgsfw_amt  -- 分公司服务费
,0 AS one_time_syqzfw_amt -- 剩余前置服务费
,0 AS one_time_xzzhf_amt  -- 行政综合费
,0 AS one_time_dc_amt     -- 调查费 new add caihl20181208 
,0 AS one_time_zqsxf_amt  -- 展期手续费  new add caihl20181208
,0 AS one_time_ptf_amt     -- 平台费(一次性)
,0 AS one_time_dbf_amt     -- 担保费(一次性)
,IFNULL((CASE WHEN  t.fee_name IN ('月收分公司服务费') THEN t.fee_value * (t.fee_term_range_max - t.fee_term_range_min +1) END),0) AS mon_fgsfw_amt -- 分公司月服务费总额 分段收费乘以12
,IFNULL((CASE WHEN  t.fee_name IN ('月收平台费')       THEN t.fee_value * (t.fee_term_range_max - t.fee_term_range_min +1) END),0) AS mon_ptf_amt   -- 月收平台费         分段收费乘以12
/*
,IFNULL((CASE WHEN xb.platform_id=2 and t.fee_term_range_min = 1 AND t.fee_term_range_max = 1  and t.fee_name IN ('月收分公司服务费') then t.fee_value
              WHEN xb.platform_id=2 and t.fee_term_range_min = 2 AND t.fee_term_range_max = 12 and t.fee_name IN ('月收分公司服务费') then t.fee_value *(ifnull(ib.borrow_limit,0) - 1)  -- 你我金融第二段收费 fee_value *(借款期限-1)
              when ifnull(xb.platform_id,1)&lt;&gt;2 and t.fee_name IN ('月收分公司服务费') THEN t.fee_value * 12 END),0)         AS mon_fgsfw_amt -- 分公司月服务费总额 分段收费乘以12
-- ,IFNULL((CASE WHEN t.fee_name IN ('月收平台费')       THEN t.fee_value * 12 END),0)         AS mon_ptf_amt   -- 月收平台费         分段收费乘以12
,IFNULL((CASE WHEN xb.platform_id=2 and t.fee_term_range_min = 1 AND t.fee_term_range_max = 1  and t.fee_name IN ('月收平台费') then t.fee_value
              WHEN xb.platform_id=2 and t.fee_term_range_min = 2 AND t.fee_term_range_max = 12 and t.fee_name IN ('月收平台费') then t.fee_value *(ifnull(ib.borrow_limit,0) - 1)  -- 你我金融第二段收费 fee_value *(借款期限-1)
              when ifnull(xb.platform_id,1)&lt;&gt;2 and t.fee_name IN ('月收平台费') THEN t.fee_value * 12 END),0)               AS mon_ptf_amt -- 分公司月服务费总额 分段收费乘以12
*/,ifnull(ib.full_borrow_money,0) as full_borrow_money
FROM ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_detail_ods t
LEFT JOIN DWS_DATA.dws_agr_xd_issue_business ib  ON t.issue_id=ib.issue_id AND ib.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
-- LEFT JOIN DWS_DATA.dws_agr_xd_issue_business ib1 ON IFNULL(ib.org_issue_id,ib.issue_id)=ib1.issue_id AND ib1.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
left join DWS_DATA.dws_agr_xd_business xb        on ib.business_id = xb.business_id AND xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
WHERE t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
;


/*根据源业务单号+满标时间(出款时间) 汇总数据*/
CREATE TEMPORARY TABLE `tb_issue_business_apply_output_ods_tmp1` (
  `business_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号',
  `ext_business_id` VARCHAR(50) DEFAULT NULL COMMENT '展期业务单号',
  `full_issue_date` DATE DEFAULT NULL COMMENT '满标时间',
  `one_time_fgsfw_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_syqzfw_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_xzzhf_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_dc_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_zqsxf_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_ptf_amt` DECIMAL(34,2) DEFAULT 0.00,
  `one_time_dbf_amt` DECIMAL(34,2) DEFAULT 0.00,
  `mon_fgsfw_amt` DECIMAL(34,2) DEFAULT 0.00,
  `mon_ptf_amt` DECIMAL(34,2) DEFAULT 0.00,
   full_borrow_money   DECIMAL(12,2) NOT NULL DEFAULT '0.00' comment '标的满标金额',
  KEY idx_business_id(business_id),
  KEY idx_ext_business_id(ext_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
/*先获取标对应的满标日期和金额 再通过业务单号+满标日期汇总金额*/
INSERT INTO tb_issue_business_apply_output_ods_tmp1
SELECT
 t.business_id 
,t.ext_business_id
,t.full_issue_date
,SUM(one_time_fgsfw_amt     ) AS one_time_fgsfw_amt    -- 分公司服务费
,SUM(one_time_syqzfw_amt    ) AS one_time_syqzfw_amt   -- 剩余前置服务费
,SUM(one_time_xzzhf_amt     ) AS one_time_xzzhf_amt    -- 行政综合费
,SUM(one_time_dc_amt        ) AS one_time_dc_amt       -- 调查费 new add caihl20181208 
,SUM(one_time_zqsxf_amt     ) AS one_time_zqsxf_amt    -- 展期手续费  new add caihl20181208
,SUM(one_time_ptf_amt       ) AS one_time_ptf_amt       -- 平台费(一次性)
,SUM(one_time_dbf_amt       ) AS one_time_dbf_amt       -- 担保费(一次性)
,SUM(mon_fgsfw_amt          ) AS mon_fgsfw_amt          -- 分公司月服务费总额
,SUM(mon_ptf_amt            ) AS mon_ptf_amt            -- 月收平台费
,SUM(full_borrow_money      ) AS full_borrow_money
FROM (
SELECT 
 t.issue_id
,t.src_business_id AS business_id
,t.business_id AS ext_business_id
,t.full_issue_date
,SUM(one_time_fgsfw_amt     ) AS one_time_fgsfw_amt    -- 分公司服务费
,SUM(one_time_syqzfw_amt    ) AS one_time_syqzfw_amt   -- 剩余前置服务费
,SUM(one_time_xzzhf_amt     ) AS one_time_xzzhf_amt    -- 行政综合费
,SUM(one_time_dc_amt        ) AS one_time_dc_amt       -- 调查费 new add caihl20181208 
,SUM(one_time_zqsxf_amt     ) AS one_time_zqsxf_amt    -- 展期手续费  new add caihl20181208
,SUM(one_time_ptf_amt       ) AS one_time_ptf_amt       -- 平台费(一次性)
,SUM(one_time_dbf_amt       ) AS one_time_dbf_amt       -- 担保费(一次性)
,SUM(mon_fgsfw_amt          ) AS mon_fgsfw_amt          -- 分公司月服务费总额
,SUM(mon_ptf_amt            ) AS mon_ptf_amt            -- 月收平台费
,MAX(full_borrow_money      ) AS full_borrow_money
FROM tb_issue_business_apply_output_ods_tmp t
WHERE t.full_issue_date IS NOT NULL -- 排除掉没有时间数据(比如 status_flag= -50为财务未上标)
GROUP BY
 t.issue_id 
,t.src_business_id
,t.business_id
,t.full_issue_date
)t
GROUP BY
 t.business_id 
,t.ext_business_id
,t.full_issue_date
;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','0:处理多次出款的情况', '100', '获取业务编号基本信息和出款时间', 0,'${p_day}',  NOW(),  'dl' );

/**********************处理多次出款的情况(多次出款显示多条记录)end**************************************/  
  
  
DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp00`;
CREATE TEMPORARY TABLE `output_detail_tmp00` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`src_type` INT(11) NULL DEFAULT NULL COMMENT '',
KEY `output_detail_tmp00_car_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

 INSERT INTO output_detail_tmp00
 SELECT DISTINCT t1.`orig_business_id`,IFNULL(t1.`src_type`,1) src_type
 FROM ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_dh_ods t1
 WHERE t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;	

DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp`; 
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp` (
  `business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
  KEY `idx_business_id` (`business_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into  dws_agr_xd_issue_business_tmp
SELECT ib.`business_id`
FROM DWS_DATA.dws_agr_xd_issue_business ib 
WHERE ib.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND ib.`full_issue_date` IS NOT NULL
GROUP BY ib.business_id
; 
 
/*add by caihl20181212
对于展期业务单号为房业务从tb_business_exhibition_compliance取
对于展期业务单号为车易贷展期业务先暂时从dws_agr_xd_business.apply_borrow_money取
*/
CREATE TEMPORARY TABLE `tb_business_exhibition_compliance_ods_tmp` (
  `extension_id` varchar(50) DEFAULT NULL COMMENT '[展期编号]',
  `extension_amount` decimal(12,2) DEFAULT 0.00 COMMENT '[展期金额]',
  KEY `idx_extension_id` (`extension_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into tb_business_exhibition_compliance_ods_tmp
SELECT 
be.`extension_id`,be.`extension_amount`
 FROM ODS_XD_TUANDAI_BM.tb_business_exhibition_compliance_ods be
WHERE be.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
;


DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp1`;
CREATE TEMPORARY TABLE `output_detail_tmp1` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`first_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`customer_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称',
	`branch_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务所属分公司编号',
	`area_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域编号',
	`is_extion` VARCHAR(10) DEFAULT NULL COMMENT '是否展期',
	`is_issue` VARCHAR(10) DEFAULT NULL COMMENT '是否上标',
	`loan_rate` DECIMAL(10,4) DEFAULT NULL COMMENT '年利率',
	`borrow_limit` INT(11) DEFAULT NULL COMMENT '借款期限',
	`shd_principa_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款金额',
	`platform_id` VARCHAR(10) DEFAULT NULL COMMENT '资金方',
	borrow_money DECIMAL(12,2) NULL DEFAULT 0.00 COMMENT '申请借款金额',
KEY `output_detail_tmp1_business_id`(BUSINESS_ID),
KEY `output_detail_tmp1_branch_id`(branch_id),
KEY `output_detail_tmp1_area_id`(area_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO output_detail_tmp1
SELECT t2.business_id,
       t2.first_business_id,
       t2.business_type,--	业务类型
	   t2.customer_name, -- 客户姓名
	   t2.branch_id,
	   t2.area_id,
	   CASE WHEN t2.business_id LIKE '%ZQ%' THEN '是' ELSE '否' END is_extion,
       CASE WHEN IFNULL(t2.issue_type,0) = 0 THEN '否' ELSE '是' END is_issue,
	   t2.`loan_rate`,
	   t2.`apply_borrow_limit` as borrow_limit,
	   -- t2.`shd_principa_amt`,
	   (case when t2.business_type ='T500'    then t2.apply_borrow_money -- 车易贷展期
	         when be.extension_id is not null then be.extension_amount   -- 房速贷展期
			 when t2.`shd_principa_amt`=0     then t2.apply_borrow_money -- 对于还未生成还款计划的单
			 else t2.`shd_principa_amt` end
	    ) as shd_principa_amt,  -- modify by caihl20181211
	   CASE WHEN ib.business_id is null then '线下出款' when t2.`platform_id`= 2 THEN '你我金融' ELSE '团贷网' END platform_id, -- modify by caihl20181212 对于未上标的都为线下出款
	   t2.apply_borrow_money as borrow_money
FROM DWS_DATA.dws_agr_xd_business t2
-- left join ODS_XD_TUANDAI_BM.tb_business_ods  tb on t2.first_business_id = tb.business_id and tb.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') 
left join dws_agr_xd_issue_business_tmp      ib on t2.business_id       = ib.business_id
left join tb_business_exhibition_compliance_ods_tmp be on t2.business_id= be.extension_id
WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  AND (IFNULL(t2.`business_type_detail` ,'business') NOT IN ('T150','A100') OR t2.business_type &lt;&gt; 'T140'); -- 20181101 巧芬剔除汽车垫资代采、汽车融资租赁、扶贫贷 


		
 DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp01`;
CREATE TEMPORARY TABLE `output_detail_tmp01` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`out_date` DATETIME NULL DEFAULT NULL COMMENT '[合并还款计划时间]',
KEY `output_detail_tmp01_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO output_detail_tmp01
SELECT t3.business_id,MIN(out_date) out_date
FROM DWS_DATA.dws_evt_xd_output_list t3
WHERE t3.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND t3.out_date >= '2016-03-11'
  AND t3.is_issue = '0'
GROUP BY t3.business_id;

INSERT INTO output_detail_tmp01
SELECT a.BUSINESS_ID,
	   MIN(a.full_time) out_date
FROM DWS_DATA.dws_agr_xd_issue_business a
WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND IFNULL(a.full_time,'') != ''
GROUP BY a.BUSINESS_ID;

-- 2018年10月补录的单，因没有补录出款信息，需求方提出以进件日期代替出款日期
INSERT INTO output_detail_tmp01
SELECT t2.business_id,
	    DATE_FORMAT(t2.input_time,'%Y-%m-%d') out_date
FROM DWS_DATA.dws_agr_xd_business t2
WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND IFNULL(t2.`customer_class`,0) = -1 
AND DATE_FORMAT(input_time,'%Y-%m-%d')  >= '2016-03-11';

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','output_detail_tmp1', '100', '获取业务编号基本信息和出款时间', 0,'${p_day}',  NOW(),  'dl' );	

/*
修复戴良以前月收从还款计划取值的问题 caihl20181213
 */ 
/* add by caihl20181213 begin
月平台费对于超过12期的 *12期
*/
DROP TEMPORARY TABLE IF EXISTS tb_business_apply_output_ods_tmp;
CREATE TEMPORARY TABLE `tb_business_apply_output_ods_tmp` (
  `src_data` INT(1) NOT NULL DEFAULT '0',
  `business_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号',
  `one_time_fgsfw_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `one_time_syqzfw_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `one_time_xzzhf_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `mon_fgsfw_amt`      DECIMAL(42,2) NOT NULL DEFAULT '0.00',
  `one_time_ptf_amt`   DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `mon_ptf_amt`       DECIMAL(42,2) NOT NULL DEFAULT '0.00',
  `one_time_dbf_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `one_time_dc_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00',
  `one_time_zqsxf_amt` DECIMAL(32,2) NOT NULL DEFAULT '0.00'
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_business_apply_output_ods_tmp
SELECT     
1 AS src_data, -- 非分段费用
t1.business_id, 
t1.one_time_fgsfw_amt,
t1.one_time_syqzfw_amt,
t1.one_time_xzzhf_amt,
t1.mon_fgsfw_amt * IFNULL(xb.borrow_limit,0) AS mon_fgsfw_amt,  -- modify by caihl20181212
t1.one_time_ptf_amt,
t1.mon_ptf_amt   * IFNULL((case when xb.borrow_limit>12 then 12 else xb.borrow_limit end),0) AS mon_ptf_amt,    -- modify by caihl20181212
t1.one_time_dbf_amt,
t1.one_time_dc_amt,    -- 一次性调查费
t1.one_time_zqsxf_amt  -- 一次性展期手续费
FROM (
SELECT
a.business_id,
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('分公司服务费') THEN a.fee_value END),0) one_time_fgsfw_amt, -- 分公司服务费
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('剩余前置服务费') THEN a.fee_value END),0) one_time_syqzfw_amt, -- 剩余前置服务费
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('行政综合费' ) THEN a.fee_value END),0) one_time_xzzhf_amt, -- 行政综合费
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 1 AND IFNULL(a.is_term_range,0) &lt;&gt;1 AND a.fee_item_name LIKE '%月收分公司服务费%' and a.fee_type_name ='分公司费用'  THEN a.fee_value END),0) mon_fgsfw_amt, -- 分公司月服务费总额(只取大类为分公司费用) 由于含有 合作公司所属团贷网分公司服务费 和分公司费用
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('平台费') THEN a.fee_value END),0) one_time_ptf_amt,  -- 平台费(一次性)
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 1 AND IFNULL(a.is_term_range,0) &lt;&gt;1 AND a.fee_item_name IN ('月收平台费') THEN a.fee_value END),0) mon_ptf_amt,  -- 月收平台费
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('担保费') THEN a.fee_value END),0) one_time_dbf_amt,  -- 担保费(一次性)
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('调查费')     THEN a.fee_value END),0) AS one_time_dc_amt,    -- 一次性调查费
IFNULL(SUM(CASE WHEN a.is_one_time_charge = 2 AND a.fee_item_name IN ('展期手续费') THEN a.fee_value END),0) AS one_time_zqsxf_amt  -- 一次性展期手续费
FROM ODS_XD_TUANDAI_BM.tb_business_apply_output_ods a 
WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND a.business_id IS NOT NULL
GROUP BY a.business_id
) t1 
LEFT JOIN output_detail_tmp1     xb ON t1.business_id = xb.business_id
;

INSERT INTO tb_business_apply_output_ods_tmp
SELECT     
2 AS src_data, -- 分段费用
t1.business_id, 
t1.one_time_fgsfw_amt,
t1.one_time_syqzfw_amt,
t1.one_time_xzzhf_amt,
t1.mon_fgsfw_amt,  -- modify by caihl20181212
t1.one_time_ptf_amt,
t1.mon_ptf_amt ,    -- modify by caihl20181212
t1.one_time_dbf_amt,
t1.one_time_dc_amt,    -- 一次性调查费
t1.one_time_zqsxf_amt  -- 一次性展期手续费
FROM (
SELECT
a.business_id,
0 AS one_time_fgsfw_amt, -- 分公司服务费
0 AS one_time_syqzfw_amt, -- 剩余前置服务费
0 AS one_time_xzzhf_amt, -- 行政综合费
IFNULL(SUM(CASE WHEN a.fee_name LIKE '%月收分公司服务费%'  THEN a.fee_value * (a.fee_term_range_max - a.fee_term_range_min +1) END),0) AS mon_fgsfw_amt, -- 分公司月服务费总额
0 AS one_time_ptf_amt,  -- 平台费(一次性)
IFNULL(SUM(CASE WHEN a.fee_name IN ('月收平台费')          THEN a.fee_value * (a.fee_term_range_max - a.fee_term_range_min +1) END),0) AS mon_ptf_amt,  -- 月收平台费
0 AS one_time_dbf_amt,  -- 担保费(一次性)
0 AS one_time_dc_amt,    -- 一次性调查费
0 AS one_time_zqsxf_amt  -- 一次性展期手续费
FROM ODS_XD_TUANDAI_BM.tb_business_apply_output_detail_ods a 
WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND a.business_id IS NOT NULL
GROUP BY a.business_id
) t1 
; 
/* add by caihl20181213 end*/
 
DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp2`;
CREATE TEMPORARY TABLE `output_detail_tmp2` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`date_id` DATETIME NULL DEFAULT NULL COMMENT '[合并还款计划时间]',
	`one_time_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司服务费',
	`one_time_syqzfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '剩余前置服务费',
	`one_time_xzzhf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '行政综合费',
	`mon_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费总额',
	`one_time_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台费(一次性)',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '月收平台费',
	`one_time_dbf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '担保费(一次性)',
	one_time_dc_amt    DECIMAL(12,2) NOT NULL DEFAULT '0.00'  COMMENT '一次性调查费',
	one_time_zqsxf_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00'  COMMENT '一次性展期手续费',
KEY `output_detail_tmp2_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;



INSERT INTO output_detail_tmp2
SELECT t3.first_business_id AS business_id,
       t1.business_id AS ext_business_id,
       DATE_FORMAT(t4.out_date,'%Y-%m-%d') AS date_id, 
       t1.one_time_fgsfw_amt,
	   t1.one_time_syqzfw_amt,
	   t1.one_time_xzzhf_amt,
	   -- t1.mon_fgsfw_amt * ifnull(t3.borrow_limit,0) as mon_fgsfw_amt,  -- modify by caihl20181212
	   t1.mon_fgsfw_amt ,
	   t1.one_time_ptf_amt,
	   -- t1.mon_ptf_amt   * ifnull(t3.borrow_limit,0) as mon_ptf_amt,    -- modify by caihl20181212
	   t1.mon_ptf_amt,
	   t1.one_time_dbf_amt,
	   t1.one_time_dc_amt,    -- 一次性调查费
	   t1.one_time_zqsxf_amt  -- 一次性展期手续费
	   
FROM 
/*
(SELECT a.`business_id`,
       IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('分公司服务费') THEN a.`fee_value` END),0) one_time_fgsfw_amt, -- 分公司服务费
       IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('剩余前置服务费') THEN a.`fee_value` END),0) one_time_syqzfw_amt, -- 剩余前置服务费
       IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('行政综合费' ) THEN a.`fee_value` END),0) one_time_xzzhf_amt, -- 行政综合费
       ifnull(SUM(CASE WHEN a.`is_one_time_charge` = 1 and a.`fee_item_name` like '%月收分公司服务费%'  THEN a.`fee_value` END),0) mon_fgsfw_amt, -- 分公司月服务费总额
       IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('平台费') THEN a.`fee_value` END),0) one_time_ptf_amt,  -- 平台费(一次性)
       ifnull(SUM(CASE WHEN a.`is_one_time_charge` = 1 and a.`fee_item_name` IN ('月收平台费') THEN a.`fee_value` END),0) mon_ptf_amt,  -- 月收平台费
       IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('担保费') THEN a.`fee_value` END),0) one_time_dbf_amt,  -- 担保费(一次性)
	   IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('调查费')     THEN a.`fee_value` END),0) as one_time_dc_amt,    -- 一次性调查费
	   IFNULL(SUM(CASE WHEN a.`is_one_time_charge` = 2 AND a.`fee_item_name` IN ('展期手续费') THEN a.`fee_value` END),0) as one_time_zqsxf_amt  -- 一次性展期手续费
FROM ODS_XD_TUANDAI_BM.`tb_business_apply_output_ods` a 
WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND a.business_id IS NOT NULL
GROUP BY a.`business_id`
)t1
*/
tb_business_apply_output_ods_tmp t1
LEFT JOIN output_detail_tmp1     t3 ON t1.business_id = t3.business_id
JOIN output_detail_tmp01 t4 ON t1.business_id = t4.business_id;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','output_detail_tmp2', '200', '获取出款费用明细', 0,'${p_day}',  NOW(),  'dl' );	
  
  
  
  
DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp3`;
CREATE TEMPORARY TABLE `output_detail_tmp3` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`business_after_id` VARCHAR(50) NOT NULL COMMENT '[期数]',
	`plan_repayment_date` DATETIME NULL DEFAULT NULL COMMENT '[合并还款计划时间]',
	`mon_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台月服务费',
KEY `output_detail_tmp3_car_business_id`(car_business_id),
KEY `output_detail_tmp3_business_after_id`(business_after_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO output_detail_tmp3
SELECT business_id car_business_id,
       business_after_id,
	   `plan_repayment_date`,
       mon_fgsfw_amt,
       mon_ptf_amt
FROM (SELECT  a.`business_id`,
				a.`business_after_id`,
				a.`plan_repayment_date`,
				SUM(CASE WHEN a.fee_name LIKE '%月收分公司服务费%' THEN IFNULL(a.plan_fee_value,0) ELSE 0 END) mon_fgsfw_amt,
				SUM(CASE WHEN a.fee_name LIKE '%平台费%' THEN a.plan_fee_value ELSE 0 END) mon_ptf_amt
		FROM ODS_XD_TUANDAI_BM.`tb_car_business_after_detail_ods` a
		WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
		  AND a.`business_after_id` NOT LIKE '%00%' 
		GROUP BY a.`business_id`,
				 a.`business_after_id`,
				 a.`plan_repayment_date`)t 
LEFT JOIN output_detail_tmp00 b ON t.business_id = b.car_business_id
WHERE mon_ptf_amt+mon_fgsfw_amt >0
  AND b.src_type = 1
  ;
  
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','output_detail_tmp3', '300', '统计信贷系统按月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	

DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp4`;
CREATE TEMPORARY TABLE `output_detail_tmp4` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`date_id` DATE NULL DEFAULT NULL COMMENT '[统计日期]',
	`mon_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台月服务费',
KEY `output_detail_tmp4_car_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO output_detail_tmp4
SELECT o.car_business_id,
       o.ext_business_id,
       a.plan_repayment_date date_id,
       IFNULL(a.mon_fgsfw_amt,0) mon_fgsfw_amt,
       IFNULL(a.mon_ptf_amt,0) mon_ptf_amt
FROM (SELECT o.car_business_id, car_business_after_id, repayed_flag,finance_confirmed_date,fatct_replayDate,IFNULL(o.`car_business_after_defer`,o.`car_business_id`)ext_business_id ,fact_principa
		FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods o 
		JOIN output_detail_tmp00 t1 ON o.car_business_id = t1.car_business_id 
		WHERE o.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
		  AND IFNULL(o.repayed_flag,0)!=6	
		  AND t1.src_type = 1) o
LEFT JOIN output_detail_tmp3 a ON a.car_business_id = o.car_business_id AND a.business_after_id = o.car_business_after_id ;  -- repayed_type = 6 表示申请展期的那一期


INSERT INTO output_detail_tmp4
SELECT t2.orig_business_id AS car_business_id,
       t1.business_id AS ext_business_id,
       t1.due_date date_id,
       t1.mon_fgsfw_amt,
       t1.mon_ptf_amt
FROM 
(SELECT a.`plan_list_id`,
	   a.`business_id`,
	   a.due_date,
		SUM(CASE WHEN a.plan_item_name LIKE '%月收分公司服务费%' THEN a.plan_amount ELSE 0 END) mon_fgsfw_amt,
		SUM(CASE WHEN a.plan_item_name LIKE '%平台费%' THEN a.plan_amount ELSE 0 END) mon_ptf_amt
FROM  `ODS_XD_TUANDAI_BM`.`tb_repayment_biz_plan_list_detail_dh_ods` a
WHERE IFNULL(a.`src_type`,1) != 1
  AND part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  GROUP BY a.`plan_list_id`,
	   a.`business_id`,
	   a.due_date)t1
LEFT JOIN (
SELECT t.`plan_list_id`,t.`orig_business_id`,t.`fact_repay_date`,t.`finance_comfirm_date`, IFNULL(t.`repay_flag`,0) repay_flag
FROM `ODS_XD_TUANDAI_BM`.`tb_repayment_biz_plan_list_dh_ods` t 
WHERE IFNULL(t.`src_type`,1) != 1 
  AND t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  )t2 ON t1.plan_list_id = t2.plan_list_id
WHERE IFNULL(t2.repay_flag,0) !=6; 
  

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','output_detail_tmp4', '400', '统计贷后系统和信贷系统月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	  

DROP TEMPORARY TABLE IF EXISTS `output_detail_tmp5`;
CREATE TEMPORARY TABLE `output_detail_tmp5` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[展期业务编号]',
	`date_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '[统计日期]',
	`one_time_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司服务费',
	`one_time_syqzfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '剩余前置服务费',
	`one_time_xzzhf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '行政综合费',
	 `mon_fgsfw_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费总额',
	`one_time_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台费(一次性)',
	 `mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '月收平台费',
	`one_time_dbf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '担保费(一次性)',
	`one_time_dc_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '一次性调查费',
	`one_time_zqsxf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '一次性展期手续费',
KEY `output_detail_tmp5_business_id`(business_id),
KEY `output_detail_tmp5_ext_business_id`(ext_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ; 
INSERT INTO output_detail_tmp5 
SELECT *
FROM (
		SELECT  tt.business_id,
				tt.ext_business_id,
			   tt.date_id,
			   SUM(one_time_fgsfw_amt) one_time_fgsfw_amt,
			   SUM(one_time_syqzfw_amt) one_time_syqzfw_amt,
			   SUM(one_time_xzzhf_amt) one_time_xzzhf_amt,
			   SUM(mon_fgsfw_amt) mon_fgsfw_amt,
			   SUM(one_time_ptf_amt) one_time_ptf_amt,
			   SUM(mon_ptf_amt) mon_ptf_amt,
			   SUM(one_time_dbf_amt) one_time_dbf_amt,
			   sum(one_time_dc_amt) as one_time_dc_amt,
			   sum(one_time_zqsxf_amt) as one_time_zqsxf_amt
		FROM 
		(
			SELECT t1.business_id,
				   t1.ext_business_id,
		           DATE_FORMAT(t1.date_id,'%Y-%m-%d') date_id,
				   t1.one_time_fgsfw_amt,
				   t1.one_time_syqzfw_amt,
				   t1.one_time_xzzhf_amt,
				   t1.mon_fgsfw_amt,
				   t1.one_time_ptf_amt,
				   t1.mon_ptf_amt,
				   t1.one_time_dbf_amt,
				   t1.one_time_dc_amt,
				   t1.one_time_zqsxf_amt
			FROM output_detail_tmp2 t1
		)tt
		GROUP BY  tt.business_id,
				  tt.ext_business_id,
				  tt.date_id
		  ) td 
WHERE one_time_fgsfw_amt+one_time_syqzfw_amt+one_time_xzzhf_amt+mon_fgsfw_amt + one_time_ptf_amt + mon_ptf_amt+ one_time_dbf_amt>0;

/*
INSERT INTO output_detail_tmp5 
SELECT *
FROM (
		SELECT  tt.business_id,
				tt.ext_business_id,
			   tt.date_id,
			   SUM(one_time_fgsfw_amt) one_time_fgsfw_amt,
			   SUM(one_time_syqzfw_amt) one_time_syqzfw_amt,
			   SUM(one_time_xzzhf_amt) one_time_xzzhf_amt,
			   SUM(mon_fgsfw_amt) mon_fgsfw_amt,
			   SUM(one_time_ptf_amt) one_time_ptf_amt,
			   SUM(mon_ptf_amt) mon_ptf_amt,
			   SUM(one_time_dbf_amt) one_time_dbf_amt,
			   sum(one_time_dc_amt) as one_time_dc_amt,
			   sum(one_time_zqsxf_amt) as one_time_zqsxf_amt
		FROM 
		(
			SELECT t1.business_id,
				   t1.ext_business_id,
		           DATE_FORMAT(t1.date_id,'%Y-%m-%d') date_id,
				   t1.one_time_fgsfw_amt,
				   t1.one_time_syqzfw_amt,
				   t1.one_time_xzzhf_amt,
				   0 AS mon_fgsfw_amt,
				   t1.one_time_ptf_amt,
				   0 AS mon_ptf_amt,
				   t1.one_time_dbf_amt,
				   t1.one_time_dc_amt,
				   t1.one_time_zqsxf_amt
			FROM output_detail_tmp2 t1
			UNION ALL
			 SELECT t1.car_business_id AS business_id, 
				   t1.ext_business_id,
		           DATE_FORMAT(t1.date_id,'%Y-%m-%d') date_id,
				   0 AS one_time_fgsfw_amt,
				   0 AS one_time_syqzfw_amt,
				   0 AS one_time_xzzhf_amt,
				   t1.mon_fgsfw_amt,
				   0 AS one_time_ptf_amt,
				   t1.mon_ptf_amt,
				   0 AS one_time_dbf_amt,
				   0 as one_time_dc_amt,
				   0 as one_time_zqsxf_amt
			FROM output_detail_tmp4 t1
		)tt
		GROUP BY  tt.business_id,
				  tt.ext_business_id,
				  tt.date_id
		  ) td 
WHERE one_time_fgsfw_amt+one_time_syqzfw_amt+one_time_xzzhf_amt+mon_fgsfw_amt + one_time_ptf_amt + mon_ptf_amt+ one_time_dbf_amt>0;
 */   

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','output_detail_tmp5', '500', '汇总贷后系统和信贷系统一次性收和月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	
    
  
  
ALTER TABLE dma_sal_achv_output_detail_his TRUNCATE PARTITION dma_sal_achv_output_detail_his_${pt_day};
/*par1:多次出款数据插入到目标表*/
INSERT INTO dma_sal_achv_output_detail_his 	  
SELECT     t1.business_id,
	       t1.ext_business_id,
		   t1.full_issue_date as date_id,
		   t1.full_issue_date as out_date,
		   t4.business_type_nm,
		   t5.branch_nm,
		   t5.area_nm,
		   t2.`customer_name`,
	       t2.is_issue,
		   t2.`loan_rate`,
		   t2.`borrow_limit`,
		  -- t2.`shd_principa_amt`,
		   t1.full_borrow_money as shd_principa_amt, -- 对于2018年拆标的单 多次出款根据标对应的满标时间进行汇总
		   t2.platform_id,
		   t1.one_time_fgsfw_amt,
		   t1.one_time_syqzfw_amt,
		   t1.one_time_xzzhf_amt,
		   t1.mon_fgsfw_amt,
		   t1.one_time_ptf_amt,
	       t1.mon_ptf_amt,
		   t1.one_time_dbf_amt,
		   NOW() dw_ins_tm,
		   'dl' dw_ins_usr,
		    DATE_FORMAT('${pt_day}','%Y-%m-%d') part_dt,
			1 as src_data,
			t1.one_time_dc_amt,     -- 调查费 new add caihl20181208
			t1.one_time_zqsxf_amt  -- 展期手续费  new add caihl20181208
FROM tb_issue_business_apply_output_ods_tmp1 t1
JOIN (SELECT DISTINCT  t2.business_id,
				   t2.first_business_id,
				   t2.business_type,--	业务类型
				   t2.customer_name, -- 客户姓名
				   t2.branch_id,
				   t2.area_id,
				   t2.is_extion,
				   t2.is_issue,
				   t2.`loan_rate`,
				   t2.`borrow_limit`,
				   t2.`shd_principa_amt`,
				   t2.platform_id
	   FROM output_detail_tmp1 t2
      ) t2 ON t1.ext_business_id = t2.business_id
	 --  WHERE t2.business_id NOT LIKE '%ZQ%') t2 ON t1.business_id = t2.first_business_id
-- JOIN output_detail_tmp01 t3 ON t1.ext_business_id = t3.business_id
LEFT JOIN DIM_DATA.`dim_prd_xd_business_type` t4 ON t2.business_type = t4.business_type
LEFT JOIN DIM_DATA.dim_org_info t5 ON t2.branch_id = t5.branch_id
WHERE t5.dw_src_sys ='xd'
AND t1.business_id NOT IN ('TDF1012017071903')  -- add by caihl20181129 TDF1012017071903 该笔属于管车所业务，但是上标用房速贷业务类型，所以本息情况表（新）屏蔽掉该笔业务，不统计。
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (IFNULL(xb.`business_type_detail` ,'business')  IN ('T150'))
                AND xb.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (xb.business_type  IN ('A100','T140'))
                AND xb.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
			  
;


/*par2:以前戴良的按业务单号的数据插入目标表
caihl20181215 'TDF2012018011702','TDF8392018012810' 这两个单只满标了部分，临时方案按照比例计算，后续和tb_business借款金额对比是否部分满标
*/

INSERT INTO dma_sal_achv_output_detail_his 	  
SELECT     t1.business_id,
	       t1.ext_business_id,
		   t1.date_id,
		   DATE_FORMAT(t3.out_date,'%Y-%m-%d'),
		   t4.business_type_nm,
		   t5.branch_nm,
		   t5.area_nm,
		   t2.`customer_name`,
	       t2.is_issue,
		   t2.`loan_rate`,
		   t2.`borrow_limit`,
		   t2.`shd_principa_amt`,
		   t2.platform_id,
		   t1.one_time_fgsfw_amt,
		   t1.one_time_syqzfw_amt,
		   t1.one_time_xzzhf_amt,
		   (case when t1.business_id in ('TDF2012018011702','TDF8392018012810') then t1.mon_fgsfw_amt *(t2.shd_principa_amt/t2.borrow_money) else t1.mon_fgsfw_amt end) as mon_fgsfw_amt,
		   t1.one_time_ptf_amt,
	       (case when t1.business_id in ('TDF2012018011702','TDF8392018012810') then t1.mon_ptf_amt   *(t2.shd_principa_amt/t2.borrow_money) else t1.mon_ptf_amt   end) as mon_ptf_amt,
		   t1.one_time_dbf_amt,
		   NOW() dw_ins_tm,
		   'dl' dw_ins_usr,
		    DATE_FORMAT('${pt_day}','%Y-%m-%d') part_dt,
			2 as src_data,
			t1.one_time_dc_amt,     -- 调查费 new add caihl20181208
			t1.one_time_zqsxf_amt   -- 展期手续费  new add caihl20181208
FROM output_detail_tmp5 t1
JOIN (SELECT DISTINCT  t2.business_id,
				   t2.first_business_id,
				   t2.business_type,--	业务类型
				   t2.customer_name, -- 客户姓名
				   t2.branch_id,
				   t2.area_id,
				   t2.is_extion,
				   t2.is_issue,
				   t2.`loan_rate`,
				   t2.`borrow_limit`,
				   t2.`shd_principa_amt`,
				   t2.platform_id,
				   t2.borrow_money
	   FROM output_detail_tmp1 t2
	         ) t2 ON t1.ext_business_id = t2.business_id
	 --  WHERE t2.business_id NOT LIKE '%ZQ%') t2 ON t1.business_id = t2.first_business_id
JOIN output_detail_tmp01 t3 ON t1.ext_business_id = t3.business_id
LEFT JOIN DIM_DATA.`dim_prd_xd_business_type` t4 ON t2.business_type = t4.business_type
LEFT JOIN DIM_DATA.dim_org_info t5 ON t2.branch_id = t5.branch_id
WHERE t5.dw_src_sys ='xd'
AND t1.business_id NOT IN ('TDF1012017071903')  -- add by caihl20181129 TDF1012017071903 该笔属于管车所业务，但是上标用房速贷业务类型，所以本息情况表（新）屏蔽掉该笔业务，不统计。
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (IFNULL(xb.`business_type_detail` ,'business')  IN ('T150'))
                AND xb.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (xb.business_type  IN ('A100','T140'))
                AND xb.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
and not exists (select 1 from tb_issue_business_apply_output_ods_tmp1 ibao where ibao.ext_business_id = t1.ext_business_id) -- 排除掉tb_issue_business_apply_output_ods_tmp1已经有的数据			  
;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '300', '出款明细表，成功！！！！', 0,'${p_day}',  NOW(),  'dl' );




</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：dma_sal_achv_output_detail_his 核心账务报表-出款明细表（房速贷）
创建时间：20181113
创建人   ：dailiang
源系统	 ：tuandai_bm hongte_alms
数据源表：
运行频率：天(存历史数据)
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181129 1215冲刺核心账务剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据 和过滤 TDF1012017071903这个单
caihl20181208  加入多次出款是数据
caihl20181215 'TDF2012018011702','TDF8392018012810' 这两个单只满标了部分，临时方案按照比例计算，后续和tb_business借款金额对比是否部分满标</note>
      <xloc>0</xloc>
      <yloc>0</yloc>
      <width>852</width>
      <heigth>235</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

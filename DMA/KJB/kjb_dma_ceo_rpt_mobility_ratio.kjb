<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_ceo_rpt_mobility_ratio</name>
  <description/>
  <extended_description>CEO看板-贷后逾期迁徙率统计</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_fsd_defer_settle_pending_detail</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1296</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>848</xloc>
      <yloc>336</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '更新任务标识，完成！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1168</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>704</xloc>
      <yloc>608</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>992</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共8步！！', 0,'${p_day}',  NOW(),  'dl' );

DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp1`;
CREATE TEMPORARY TABLE `mob_pct_tmp1` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`ovd_stage` INT(11) NULL DEFAULT NULL COMMENT '业务类型',
	`day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
KEY `mob_pct_tmp1_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp1
SELECT a.`business_id`,
       business_type_nm,
	   area_nm,
	   branch_nm,
	   0 ovd_stage,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.part_dt ELSE NULL END) day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.part_dt ELSE NULL END) week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.part_dt ELSE NULL END) mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01')  THEN a.part_dt ELSE NULL END) qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.part_dt ELSE NULL END) year_part_dt ,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.part_dt ELSE NULL END) last_day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY) THEN a.part_dt ELSE NULL END) last_week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.part_dt ELSE NULL END) last_mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' )  THEN a.part_dt ELSE NULL END) last_qua_part_dt,
	   MAX(CASE WHEN a.part_dt>= CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) last_year_part_dt
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a
WHERE ovd_stage = 0
GROUP BY business_id,business_type_nm,area_nm,branch_nm;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','issue_ovd_detail_tmp1', '100', '获取逾期业务编号和期数', 0,'${p_day}',  NOW(),  'dl' );
  
  
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp2`;
CREATE TEMPORARY TABLE `mob_pct_tmp2` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`ovd_stage` INT(11) NULL DEFAULT NULL COMMENT '业务类型',
	`day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
KEY `mob_pct_tmp2_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp2
SELECT a.`business_id`,
       business_type_nm,
	   area_nm,
	   branch_nm,
	   1 ovd_stage,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.part_dt ELSE NULL END) day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.part_dt ELSE NULL END) week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(NOW()),'%Y-%m-'),'01'), '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.part_dt ELSE NULL END) qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.part_dt ELSE NULL END) year_part_dt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.part_dt ELSE NULL END) last_day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)THEN a.part_dt ELSE NULL END) last_week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.part_dt ELSE NULL END) last_mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' )  THEN a.part_dt ELSE NULL END) last_qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) last_year_part_dt,

	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d')THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_accrual_amt ELSE 0 END) AS week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_accrual_amt ELSE 0 END) AS qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS year_left_loan_amt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_accrual_amt ELSE 0 END) AS last_week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS last_mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_year_left_loan_amt
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a
WHERE ovd_stage = 1
GROUP BY business_id,business_type_nm,area_nm,branch_nm;

  
 
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp3`;
CREATE TEMPORARY TABLE `mob_pct_tmp3` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`ovd_stage` INT(11) NULL DEFAULT NULL COMMENT '业务类型',
	`day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
KEY `mob_pct_tmp3_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp3
SELECT a.`business_id`,
       business_type_nm,
	   area_nm,
	   branch_nm,
	   2 ovd_stage,
	    MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.part_dt ELSE NULL END) day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.part_dt ELSE NULL END) week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(NOW()),'%Y-%m-'),'01'), '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.part_dt ELSE NULL END) qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.part_dt ELSE NULL END) year_part_dt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.part_dt ELSE NULL END) last_day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)THEN a.part_dt ELSE NULL END) last_week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.part_dt ELSE NULL END) last_mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' )  THEN a.part_dt ELSE NULL END) last_qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) last_year_part_dt,

	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d')THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_accrual_amt ELSE 0 END) AS week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_accrual_amt ELSE 0 END) AS qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS year_left_loan_amt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_accrual_amt ELSE 0 END) AS last_week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS last_mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_year_left_loan_amt
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a
WHERE ovd_stage = 2
GROUP BY business_id,business_type_nm,area_nm,branch_nm;
  
  
  
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp4`;
CREATE TEMPORARY TABLE `mob_pct_tmp4` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`ovd_stage` INT(11) NULL DEFAULT NULL COMMENT '业务类型',
	`day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
KEY `mob_pct_tmp4_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp4
SELECT a.`business_id`,
       business_type_nm,
	   area_nm,
	   branch_nm,
	   3 ovd_stage,
	    MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.part_dt ELSE NULL END) day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.part_dt ELSE NULL END) week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(NOW()),'%Y-%m-'),'01'), '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.part_dt ELSE NULL END) qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.part_dt ELSE NULL END) year_part_dt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.part_dt ELSE NULL END) last_day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)THEN a.part_dt ELSE NULL END) last_week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.part_dt ELSE NULL END) last_mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' )  THEN a.part_dt ELSE NULL END) last_qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) last_year_part_dt,

	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d')THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_accrual_amt ELSE 0 END) AS week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_accrual_amt ELSE 0 END) AS qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS year_left_loan_amt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_accrual_amt ELSE 0 END) AS last_week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS last_mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_year_left_loan_amt
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a
WHERE ovd_stage = 3
GROUP BY business_id,business_type_nm,area_nm,branch_nm;
  
  
 
  
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp5`;
CREATE TEMPORARY TABLE `mob_pct_tmp5` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`ovd_stage` INT(11) NULL DEFAULT NULL COMMENT '业务类型',
	`day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_part_dt` date NULL DEFAULT NULL COMMENT '业务类型',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
KEY `mob_pct_tmp5_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp5
SELECT a.`business_id`,
       business_type_nm,
	   area_nm,
	   branch_nm,
	   4 ovd_stage,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.part_dt ELSE NULL END) day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.part_dt ELSE NULL END) week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(NOW()),'%Y-%m-'),'01'), '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.part_dt ELSE NULL END) qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.part_dt ELSE NULL END) year_part_dt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.part_dt ELSE NULL END) last_day_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)THEN a.part_dt ELSE NULL END) last_week_part_dt,
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.part_dt ELSE NULL END) last_mon_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' )  THEN a.part_dt ELSE NULL END) last_qua_part_dt,
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.part_dt ELSE NULL END) last_year_part_dt,

	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d')THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) AND a.part_dt&lt;=DATE_FORMAT('${pt_day}','%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d') ,INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY) ) + 0 DAY) THEN a.act_accrual_amt ELSE 0 END) AS week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT(CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')),'%Y-%m-'),'01'), '%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-3 MONTH),'%Y-%m-'),'01') THEN a.act_accrual_amt ELSE 0 END) AS qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL DAYOFYEAR(DATE_FORMAT('${pt_day}','%Y-%m-%d'))-1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS year_left_loan_amt,
	   
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_day_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_principa_amt ELSE 0 END)+ 
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 7 DAY) AND a.part_dt&lt;=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_FORMAT('${pt_day}','%Y-%m-%d')) + 1 DAY)  THEN a.act_accrual_amt ELSE 0 END) AS last_week_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.shd_accrual_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=DATE_FORMAT( CONCAT(DATE_FORMAT(LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') - INTERVAL 1 MONTH),'%Y-%m-'),'01'), '%Y-%m-%d' ) and a.part_dt &lt;=DATE_FORMAT(DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL 1 MONTH),'%Y-%m-%d') THEN a.act_accrual_amt ELSE 0 END) AS last_mon_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END)+
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT(LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-6 MONTH),'%Y-%m-'),'01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 QUARTER ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_qua_left_loan_amt, 
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_principa_amt ELSE 0 END)-
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_principa_amt ELSE 0 END) +
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.shd_accrual_amt ELSE 0 END) -
	   MAX(CASE WHEN a.part_dt>=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'01-01') and a.part_dt &lt;= DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-%m-%d' ) THEN a.act_accrual_amt ELSE 0 END) AS last_year_left_loan_amt
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a
WHERE ovd_stage = 4
GROUP BY business_id,business_type_nm,area_nm,branch_nm;
  
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp6`;
CREATE TEMPORARY TABLE `mob_pct_tmp6` (
	`MitoMj` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
  INDEX idx_business_id(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp6 
select 'M0-M1' AS MitoMj,
       t1.business_id,
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm,
       SUM(CASE WHEN t1.day_part_dt &lt; t2.day_part_dt THEN t2.day_left_loan_amt ELSE 0 END) day_left_loan_amt,
       SUM(CASE WHEN t1.week_part_dt &lt; t2.week_part_dt THEN t2.week_left_loan_amt ELSE 0 END) week_left_loan_amt,
       SUM(CASE WHEN t1.mon_part_dt &lt; t2.mon_part_dt THEN t2.mon_left_loan_amt ELSE 0 END) mon_left_loan_amt,
       SUM(CASE WHEN t1.qua_part_dt &lt; t2.qua_part_dt THEN t2.qua_left_loan_amt ELSE 0 END) qua_left_loan_amt,
       SUM(CASE WHEN t1.year_part_dt &lt; t2.year_part_dt THEN t2.year_left_loan_amt ELSE 0 END) year_left_loan_amt,
       SUM(CASE WHEN t1.last_day_part_dt &lt; t2.last_day_part_dt THEN t2.last_day_left_loan_amt ELSE 0 END) last_day_left_loan_amt,
       SUM(CASE WHEN t1.last_week_part_dt &lt; t2.last_week_part_dt THEN t2.last_week_left_loan_amt ELSE 0 END) last_week_left_loan_amt,
       SUM(CASE WHEN t1.last_mon_part_dt &lt; t2.last_mon_part_dt THEN t2.last_mon_left_loan_amt ELSE 0 END) last_mon_left_loan_amt,
       SUM(CASE WHEN t1.last_qua_part_dt &lt; t2.last_qua_part_dt THEN t2.last_qua_left_loan_amt ELSE 0 END) last_qua_left_loan_amt,
       SUM(CASE WHEN t1.last_year_part_dt &lt; t2.last_year_part_dt THEN t2.last_year_left_loan_amt ELSE 0 END) last_year_left_loan_amt
from mob_pct_tmp1 t1
join mob_pct_tmp2 t2 on t1.business_id = t2.business_id
GROUP BY t1.business_id,t1.business_type_nm,t1.area_nm,t1.branch_nm;

INSERT INTO mob_pct_tmp6 
select 'M1-M2' AS MitoMj,
       t1.business_id,
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm,
       SUM(CASE WHEN t1.day_part_dt &lt; t2.day_part_dt THEN t2.day_left_loan_amt ELSE 0 END) day_left_loan_amt,
       SUM(CASE WHEN t1.week_part_dt &lt; t2.week_part_dt THEN t2.week_left_loan_amt ELSE 0 END) week_left_loan_amt,
       SUM(CASE WHEN t1.mon_part_dt &lt; t2.mon_part_dt THEN t2.mon_left_loan_amt ELSE 0 END) mon_left_loan_amt,
       SUM(CASE WHEN t1.qua_part_dt &lt; t2.qua_part_dt THEN t2.qua_left_loan_amt ELSE 0 END) qua_left_loan_amt,
       SUM(CASE WHEN t1.year_part_dt &lt; t2.year_part_dt THEN t2.year_left_loan_amt ELSE 0 END) year_left_loan_amt,
       SUM(CASE WHEN t1.last_day_part_dt &lt; t2.last_day_part_dt THEN t2.last_day_left_loan_amt ELSE 0 END) last_day_left_loan_amt,
       SUM(CASE WHEN t1.last_week_part_dt &lt; t2.last_week_part_dt THEN t2.last_week_left_loan_amt ELSE 0 END) last_week_left_loan_amt,
       SUM(CASE WHEN t1.last_mon_part_dt &lt; t2.last_mon_part_dt THEN t2.last_mon_left_loan_amt ELSE 0 END) last_mon_left_loan_amt,
       SUM(CASE WHEN t1.last_qua_part_dt &lt; t2.last_qua_part_dt THEN t2.last_qua_left_loan_amt ELSE 0 END) last_qua_left_loan_amt,
       SUM(CASE WHEN t1.last_year_part_dt &lt; t2.last_year_part_dt THEN t2.last_year_left_loan_amt ELSE 0 END) last_year_left_loan_amt
from mob_pct_tmp2 t1
join mob_pct_tmp3 t2 on t1.business_id = t2.business_id
GROUP BY t1.business_id,t1.business_type_nm,t1.area_nm,t1.branch_nm;

INSERT INTO mob_pct_tmp6 
select 'M2-M3' AS MitoMj,
       t1.business_id,
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm,
       SUM(CASE WHEN t1.day_part_dt &lt; t2.day_part_dt THEN t2.day_left_loan_amt ELSE 0 END) day_left_loan_amt,
       SUM(CASE WHEN t1.week_part_dt &lt; t2.week_part_dt THEN t2.week_left_loan_amt ELSE 0 END) week_left_loan_amt,
       SUM(CASE WHEN t1.mon_part_dt &lt; t2.mon_part_dt THEN t2.mon_left_loan_amt ELSE 0 END) mon_left_loan_amt,
       SUM(CASE WHEN t1.qua_part_dt &lt; t2.qua_part_dt THEN t2.qua_left_loan_amt ELSE 0 END) qua_left_loan_amt,
       SUM(CASE WHEN t1.year_part_dt &lt; t2.year_part_dt THEN t2.year_left_loan_amt ELSE 0 END) year_left_loan_amt,
       SUM(CASE WHEN t1.last_day_part_dt &lt; t2.last_day_part_dt THEN t2.last_day_left_loan_amt ELSE 0 END) last_day_left_loan_amt,
       SUM(CASE WHEN t1.last_week_part_dt &lt; t2.last_week_part_dt THEN t2.last_week_left_loan_amt ELSE 0 END) last_week_left_loan_amt,
       SUM(CASE WHEN t1.last_mon_part_dt &lt; t2.last_mon_part_dt THEN t2.last_mon_left_loan_amt ELSE 0 END) last_mon_left_loan_amt,
       SUM(CASE WHEN t1.last_qua_part_dt &lt; t2.last_qua_part_dt THEN t2.last_qua_left_loan_amt ELSE 0 END) last_qua_left_loan_amt,
       SUM(CASE WHEN t1.last_year_part_dt &lt; t2.last_year_part_dt THEN t2.last_year_left_loan_amt ELSE 0 END) last_year_left_loan_amt
from mob_pct_tmp3 t1
join mob_pct_tmp4 t2 on t1.business_id = t2.business_id
GROUP BY t1.business_id,t1.business_type_nm,t1.area_nm,t1.branch_nm;

INSERT INTO mob_pct_tmp6 
select 'M3-M3+' AS MitoMj,
        t1.business_id,
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm,
       SUM(CASE WHEN t1.day_part_dt &lt; t2.day_part_dt THEN t2.day_left_loan_amt ELSE 0 END) day_left_loan_amt,
       SUM(CASE WHEN t1.week_part_dt &lt; t2.week_part_dt THEN t2.week_left_loan_amt ELSE 0 END) week_left_loan_amt,
       SUM(CASE WHEN t1.mon_part_dt &lt; t2.mon_part_dt THEN t2.mon_left_loan_amt ELSE 0 END) mon_left_loan_amt,
       SUM(CASE WHEN t1.qua_part_dt &lt; t2.qua_part_dt THEN t2.qua_left_loan_amt ELSE 0 END) qua_left_loan_amt,
       SUM(CASE WHEN t1.year_part_dt &lt; t2.year_part_dt THEN t2.year_left_loan_amt ELSE 0 END) year_left_loan_amt,
       SUM(CASE WHEN t1.last_day_part_dt &lt; t2.last_day_part_dt THEN t2.last_day_left_loan_amt ELSE 0 END) last_day_left_loan_amt,
       SUM(CASE WHEN t1.last_week_part_dt &lt; t2.last_week_part_dt THEN t2.last_week_left_loan_amt ELSE 0 END) last_week_left_loan_amt,
       SUM(CASE WHEN t1.last_mon_part_dt &lt; t2.last_mon_part_dt THEN t2.last_mon_left_loan_amt ELSE 0 END) last_mon_left_loan_amt,
       SUM(CASE WHEN t1.last_qua_part_dt &lt; t2.last_qua_part_dt THEN t2.last_qua_left_loan_amt ELSE 0 END) last_qua_left_loan_amt,
       SUM(CASE WHEN t1.last_year_part_dt &lt; t2.last_year_part_dt THEN t2.last_year_left_loan_amt ELSE 0 END) last_year_left_loan_amt
from mob_pct_tmp4 t1
join mob_pct_tmp5 t2 on t1.business_id = t2.business_id
GROUP BY t1.business_id,t1.business_type_nm,t1.area_nm,t1.branch_nm;

  
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp7`;
CREATE TEMPORARY TABLE `mob_pct_tmp7` (
	`MitoMj` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_id` VARCHAR(50)  NULL DEFAULT NULL COMMENT '业务类型',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '分公司',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
  INDEX idx_business_id(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8;
  
insert into mob_pct_tmp7  
SELECT CASE WHEN a.`ovd_stage`=0 THEN 'M0-M1'
            WHEN a.`ovd_stage`=1 THEN 'M1-M2'
            WHEN a.`ovd_stage`=2 THEN 'M2-M3'
            WHEN a.`ovd_stage`=3 THEN 'M3-M3+' END AS MitoMj,
	   a.business_id,
       a.business_type_nm,
	   a.area_nm,
	   a.branch_nm,
       SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS day_left_loan_amt, 
       SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 1 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 1 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 1 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 1 DAY) THEN a.act_accrual_amt ELSE 0 END) AS week_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 1 MONTH) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 1 MONTH) THEN a.act_principa_amt ELSE 0 END) +
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 1 MONTH) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 1 MONTH) THEN a.act_accrual_amt ELSE 0 END) AS mon_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-4 MONTH) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-4 MONTH) THEN a.act_principa_amt ELSE 0 END)+
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-4 MONTH) THEN a.shd_accrual_amt ELSE 0 END) -
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-4 MONTH) THEN a.act_accrual_amt ELSE 0 END) AS qua_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'12-31') THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'12-31') THEN a.act_principa_amt ELSE 0 END) +
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'12-31') THEN a.shd_accrual_amt ELSE 0 END) -
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -1 YEAR ) , '%Y-' ),'12-31') THEN a.act_accrual_amt ELSE 0 END) AS year_left_loan_amt ,
	   
       SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL 2 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_day_left_loan_amt, 
       SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 8 DAY) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 8 DAY) THEN a.act_principa_amt ELSE 0 END)+ 
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 8 DAY) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=DATE_SUB(DATE_FORMAT('${pt_day}','%Y-%m-%d'),INTERVAL WEEKDAY(DATE_SUB(CURDATE(),INTERVAL 1 DAY)) + 8 DAY) THEN a.act_accrual_amt ELSE 0 END) AS last_week_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 2 MONTH) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 2 MONTH) THEN a.act_principa_amt ELSE 0 END) +
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 2 MONTH) THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(DATE_FORMAT('${pt_day}','%Y-%m-%d') -INTERVAL 2 MONTH) THEN a.act_accrual_amt ELSE 0 END) AS last_mon_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-7 MONTH) THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-7 MONTH) THEN a.act_principa_amt ELSE 0 END)+
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-7 MONTH) THEN a.shd_accrual_amt ELSE 0 END) -
	   SUM(CASE WHEN a.part_dt=LAST_DAY(MAKEDATE(EXTRACT(YEAR FROM DATE_FORMAT('${pt_day}','%Y-%m-%d')),1) + INTERVAL QUARTER(DATE_FORMAT('${pt_day}','%Y-%m-%d'))*3-7 MONTH) THEN a.act_accrual_amt ELSE 0 END) AS last_qua_left_loan_amt, 
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -2 YEAR ) , '%Y-' ),'12-31') THEN a.shd_principa_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -2 YEAR ) , '%Y-' ),'12-31') THEN a.act_principa_amt ELSE 0 END)+
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -2 YEAR ) , '%Y-' ),'12-31') THEN a.shd_accrual_amt ELSE 0 END)-
	   SUM(CASE WHEN a.part_dt=CONCAT(DATE_FORMAT( DATE_ADD( DATE_FORMAT('${pt_day}','%Y-%m-%d'), INTERVAL -2 YEAR ) , '%Y-' ),'12-31') THEN a.act_accrual_amt ELSE 0 END) AS last_year_left_loan_amt 
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_detail a 
WHERE a.ovd_stage &lt;&gt; 4
GROUP BY CASE WHEN a.`ovd_stage`=0 THEN 'M0-M1'
            WHEN a.`ovd_stage`=1 THEN 'M1-M2'
            WHEN a.`ovd_stage`=2 THEN 'M2-M3'
            WHEN a.`ovd_stage`=3 THEN 'M3-M3+' END,
			a.business_id,
       a.business_type_nm,
	   a.area_nm,
	   a.branch_nm;
 
DROP TEMPORARY TABLE IF EXISTS `mob_pct_tmp8`;
CREATE TEMPORARY TABLE `mob_pct_tmp8` (
	 stat_dt VARCHAR(10) NULL DEFAULT NULL COMMENT '统计日期',
	`MitoMj` VARCHAR(50) NULL DEFAULT NULL COMMENT '逾期阶段',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '逾期阶段',
	`area_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '逾期阶段',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '逾期阶段',
	`day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`total_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`total_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`total_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`total_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`total_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_total_day_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_total_week_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_total_mon_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_total_qua_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`last_total_year_left_loan_amt` DECIMAL(12,2)  NULL DEFAULT NULL COMMENT '业务类型',
	`create_time` DATETIME NULL DEFAULT NULL COMMENT '插入时间'
)ENGINE=MEMORY DEFAULT CHARSET=utf8;

INSERT INTO mob_pct_tmp8			
select '${pt_day}' as stat_dt,
       t1.MitoMj,                     -- 业务编号 
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm,
	   sum(t1.day_left_loan_amt) as day_left_loan_amt,      
	   sum(t1.week_left_loan_amt) as week_left_loan_amt,                                                                            
	   sum(t1.mon_left_loan_amt) as mon_left_loan_amt,                                         
	   sum(t1.qua_left_loan_amt) as qua_left_loan_amt,                                         
	   sum(t1.year_left_loan_amt) as year_left_loan_amt,
	   sum(t2.day_left_loan_amt) as total_day_left_loan_amt,   
	   sum(t2.week_left_loan_amt) as total_week_left_loan_amt,                                         
	   sum(t2.mon_left_loan_amt) as total_mon_left_loan_amt,                                         
	   sum(t2.qua_left_loan_amt) as total_qua_left_loan_amt,                                         
	   sum(t2.year_left_loan_amt) as total_year_left_loan_amt,
	   
	   sum(t1.last_day_left_loan_amt) as last_day_left_loan_amt,  
	   sum(t1.last_week_left_loan_amt) as last_week_left_loan_amt,                                       
	   sum(t1.last_mon_left_loan_amt) as last_mon_left_loan_amt,                                         
	   sum(t1.last_qua_left_loan_amt) as last_qua_left_loan_amt,                                         
	   sum(t1.last_year_left_loan_amt) as last_year_left_loan_amt,
	   sum(t2.last_day_left_loan_amt) as last_total_day_left_loan_amt,   
	   sum(t2.last_week_left_loan_amt) as last_total_week_left_loan_amt,                                         
	   sum(t2.last_mon_left_loan_amt) as last_total_mon_left_loan_amt,                                         
	   sum(t2.last_qua_left_loan_amt) as last_total_qua_left_loan_amt,                                         
	   sum(t2.last_year_left_loan_amt) as last_total_year_left_loan_amt,
	   now()
from mob_pct_tmp6 t1
left join mob_pct_tmp7 t2 on t1.MitoMj = t2.MitoMj and t1.business_id = t2.business_id
group by t1.MitoMj,   
       t1.business_type_nm,
	   t1.area_nm,
	   t1.branch_nm ;

truncate table DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_ratio;
insert into DMA_CEO_RPT_DATA.dma_ceo_rpt_mobility_ratio
select * from mob_pct_tmp8;

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '800', '生成逾期标的明细表，成功！！！！', 0,'${p_day}',  NOW(),  'dl' );




</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>704</xloc>
      <yloc>464</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：CEO看板-贷后逾期迁徙率统计
创建时间：20180611
创建人   ：dailiang
源系统	 ：tuandai_bm
数据源表：tb_car_business_after_ods
               ...
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
</note>
      <xloc>32</xloc>
      <yloc>16</yloc>
      <width>442</width>
      <heigth>220</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

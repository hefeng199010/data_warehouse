<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_ovd_business_sum</name>
  <description/>
  <extended_description>应收实收台账表</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>20180328</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_ovd_business_sum</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>-- 根据 follow_status_id，和下面的 para_value 比较，取remark
-- select para_value,remark  from tuandai_bm.tb_parameter where RESERVE_1='贷后' and PARA_TYPE='状态' and PARA_NAME='跟踪记录' and STATUS=1;

SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );


DROP TEMPORARY TABLE IF EXISTS tb_business;
CREATE TEMPORARY TABLE tb_business (
  business_type VARCHAR(50) DEFAULT NULL COMMENT '业务类型',
  repayment_type_id INT(11) DEFAULT NULL COMMENT '还款方式ID，1到期还本息，2每月付息到期还本，5每月等额本息,9是分期还本付息',
  branch_id VARCHAR(50) DEFAULT NULL COMMENT '业务所属分公司编号',
  business_id VARCHAR(50) NOT NULL COMMENT '业务单号',
  customer_name VARCHAR(100) DEFAULT NULL COMMENT '客户名称',
  operator_id VARCHAR(50) DEFAULT NULL COMMENT '主办人编号',
  borrow_money DECIMAL(12,2) DEFAULT NULL COMMENT '借款金额',
  KEY idx_business_id (business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_business
SELECT 
 a.business_type
,a.repayment_type_id
,a.branch_id
,a.business_id
,a.customer_name
,a.operator_id
,a.borrow_money
 FROM ODS_XD_TUANDAI_BM.tb_business_ods a 
 WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d');


/*取逾期的数据即逾期天数大于0的数据*/
DROP TEMPORARY TABLE IF EXISTS tb_car_business_after;
CREATE TEMPORARY TABLE tb_car_business_after (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  car_business_after_defer VARCHAR(50) DEFAULT NULL COMMENT '[展期业务编号]',
  oddcorpus VARCHAR(100) DEFAULT NULL COMMENT '[剩余本金]',
  repayed_flag INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  repayment_type VARCHAR(50) DEFAULT NULL COMMENT '[还款方式]',
  fact_principa VARCHAR(50) DEFAULT NULL COMMENT '[实际归还本金]',
  fact_accrual VARCHAR(50) DEFAULT NULL COMMENT '[实际归还利息]',
  fact_service DECIMAL(10,2) DEFAULT NULL COMMENT '[实际还款服务费]',
  other_money VARCHAR(50) DEFAULT NULL COMMENT '[其他费用]',
  overdue_money VARCHAR(50) DEFAULT NULL COMMENT '[实收滞纳金]',
  collection_user VARCHAR(50) DEFAULT NULL COMMENT '[电话催收人]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  fatct_replayDate DATETIME DEFAULT NULL COMMENT '[实际还款日期]',
  current_Principa DECIMAL(12,2) DEFAULT NULL COMMENT '[本期应还本金]',
  current_accrual VARCHAR(50) DEFAULT NULL COMMENT '[本期应还利息]',
  repay_service DECIMAL(10,2) DEFAULT NULL COMMENT '[本期应还咨询服务费]',
  current_other_money DECIMAL(10,2) DEFAULT NULL COMMENT '[计划其他费用]',
  current_Breach VARCHAR(50) DEFAULT NULL COMMENT '[本期应收滞纳金，每天零点由系统自动计算]',
  out_id INT(11) DEFAULT NULL COMMENT '[出款编号]',
  overdue_days INT(5) DEFAULT NULL,
  principalExpireType VARCHAR(50) DEFAULT NULL COMMENT '本金是否到期',
  is_ovd_replay       VARCHAR(50) DEFAULT NULL COMMENT '是否逾期还款',
  KEY idx_car_business_after_id (car_business_id,car_business_after_id),
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

/*主表 业务口径：去逾期已还款和逾期未还款的数据*/
INSERT INTO tb_car_business_after
SELECT 
 t.car_business_id
,t.car_business_after_id
,t.car_business_after_defer
,t.oddcorpus
,t.repayed_flag 
,t.repayment_type
,t.fact_principa
,t.fact_accrual
,t.fact_service
,t.other_money
,t.overdue_money
,t.collection_user
,t.borrow_date
,t.fatct_replayDate
,t.current_Principa
,t.current_accrual
,t.repay_service
,t.current_other_money
,t.current_Breach
,t.out_id
,CASE WHEN t.fatct_replayDate IS NULL THEN (TO_DAYS(DATE_FORMAT('${pt_day}','%Y-%m-%d'))) - TO_DAYS(DATE_FORMAT(t.borrow_date,'%Y-%m-%d')) ELSE (TO_DAYS(DATE_FORMAT(t.fatct_replayDate,'%Y-%m-%d')) - TO_DAYS(DATE_FORMAT(t.borrow_date,'%Y-%m-%d'))) END AS overdue_days
/*,(CASE WHEN FIND_IN_SET(t.repayment_type,'到期还本息,先息后本,1,2')   AND IFNULL(t.current_Principa,0) >0 THEN '本金到期'
       WHEN ((FIND_IN_SET(t.repayment_type,'到期还本息,先息后本,1,2') AND IFNULL(t.current_Principa,0)=0) OR (!FIND_IN_SET(t.repayment_type,'到期还本息,先息后本,1,2')))  THEN '本金未到期'
       ELSE '其他'
   END 
 ) AS principalExpireType  -- 本金是否到期
 */
,(CASE WHEN CAST(IFNULL(t.current_Principa,'0') AS DECIMAL(10,2)) >0 THEN '1' ELSE '0' END) AS principalExpireType  -- 本金是否到期
,(CASE WHEN t.fatct_replayDate IS NOT NULL THEN '逾期已还款' ELSE '逾期未还款'  END) AS is_ovd_replay  -- 是否逾期还款
 FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods t 
 WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND IFNULL(t.repayed_flag,0)!=6 
 AND (CASE WHEN t.fatct_replayDate IS NULL THEN (TO_DAYS(DATE_FORMAT('${pt_day}','%Y-%m-%d'))) - TO_DAYS(DATE_FORMAT(t.borrow_date,'%Y-%m-%d')) 
          ELSE (TO_DAYS(DATE_FORMAT(t.fatct_replayDate,'%Y-%m-%d')) - TO_DAYS(DATE_FORMAT(t.borrow_date,'%Y-%m-%d'))) END )>0;



 /*包括当前期总实还本金*/
DROP TEMPORARY TABLE IF EXISTS tb_car_business_after_tmp1;
CREATE TEMPORARY TABLE tb_car_business_after_tmp1 (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  fact_principa VARCHAR(50) DEFAULT NULL COMMENT '[实际归还本金]',
  repayed_flag INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_car_business_after_tmp1
SELECT car_business_id,borrow_date,fact_principa,repayed_flag FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods t 
WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND  IFNULL(repayed_flag,0)!=6;

DROP TEMPORARY TABLE IF EXISTS tb_car_business_after_tmp2;
CREATE TEMPORARY TABLE tb_car_business_after_tmp2 (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  out_id INT(11) DEFAULT NULL COMMENT '[出款编号]',
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_car_business_after_tmp2
SELECT car_business_id,car_business_after_id,borrow_date,out_id FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods t 
WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
;


DROP TEMPORARY TABLE IF EXISTS sum_current_Principa;
CREATE TEMPORARY TABLE sum_current_Principa (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  shengyubenjin DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO sum_current_Principa
 SELECT  kk.car_business_id,IFNULL(SUM(kk.current_Principa),0) AS shengyubenjin
 FROM  ODS_XD_TUANDAI_BM.tb_car_business_after_ods kk 
 WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') AND kk.repayed_flag!=6
 ;


DROP TEMPORARY TABLE IF EXISTS tb_car_personal;
CREATE TEMPORARY TABLE tb_car_personal (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '车贷业务编号',
  customer_id VARCHAR(50) DEFAULT NULL COMMENT '客户编号',
  mobile_phone VARCHAR(20) DEFAULT NULL COMMENT '手机电话',
  ismain_customer INT(11) DEFAULT NULL COMMENT '[是否主借款人 0:否 1：是]',
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_car_personal
SELECT t.car_business_id,customer_id,t.mobile_phone,t.ismain_customer FROM ODS_XD_TUANDAI_BM.tb_car_personal_ods t WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') AND  t.ismain_customer = 1;


   /*统计每个业务当前的剩余本金*/
 DROP TEMPORARY TABLE IF EXISTS odd_corpus;
 CREATE TEMPORARY TABLE odd_corpus (
  business_id VARCHAR(50) NOT NULL COMMENT '业务单号',
  odd_corpus DECIMAL(12,2) DEFAULT NULL,
  KEY idx_business_id (business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

/*modify by caihl20180919 fact_principa=''的处理*/
  INSERT INTO odd_corpus
 SELECT a.business_id,(SUM(IFNULL(b.current_Principa,0)) - SUM(CAST((CASE WHEN b.fact_principa IS NULL THEN 0 
                                                                          WHEN b.fact_principa =''     THEN 0 ELSE b.fact_principa END) AS DECIMAL(12,2)))) AS odd_corpus
 FROM ODS_XD_TUANDAI_BM.tb_business_ods a
 JOIN ODS_XD_TUANDAI_BM.tb_car_business_after_ods b ON a.business_id = b.car_business_id AND b.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
 WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND IFNULL(b.repayed_flag,0) !=6
 GROUP BY a.business_id
 ;

DROP TEMPORARY TABLE IF EXISTS tb_parametertracelog_tmp;
CREATE TEMPORARY TABLE tb_parametertracelog_tmp (
  Car_Business_Id VARCHAR(50) DEFAULT NULL COMMENT '业务编号',
  Car_Business_After_Id VARCHAR(50) DEFAULT NULL COMMENT '还款期数',
  STATUS INT(11) DEFAULT NULL COMMENT '状态',
  KEY idx_Car_Business_Id (Car_Business_Id,Car_Business_After_Id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_parametertracelog_tmp
   SELECT Car_Business_Id,Car_Business_After_Id,STATUS
   FROM ODS_XD_TUANDAI_BM.tb_parametertracelog_ods t1
   WHERE t1.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
   AND EXISTS(
   SELECT t1.ID
   FROM (
     SELECT MAX(t2.ID) AS ID
     FROM ODS_XD_TUANDAI_BM.tb_parametertracelog_ods t2
     WHERE t2.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
     AND IFNULL(log_type,0) = 1
     GROUP BY t2.Car_Business_Id,t2.Car_Business_After_Id
         ) TEMP
   WHERE TEMP.ID = t1.ID
     ) 
     ;


 DROP TEMPORARY TABLE IF EXISTS tb_output_list_ods_tmp;
 CREATE TEMPORARY TABLE tb_output_list_ods_tmp (
  BUSINESS_ID VARCHAR(50) NOT NULL COMMENT '[业务编号]',
  OUTPUT_ID INT(11) NOT NULL COMMENT '[出款编号]',
  Actual_OutTime VARCHAR(50) DEFAULT NULL COMMENT '[实际出款时间]',
  KEY idx_BUSINESS_ID (BUSINESS_ID,OUTPUT_ID)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_output_list_ods_tmp
SELECT b.BUSINESS_ID,b.OUTPUT_ID,b.Actual_OutTime FROM ODS_XD_TUANDAI_BM.tb_output_list_ods b WHERE  b.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d');


DROP TEMPORARY TABLE IF EXISTS Actual_OutTime;
CREATE TEMPORARY TABLE Actual_OutTime (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  Actual_OutTime VARCHAR(50) DEFAULT NULL COMMENT '[实际出款时间]',
  KEY idx_car_business_id (car_business_id,car_business_after_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO Actual_OutTime 
 SELECT a.car_business_id,a.car_business_after_id, b.Actual_OutTime FROM  ODS_XD_TUANDAI_BM.tb_car_business_after_ods a
LEFT JOIN tb_output_list_ods_tmp b ON a.car_business_id = b.BUSINESS_ID AND a.out_id  = b.OUTPUT_ID
 WHERE a.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 ;

DROP TEMPORARY TABLE IF EXISTS tb_fsd_customer_ods_tmp;
CREATE TEMPORARY TABLE tb_fsd_customer_ods_tmp (
  business_id VARCHAR(50) NOT NULL COMMENT '[业务编号]',
  phone_number VARCHAR(50) DEFAULT NULL COMMENT '[手机号码]',
  job_duty VARCHAR(50) DEFAULT NULL COMMENT '[职务]',
  KEY idx_business_id (business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_fsd_customer_ods_tmp
SELECT 
  fsd_i.business_id
 ,fsd_i.phone_number
 ,fsd_i.job_duty 
FROM  ODS_XD_TUANDAI_BM.tb_fsd_customer_ods fsd_i 
WHERE fsd_i.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND fsd_i.ismain_customer=1
;  
     

DROP TEMPORARY TABLE IF EXISTS tb_car_business_exhibition_ods_tmp;
CREATE TEMPORARY TABLE tb_car_business_exhibition_ods_tmp (
  Car_Business_Extension_Id VARCHAR(50) NOT NULL COMMENT '展期业务编号',
  extension_repay_date DATETIME DEFAULT NULL COMMENT '展期还款日期',
  KEY idx_Car_Business_Extension_Id (Car_Business_Extension_Id),
  KEY idx_extension_repay_date (extension_repay_date)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO tb_car_business_exhibition_ods_tmp
SELECT
be.Car_Business_Extension_Id
,be.extension_repay_date
FROM ODS_XD_TUANDAI_BM.tb_car_business_exhibition_ods be 
WHERE  be.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','1:ODS的临时表创建', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );

 
  
DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_ovd_business_sum_tmp1;
CREATE TEMPORARY TABLE dma_sal_achv_ovd_business_sum_tmp1 (
  sum_current_Principa DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  fact_principa VARCHAR(50) NOT NULL DEFAULT '',
  -- PrincipalExpireType INT(0) NOT NULL DEFAULT '0',
  car_business_after_defer VARCHAR(50) DEFAULT NULL COMMENT '[展期业务编号]',
  oddcorpus VARCHAR(100) NOT NULL DEFAULT '',
  repayed_flag INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  repayment_type VARCHAR(50) DEFAULT NULL,
  fact_repay_money DECIMAL(12,2) NOT NULL DEFAULT '0',
  district_id VARCHAR(50) NOT NULL COMMENT '部门编号',
  district_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  company_id VARCHAR(50) DEFAULT NULL COMMENT '业务所属分公司编号',
  company_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  car_business_id VARCHAR(50) NOT NULL COMMENT '业务单号',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  customer_name VARCHAR(100) DEFAULT NULL COMMENT '客户名称',
  operator_id VARCHAR(50) DEFAULT NULL COMMENT '主办人编号',
  operator_name VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  follow_user_id VARCHAR(50) DEFAULT NULL COMMENT '[电话催收人]',
  follow_user VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  fatct_replayDate DATETIME DEFAULT NULL COMMENT '[实际还款日期]',
  borrow_money DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  odd_corpus DECIMAL(12,2) NOT NULL DEFAULT '0',
  should_repay_money DECIMAL(15,2) NOT NULL DEFAULT '0.00',
  overdue_days INT(5) DEFAULT NULL,
  follow_status_id INT(11) DEFAULT NULL COMMENT '状态',
  mobile_phone VARCHAR(50) DEFAULT NULL,
  job_duty VARCHAR(50) DEFAULT NULL,
  current_Breach DECIMAL(10,2) NOT NULL DEFAULT '0.00',
  Actual_OutTime VARCHAR(50) DEFAULT NULL COMMENT '[实际出款时间]',
  out_id INT(11) DEFAULT NULL COMMENT '[出款编号]',
  business_type VARCHAR(50) DEFAULT NULL COMMENT '业务类型',
  type_nm VARCHAR(50) DEFAULT NULL COMMENT '类型',
  principalExpireType VARCHAR(50) DEFAULT NULL COMMENT '本金是否到期',
  is_ovd_replay       VARCHAR(50) DEFAULT NULL COMMENT '是否逾期还款',
  KEY idx_car_business_id (car_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO dma_sal_achv_ovd_business_sum_tmp1
SELECT
  /*总应还本金*/
 IFNULL(kk.shengyubenjin,0) AS sum_current_Principa,
  /*包括当前期总实还本金*/
 IFNULL(b.fact_principa,0) AS fact_principa,
 /*是否需要还本金*/
-- CASE WHEN CAST(IFNULL(b.current_Principa,'0') AS DECIMAL(10,2)) >0 THEN 1 ELSE 0 END AS PrincipalExpireType,
  b.car_business_after_defer,
  IFNULL(b.oddcorpus,0) AS oddcorpus,
  b.repayed_flag, 
  CASE WHEN IFNULL(a.repayment_type_id,0)!=0 THEN a.repayment_type_id ELSE b.repayment_type END AS repayment_type,
  /*实还金额=实还本金+实还利息+实际还款服务费+其他*/
 (IFNULL(b.fact_principa,0) + CAST(IFNULL(b.fact_accrual,'0') AS DECIMAL(10,2))+ IFNULL(b.fact_service,0)+ CAST(IFNULL(b.other_money,'0') AS DECIMAL(10,2))+ CAST(IFNULL(b.overdue_money,'0') AS DECIMAL(10,2))) AS fact_repay_money,
  d.DEPT_ID AS district_id,
  d.DEPT_NAME AS district_name,
  a.branch_id AS company_id,
  c.DEPT_NAME AS company_name,
  a.business_id AS car_business_id,
  b.car_business_after_id,
  a.customer_name,
  a.operator_id,
  e.USER_NAME AS operator_name,
  b.collection_user AS follow_user_id,
  f.USER_NAME AS follow_user,
  b.borrow_date,
  b.fatct_replayDate,
  IFNULL(a.borrow_money,0) borrow_money,
   CASE WHEN IFNULL(g.odd_corpus,0)&lt;0 THEN 0 ELSE IFNULL(g.odd_corpus,0) END AS odd_corpus,
  /* 本期应还金额 = 本期应还本金 + 本期应还利息 + 本期应还服务费 + 本期应还其他 */
  (IFNULL(b.current_Principa,0) + CAST(IFNULL(b.current_accrual,'0') AS DECIMAL(10,2)) + IFNULL(b.repay_service,0)+ IFNULL(b.current_other_money,0)) AS should_repay_money,
  b.overdue_days,
  h.status AS follow_status_id,
  CASE WHEN FIND_IN_SET(a.business_type,'车易贷,T500') THEN i.mobile_phone ELSE fsd_i.phone_number END mobile_phone,
  CASE WHEN FIND_IN_SET(a.business_type,'车易贷,T500') THEN j.job_duty ELSE fsd_i.job_duty END job_duty,
  CAST(IFNULL(b.current_Breach,'0') AS DECIMAL(10,2)) AS current_Breach,
  op.Actual_OutTime,
  b.out_id,
  a.business_type,
  (CASE WHEN b.car_business_after_defer  LIKE '%ZQ%' THEN '展期' ELSE '新增' END) AS type_nm ,-- 类型 展期/新增 
  b.principalExpireType,    -- add by caihl20180930
  b.is_ovd_replay 
 FROM tb_business a
 JOIN tb_car_business_after b ON a.business_id = b.car_business_id
 JOIN ODS_XD_TUANDAI_BM.tb_department_ods c ON a.branch_id = c.DEPT_ID AND c.STATUS=1 AND c.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 JOIN ODS_XD_TUANDAI_BM.tb_department_ods d ON d.DEPT_ID = c.district_id     AND d.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 JOIN ODS_XD_TUANDAI_BM.tb_user_ods e       ON e.USER_ID = a.operator_id     AND e.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 LEFT JOIN ODS_XD_TUANDAI_BM.tb_user_ods f  ON f.USER_ID = b.collection_user AND f.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 LEFT JOIN odd_corpus g ON b.car_business_id = g.business_id
 LEFT JOIN tb_parametertracelog_tmp h ON h.Car_Business_Id = a.business_id AND h.Car_Business_After_Id = b.car_business_after_id
 -- LEFT JOIN tb_collection k ON k.business_id=b.car_business_id AND k.after_id=b.car_business_after_id
 LEFT JOIN tb_car_personal i ON i.car_business_id = a.business_id AND i.ismain_customer = 1 /*[4035]caiqiang20170612*/
 LEFT JOIN ODS_XD_TUANDAI_BM.tb_car_job_ods j ON j.car_business_id = a.business_id AND j.customer_id = i.customer_id AND j.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 LEFT JOIN tb_fsd_customer_ods_tmp fsd_i ON fsd_i.business_id=a.business_id 
 LEFT JOIN Actual_OutTime op ON op.car_business_id = b.car_business_id AND op.car_business_after_id = b.car_business_after_id /*[LQ]*/
 LEFT JOIN sum_current_Principa kk ON b.car_business_id = kk.car_business_id
;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','2:dma_sal_achv_ovd_business_sum_tmp1', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );


DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_ovd_business_sum_tmp2;
CREATE TEMPORARY TABLE dma_sal_achv_ovd_business_sum_tmp2 (
  sum_current_Principa DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  fact_principa VARCHAR(50) NOT NULL DEFAULT '',
 -- PrincipalExpireType INT(0) NOT NULL DEFAULT '0',
  car_business_after_defer VARCHAR(50) DEFAULT NULL COMMENT '[展期业务编号]',
  oddcorpus VARCHAR(100) NOT NULL DEFAULT '',
  repayed_flag INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  repayment_type VARCHAR(50) DEFAULT NULL,
  fact_repay_money DECIMAL(12,2) NOT NULL DEFAULT '0',
  district_id VARCHAR(50) NOT NULL COMMENT '部门编号',
  district_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  company_id VARCHAR(50) DEFAULT NULL COMMENT '业务所属分公司编号',
  company_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  car_business_id VARCHAR(50) NOT NULL COMMENT '业务单号',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  customer_name VARCHAR(100) DEFAULT NULL COMMENT '客户名称',
  operator_id VARCHAR(50) DEFAULT NULL COMMENT '主办人编号',
  operator_name VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  follow_user_id VARCHAR(50) DEFAULT NULL COMMENT '[电话催收人]',
  follow_user VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  fatct_replayDate DATETIME DEFAULT NULL COMMENT '[实际还款日期]',
  borrow_money DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  odd_corpus DECIMAL(12,2) NOT NULL DEFAULT '0',
  should_repay_money DECIMAL(15,2) NOT NULL DEFAULT '0.00',
  overdue_days DECIMAL(12,2) DEFAULT NULL,
  ovd_status VARCHAR(50) DEFAULT NULL,
  follow_status_id INT(11) DEFAULT NULL COMMENT '状态',
  mobile_phone VARCHAR(50) DEFAULT NULL,
  job_duty VARCHAR(50) DEFAULT NULL,
  current_Breach DECIMAL(10,2) NOT NULL DEFAULT '0.00',
  Actual_OutTime VARCHAR(50) DEFAULT NULL COMMENT '[实际出款时间]',
  out_id INT(11) DEFAULT NULL COMMENT '[出款编号]',
  business_type VARCHAR(50) DEFAULT NULL COMMENT '业务类型',
  sum_fact_principa DECIMAL(34,2) DEFAULT NULL,
  car_business_after_id_last VARCHAR(50) DEFAULT NULL,
  car_business_after_defer_first VARCHAR(50) DEFAULT NULL,
  type_nm VARCHAR(50) DEFAULT NULL COMMENT '类型',
  principalExpireType VARCHAR(50) DEFAULT NULL COMMENT '本金是否到期',
  is_ovd_replay       VARCHAR(50) DEFAULT NULL COMMENT '是否逾期还款'
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO dma_sal_achv_ovd_business_sum_tmp2
SELECT 
 b.sum_current_Principa    
,b.fact_principa           
-- ,b.PrincipalExpireType     
,b.car_business_after_defer
,b.oddcorpus               
,b.repayed_flag            
,b.repayment_type          
,b.fact_repay_money        
,b.district_id             
,b.district_name           
,b.company_id              
,b.company_name            
,b.car_business_id         
,b.car_business_after_id   
,b.customer_name           
,b.operator_id             
,b.operator_name           
,b.follow_user_id          
,b.follow_user             
,b.borrow_date             
,b.fatct_replayDate        
,b.borrow_money            
,b.odd_corpus              
,b.should_repay_money      
,b.overdue_days  
,(CASE WHEN b.overdue_days>0 AND b.car_business_after_defer IS NULL        AND b.car_business_after_id LIKE '%01' AND b.out_id =1 THEN '首月逾期' -- 针对不同的还款计划
       WHEN b.overdue_days>0 AND b.repayment_type IN('5','等额本息')       AND b.oddcorpus=0 THEN '末期逾期' -- 指还款方式为等额本息时最后一期还款逾期 针对不同的还款计划
       WHEN b.overdue_days>0 AND b.repayment_type IN ('1', '2','先息后本') AND b.oddcorpus=0 THEN '本金逾期'
     ELSE NULL 
END
) AS ovd_status          
,b.follow_status_id        
,b.mobile_phone            
,b.job_duty                
,b.current_Breach          
,b.Actual_OutTime          
,b.out_id                  
,b.business_type 
-- ,b.car_business_after_defer_first
-- ,b.car_business_after_id_last
-- ,b.repayed_flag
-- ,b.should_repay_money
-- ,b.fact_principa
-- ,b.fact_repay_money
-- ,CASE WHEN (sum_current_principa - sum_fact_principa)&lt;0 THEN 0 ELSE (sum_current_principa - sum_fact_principa) END AS surplus_principa -- 剩余本金
,(
 SELECT IFNULL(SUM(CAST(IFNULL(jj.fact_principa,'0') AS DECIMAL(12,2))),0)
 FROM tb_car_business_after_tmp1 jj
 WHERE jj.car_business_id=b.car_business_id  AND jj.borrow_date&lt;=b.borrow_date
 ) AS sum_fact_principa  /*包括当前期总实还本金*/
,(
 SELECT IFNULL(bb.car_business_after_id,'')
 FROM tb_car_business_after_tmp2 bb
 WHERE bb.car_business_id= b.car_business_id AND IFNULL(bb.out_id,1)= IFNULL(b.out_id,1)
 ORDER BY bb.borrow_date DESC
 LIMIT 1
 ) AS car_business_after_id_last  /*最后一期号*/
,CASE WHEN FIND_IN_SET(b.business_type,'车易贷,T500') THEN 
   (
    SELECT IFNULL(bb.car_business_after_defer,'')
   FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods bb
   LEFT JOIN tb_car_business_exhibition_ods_tmp be ON bb.car_business_after_defer=be.Car_Business_Extension_Id
   WHERE bb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
   AND bb.car_business_id= b.car_business_id 
   AND IFNULL(bb.out_id,1)= IFNULL(b.out_id,1) 
   AND IFNULL(bb.car_business_after_defer,'')!='' 
   AND (DATEDIFF(be.extension_repay_date,b.borrow_date)=0) 
   AND IFNULL(bb.car_business_after_defer,'')=b.car_business_after_defer 
   AND bb.car_business_after_id=b.car_business_after_id
   ORDER BY be.extension_repay_date ASC
   LIMIT 1
  )
  ELSE 
  (
    SELECT IFNULL(bb.car_business_after_defer,'')
   FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods bb
   WHERE bb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
   AND bb.car_business_id= b.car_business_id 
   AND IFNULL(bb.out_id,1)= IFNULL(b.out_id,1) 
   AND IFNULL(bb.car_business_after_defer,'')!='' 
   AND bb.car_business_after_id LIKE '%-00' 
   AND IFNULL(bb.car_business_after_defer,'')=b.car_business_after_defer 
   AND bb.car_business_after_id=b.car_business_after_id
   ORDER BY bb.borrow_date ASC
   LIMIT 1
  ) END AS car_business_after_defer_first    /*展期第一期(00期或者01期)*/
,b.type_nm -- 类型
,b.principalExpireType
,b.is_ovd_replay
 FROM dma_sal_achv_ovd_business_sum_tmp1 b
 -- ORDER BY b.borrow_date DESC,b.district_name,b.company_name
 ;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','3:dma_sal_achv_ovd_business_sum_tmp2', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );


DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_ovd_business_sum_tmp3;
CREATE TEMPORARY TABLE dma_sal_achv_ovd_business_sum_tmp3 (
  district_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  company_name VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  car_business_id VARCHAR(50) NOT NULL COMMENT '业务单号',
  car_business_after_id VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  customer_name VARCHAR(100) DEFAULT NULL COMMENT '客户名称',
  operator_name VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  borrow_date DATETIME DEFAULT NULL COMMENT '[还款日期]',
  fatct_replayDate DATETIME DEFAULT NULL COMMENT '[实际还款日期]',
  Actual_OutTime VARCHAR(50) DEFAULT NULL COMMENT '[实际出款时间]',
  overdue_days INT(5) DEFAULT NULL,
  ovd_status VARCHAR(50) DEFAULT NULL,
  borrow_money DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  odd_corpus DECIMAL(12,2) NOT NULL DEFAULT '0',
  repayment_type VARCHAR(50) DEFAULT NULL,
  should_repay_money DECIMAL(15,2) NOT NULL DEFAULT '0.00',
  current_Breach DECIMAL(10,2) NOT NULL DEFAULT '0.00',
  fact_repay_money DECIMAL(12,2) NOT NULL DEFAULT '0',
  collection_rate INT(1) NOT NULL DEFAULT '0',
  job_duty VARCHAR(50) DEFAULT NULL,
  mobile_phone VARCHAR(50) DEFAULT NULL,
  follow_status VARCHAR(50) NOT NULL,
  follow_user VARCHAR(50) DEFAULT NULL COMMENT '[用户姓名]',
  surplus_principa DECIMAL(35,2) DEFAULT NULL,
  car_business_after_defer_first VARCHAR(50) DEFAULT NULL,
  car_business_after_id_last VARCHAR(50) DEFAULT NULL,
  repayed_flag INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  fact_principa VARCHAR(50) NOT NULL DEFAULT '',
  out_id INT(11) DEFAULT NULL COMMENT '[出款编号]',
  type_nm VARCHAR(50) DEFAULT NULL COMMENT '类型',
    principalExpireType VARCHAR(50) DEFAULT NULL COMMENT '本金是否到期',
  is_ovd_replay       VARCHAR(50) DEFAULT NULL COMMENT '是否逾期还款'
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO dma_sal_achv_ovd_business_sum_tmp3
SELECT  
 t.district_name                            -- 区域         
,t.company_name                             -- 分公司    
,t.car_business_id                              -- 业务编号  
,t.car_business_after_id                    -- 期数      
,t.customer_name                            -- 客户姓名  
,t.operator_name                            -- 业务获取  
,t.borrow_date                              -- 应还日期  
,t.fatct_replayDate                         -- 实还日期  
,t.Actual_OutTime                           -- 出款日期  
,t.overdue_days                             -- 逾期天数
,t.ovd_status                               --  逾期状态  
,t.borrow_money                             -- 合同金额  
,t.odd_corpus                               -- 剩余本金  
,t.repayment_type                           -- 还款方式  
,t.should_repay_money                       -- 应还金额  
,t.current_Breach                           -- 违约金    
,t.fact_repay_money                         -- 实还金额  
,0 AS collection_rate                       -- 金额回报率 后面单独计算  
,t.job_duty                                 -- 职业      
,t.mobile_phone                             -- 电话      
,IFNULL(par.remark,'其他') AS  follow_status                -- 综合判断  
,t.follow_user                              -- 跟进专员
,CASE WHEN (sum_current_principa - sum_fact_principa)&lt;0 THEN 0 ELSE (sum_current_principa - sum_fact_principa) END AS surplus_principa -- 剩余本金  
,t.car_business_after_defer_first
,t.car_business_after_id_last
,t.repayed_flag
-- ,t.should_repay_money
-- ,t.surplus_principa 
,t.fact_principa
-- ,t.fact_repay_money
,t.out_id
,t.type_nm -- 类型
,t.principalExpireType
,t.is_ovd_replay
  FROM dma_sal_achv_ovd_business_sum_tmp2 t
  LEFT JOIN (SELECT para_value,remark  FROM ODS_XD_TUANDAI_BM.tb_parameter_ods 
             WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
             AND RESERVE_1='贷后' AND PARA_TYPE='状态' AND PARA_NAME='跟踪记录' AND STATUS=1
             ) par ON t.follow_status_id = par.para_value
 ;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','3:dma_sal_achv_ovd_business_sum_tmp3', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );



/* 待验证
先息后本：a、最后一期到期结清：实还金额/剩余本金；（判断本金是否到期（本金到期），再根据财务确认结清的状态查询）
                             b、未到最后一期逾期提前结清：实还金额/剩余本金；（判断本金是否到期（不是本金到期），再根据财务确认结清的状态查询）
                             c、未到最后一期月还：实还金额/应还金额；（判断本金是否到期（不是本金到期），再根据财务确认还款、代扣成功的状态查询）
                             d、最后一期展期：实还金额/应还金额；（判断是否是展期第一期，再根据财务确认还款、代扣成功的状态查询）
                   等额本息：a、最后一期到期结清：实还金额/应还金额；
                             b、未到最后一期逾期提前结清：实还金额/剩余本金；
                             c、未到最后一期月还：实还金额/应还金额；
*/

ALTER TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum_his TRUNCATE PARTITION dma_sal_achv_ovd_business_sum_his_${pt_day};
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum_his
SELECT  
 t.district_name                            -- 区域         
,t.company_name                             -- 分公司  
,t.type_nm                                  -- 类型  
,t.car_business_id                              -- 业务编号  
,t.car_business_after_id                    -- 期数      
,t.customer_name                            -- 客户姓名  
,t.operator_name                            -- 业务获取  
,t.borrow_date                              -- 应还日期  
,t.fatct_replayDate                         -- 实还日期  
,t.Actual_OutTime                           -- 出款日期  
,t.overdue_days                             -- 逾期天数  
,t.ovd_status                               --  逾期状态
,t.borrow_money                             -- 合同金额  
,t.odd_corpus                               -- 剩余本金  
,t.repayment_type                           -- 还款方式代码  
,IFNULL(rw.repay_way_nm,t.repayment_type)  AS repay_way_nm  -- 还款方式中文名
,t.should_repay_money                       -- 应还金额  
,t.current_Breach                           -- 违约金    
,t.fact_repay_money                         -- 实还金额    
,t.job_duty                                 -- 职业      
,t.mobile_phone                             -- 电话      
,t.follow_status                            -- 综合判断  
,t.follow_user                              -- 跟进专员
,(CASE WHEN t.repayment_type IN ('先息后本', '1', '2') AND t.car_business_after_defer_first IS NOT NULL  AND t.repayed_flag IN (1,4,5)      AND t.should_repay_money != 0                                   THEN t.fact_repay_money / t.should_repay_money 
       WHEN t.repayment_type IN ('先息后本', '1', '2') AND t.car_business_after_id_last IS NOT NULL  AND t.repayed_flag IN (1)              AND (surplus_principa + fact_principa) != 0                     THEN t.fact_repay_money /(surplus_principa + fact_principa)
       WHEN t.repayment_type IN ('先息后本', '1', '2') AND t.car_business_after_id_last IS  NULL  AND repayed_flag = 3                      AND (surplus_principa + fact_principa) !=0                      THEN fact_repay_money / (surplus_principa + fact_principa)
       WHEN t.repayment_type IN ('先息后本', '1', '2') AND t.car_business_after_id_last IS  NULL  AND repayed_flag &lt;&gt; 3                     AND should_repay_money != 0                                     THEN fact_repay_money / should_repay_money
       WHEN t.repayment_type IN ('等额本息', '5', '等本等息', '分期还本付息', '每月等额本息') AND t.car_business_after_id_last IS NOT NULL  AND repayed_flag = 1 AND should_repay_money != 0                THEN fact_repay_money / should_repay_money
       WHEN t.repayment_type IN ('等额本息', '5', '等本等息', '分期还本付息', '每月等额本息') AND t.car_business_after_id_last IS  NULL     AND repayed_flag = 3 AND (surplus_principa + fact_principa)!= 0 THEN fact_repay_money / (surplus_principa + fact_principa)
       WHEN t.repayment_type IN ('等额本息', '5', '等本等息', '分期还本付息', '每月等额本息') AND t.car_business_after_id_last IS  NULL     AND repayed_flag &lt;&gt; 3 AND should_repay_money!= 0                THEN fact_repay_money /should_repay_money
    ELSE 0 END) AS collection_rate -- collection_rate 金额回报率    
,t.car_business_after_defer_first
,t.car_business_after_id_last
,t.repayed_flag
,t.surplus_principa 
,t.fact_principa
,IFNULL(t.out_id,1) AS out_id
,(
  CASE WHEN  ((t.repayment_type IN ('到期还本息','先息后本','1','2','5','分期还本付息','等本等息','等额本息')  AND t.car_business_after_id_last=t.car_business_after_id) OR ( t.car_business_after_defer_first !='')) THEN '本金到期'
       WHEN  ( t.car_business_after_id_last!=t.car_business_after_id ) AND  (t.car_business_after_defer_first ='' OR t.car_business_after_defer_first IS NULL) THEN '本金未到期'
       ELSE '其他' END 
  ) AS PrincipalExpireType
,t.is_ovd_replay
,'tuandai_bm' AS dw_src_sys
,'tb_business_ods,tb_car_business_after_ods,tb_car_personal_ods,tb_parametertracelog_ods,tb_output_list_ods,tb_fsd_customer_ods,tb_car_business_exhibition_ods,tb_department_ods,tb_user_ods,tb_car_job_ods,tb_parameter_ods' AS dw_src_tbl
,CURRENT_TIMESTAMP AS dw_ins_tm
,CURRENT_TIMESTAMP AS dw_upd_tm
,'caihl'           AS dw_ins_usr
,'caihl'           AS dw_upd_usr
,DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt	     --	分区日期
FROM dma_sal_achv_ovd_business_sum_tmp3 t
LEFT JOIN DIM_DATA.dim_evt_xd_repay_way rw ON t.repayment_type = CAST(rw.repay_way_id AS CHAR) AND rw.repay_way_id&lt;&gt;0
ORDER BY t.borrow_date DESC,t.district_name,t.company_name
;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','4:dma_sal_achv_ovd_business_sum_his', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );

TRUNCATE TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum;
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum
SELECT  
 t.district_name                            -- 区域         
,t.company_name                             -- 分公司
,t.type_nm                                  -- 类型     
,t.car_business_id                          -- 业务编号  
,t.car_business_after_id                    -- 期数      
,t.customer_name                            -- 客户姓名  
,t.operator_name                            -- 业务获取  
,t.borrow_date                              -- 应还日期  
,t.fatct_replayDate                         -- 实还日期  
,t.Actual_OutTime                           -- 出款日期  
,t.overdue_days                             -- 逾期天数  
,t.ovd_status                               --  逾期状态
,t.borrow_money                             -- 合同金额  
,t.odd_corpus                               -- 剩余本金  
,t.repayment_type                           -- 还款方式代码  
,t.repay_way_nm                             -- 还款方式中文名
,t.should_repay_money                       -- 应还金额  
,t.current_Breach                           -- 违约金    
,t.fact_repay_money                         -- 实还金额    
,t.job_duty                                 -- 职业      
,t.mobile_phone                             -- 电话      
,t.follow_status                            -- 综合判断  
,t.follow_user                              -- 跟进专员
,t.collection_rate                          -- collection_rate 金额回报率    
,t.car_business_after_defer_first
,t.car_business_after_id_last
,t.repayed_flag
,t.surplus_principa 
,t.fact_principa
,t.out_id
,t.principalExpireType
,t.is_ovd_replay
,'tuandai_bm' AS dw_src_sys
,'tb_business_ods,tb_car_business_after_ods,tb_car_personal_ods,tb_parametertracelog_ods,tb_output_list_ods,tb_fsd_customer_ods,tb_car_business_exhibition_ods,tb_department_ods,tb_user_ods,tb_car_job_ods,tb_parameter_ods' AS dw_src_tbl
,CURRENT_TIMESTAMP AS dw_ins_tm
,CURRENT_TIMESTAMP AS dw_upd_tm
,'caihl'           AS dw_ins_usr
,'caihl'           AS dw_upd_usr
FROM DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum_his t
WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','5:插入到dma_sal_achv_ovd_business_sum', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );


DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_ovd_business_sum_min;
CREATE TEMPORARY TABLE dma_sal_achv_ovd_business_sum_min (
  car_business_id VARCHAR(50) DEFAULT NULL COMMENT '[原业务单号]',
  out_id INT(11) NOT NULL DEFAULT '0' COMMENT '[还款计划次数]',
  min_borrow_date DATETIME DEFAULT NULL COMMENT '应收日期',
  KEY idx_car_business_id (car_business_id),
  KEY idx_out_id (out_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO dma_sal_achv_ovd_business_sum_min
SELECT car_business_id,IFNULL(out_id,1) AS out_id,MIN(t.borrow_date) AS min_borrow_date 
FROM  DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum t
GROUP BY car_business_id,IFNULL(out_id,1)
;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','6:dma_sal_achv_ovd_business_sum_min', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );



TRUNCATE TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum_distinct;
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum_distinct
SELECT  
 t.district_name                            -- 区域         
,t.company_name                             -- 分公司 
,t.type_nm                                  -- 类型    
,t.car_business_id                          -- 业务编号  
,t.car_business_after_id                    -- 期数      
,t.customer_name                            -- 客户姓名  
,t.operator_name                            -- 业务获取  
,t.borrow_date                              -- 应还日期  
,t.fatct_replayDate                         -- 实还日期  
,t.Actual_OutTime                           -- 出款日期  
,t.overdue_days                             -- 逾期天数  
,t.ovd_status                               --  逾期状态
,t.borrow_money                             -- 合同金额  
,t.odd_corpus                               -- 剩余本金  
,t.repayment_type                           -- 还款方式代码  
,t.repay_way_nm                             -- 还款方式中文名
,t.should_repay_money                       -- 应还金额  
,t.current_Breach                           -- 违约金    
,t.fact_repay_money                         -- 实还金额    
,t.job_duty                                 -- 职业      
,t.mobile_phone                             -- 电话      
,t.follow_status                            -- 综合判断  
,t.follow_user                              -- 跟进专员
,t.collection_rate                          -- collection_rate 金额回报率    
,t.car_business_after_defer_first
,t.car_business_after_id_last
,t.repayed_flag
,t.surplus_principa 
,t.fact_principa
,t.out_id
,t.principalExpireType
,t.is_ovd_replay
,'tuandai_bm' AS dw_src_sys
,'tb_business_ods,tb_car_business_after_ods,tb_car_personal_ods,tb_parametertracelog_ods,tb_output_list_ods,tb_fsd_customer_ods,tb_car_business_exhibition_ods,tb_department_ods,tb_user_ods,tb_car_job_ods,tb_parameter_ods' AS dw_src_tbl
,CURRENT_TIMESTAMP AS dw_ins_tm
,CURRENT_TIMESTAMP AS dw_upd_tm
,'caihl'           AS dw_ins_usr
,'caihl'           AS dw_upd_usr
FROM DMA_SAL_ACHV_DATA.dma_sal_achv_ovd_business_sum t
WHERE  NOT EXISTS 
 (SELECT 1 FROM dma_sal_achv_ovd_business_sum_min tt
 WHERE t.car_business_id = tt.car_business_id
  AND  t.out_id = tt.out_id
  AND  t.borrow_date > tt.min_borrow_date
  )
;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','7:插入到dma_sal_achv_ovd_business_sum_distinct>>>end', '0', '总共7步！！', 0,'${pt_day}',  NOW(),  'caihl' );


</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：逾期业务汇总表
创建时间：20180724
创建人   ：caihl
源系统	 ：tuandai_bm
数据源表：tb_business_ods,tb_car_business_after_ods,tb_car_personal_ods,tb_parametertracelog_ods,tb_output_list_ods,tb_fsd_customer_ods,tb_car_business_exhibition_ods,tb_department_ods,tb_user_ods,tb_car_job_ods,tb_parameter_ods
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
caihl 20180726 新增 类型字段
caihl 20180919 tb_car_business_after_ods.fact_principa 有''空字符需要特殊处理
caihl 20180930 新增principalExpireType，is_ovd_replay 2个字段
caihl 20181018 本金是否到期字段逻辑修改</note>
      <xloc>0</xloc>
      <yloc>16</yloc>
      <width>1388</width>
      <heigth>251</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

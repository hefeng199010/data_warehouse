<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_income_detail_his</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>p_day</name>
      <default_value>20180328</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>p_duty_nm</name>
      <default_value>dma_sal_achv_income_detail_his</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection>public_data</connection>
    <schema/>
    <table>TRANS_LOG</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共7步！！', 0,'${p_day}',  NOW(),  'dl' );

DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp1`;
CREATE TEMPORARY TABLE `income_detail_tmp1` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`first_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`customer_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称',
	`shd_principa_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`branch_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务所属分公司编号',
	`area_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '区域编号',
	`settle_way` INT(10) DEFAULT NULL COMMENT '是否提前结清',
	`act_settle_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '实际完结日期',
key `income_detail_tmp1_business_id`(BUSINESS_ID),
key `income_detail_tmp1_branch_id`(branch_id),
key `income_detail_tmp1_area_id`(area_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into income_detail_tmp1
select t2.business_id,
      t2.first_business_id,
      t2.business_type,--	业务类型
	   t2.customer_name, -- 客户姓名
	   t2.shd_principa_amt,
	   t2.branch_id,
	   t2.area_id,
	   t2.fin_settle_way, -- 20180815 由settle_way 改为 fin_settle_way
	   DATE_FORMAT(t2.fin_act_settle_dt,'%Y-%m-%d') act_settle_dt
from DWS_DATA.dws_agr_xd_business t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND (IFNULL(t2.`business_type_detail` ,'business') NOT IN ('T150','A100') or t2.business_type &lt;&gt; 'T140'); -- 20181101 巧芬剔除汽车垫资代采、汽车融资租赁 ;


		
 DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp01`;
CREATE TEMPORARY TABLE `income_detail_tmp01` (
	`business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`out_date` DATETIME NULL DEFAULT NULL COMMENT '[合并还款计划时间]',
key `income_detail_tmp01_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into income_detail_tmp01
select t3.business_id,min(out_date) out_date
from DWS_DATA.dws_evt_xd_output_list t3
where t3.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and t3.out_date >= '2016-03-11'
  and t3.is_issue = '0'
group by t3.business_id;

insert into income_detail_tmp01
select a.BUSINESS_ID,
	   min(a.full_time) out_date
from DWS_DATA.dws_agr_xd_issue_business a
where a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
and ifnull(a.full_time,'') != ''
group by a.BUSINESS_ID;

-- 2018年10月补录的单，因没有补录出款信息，需求方提出以进件日期代替出款日期
insert into income_detail_tmp01
select t2.business_id,
	    DATE_FORMAT(t2.input_time,'%Y-%m-%d') out_date
from DWS_DATA.dws_agr_xd_business t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
and IFNULL(t2.`customer_class`,0) = -1 
and DATE_FORMAT(input_time,'%Y-%m-%d')  >= '2016-03-11';

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','income_detail_tmp1', '100', '获取业务编号基本信息和出款时间', 0,'${p_day}',  NOW(),  'dl' );	

DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp2`;
CREATE TEMPORARY TABLE `income_detail_tmp2` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`date_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '[统计日期]',
	`one_time_fgssr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司收入(一次性)',
	`one_time_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台费(一次性)',
	`one_time_dbf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '担保费(一次性)',
key `income_detail_tmp2_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into income_detail_tmp2
select t2.first_business_id as car_business_id,
       t1.business_id as ext_business_id,
       date_format(t3.out_date,'%Y-%m-%d') as date_id, 
       t1.one_time_fgssr_amt,
	   t1.one_time_ptf_amt,
	   t1.one_time_dbf_amt
from 
(SELECT a.`business_id`,
       SUM(CASE WHEN a.`fee_item_name` IN ('展期手续费','行政综合费', '剩余前置服务费','分公司服务费' ) THEN a.`fee_value` END) one_time_fgssr_amt, -- 分公司收入(一次性)
       SUM(CASE WHEN a.`fee_item_name` IN ('平台费') THEN a.`fee_value` END) one_time_ptf_amt,  -- 平台费(一次性)
       SUM(CASE WHEN a.`fee_item_name` IN ('担保费') THEN a.`fee_value` END) one_time_dbf_amt  -- 担保费(一次性)
FROM ODS_XD_TUANDAI_BM.`tb_business_apply_output_ods` a 
WHERE a.`is_one_time_charge` = 2 
  and a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and a.business_id is not null
GROUP BY a.`business_id`)t1
left join income_detail_tmp1 t2 on t1.business_id = t2.business_id
 join income_detail_tmp01 t3 on t1.business_id = t3.business_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','income_detail_tmp2', '200', '统计一次性费用明细', 0,'${p_day}',  NOW(),  'dl' );	

DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp3`;
CREATE TEMPORARY TABLE `income_detail_tmp3` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`src_type` INT(11) NULL DEFAULT NULL COMMENT '',
key `income_detail_tmp3_car_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

 insert into income_detail_tmp3
 SELECT DISTINCT t1.`orig_business_id`,IFNULL(t1.`src_type`,1) src_type
 from ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_dh_ods t1
 where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;	

DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp4`;
CREATE TEMPORARY TABLE `income_detail_tmp4` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`business_after_id` VARCHAR(50) NOT NULL COMMENT '[期数]',
	`mon_fgssr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费',
	`mon_tqjqfgs_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清违约金',
	`mon_qtsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '其他收入',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台月服务费',
	`mon_tqjqpt_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清平台违约金',
	`mon_znj_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '滞纳金',
	`mon_yqsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '逾期收入',
key `income_detail_tmp4_car_business_id`(car_business_id),
key `income_detail_tmp4_business_after_id`(business_after_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into income_detail_tmp4
SELECT business_id car_business_id,
       business_after_id,
       mon_fgssr_amt,
       mon_tqjqfgs_amt,
       mon_qtsr_amt,
       mon_ptf_amt,
       mon_tqjqpt_amt,
       mon_znj_amt,
       mon_yqsr_amt
FROM (SELECT  a.`business_id`,
				a.`business_after_id`,
				SUM(CASE WHEN a.fee_name LIKE '%月收分公司服务费%' THEN a.actual_fee_value ELSE 0 END) mon_fgssr_amt,
				SUM(CASE WHEN a.fee_name IN ('提前结清分公司服务费违约金','提前结清本金违约金','提前结清违约金') THEN a.actual_fee_value ELSE 0 END) mon_tqjqfgs_amt,
				SUM(CASE WHEN a.fee_name IN ('账户管理费',
								'诉讼费',
								'评估费',
								'查档费',
								'拖车费',
								'执行证书费',
								'停车费',
								'律师费',
								'咨询费',
								'公告费',
								'其他费用',
								'保险费',
								'保全费',
								'仲裁费',
								'上门费',
								'仲裁费',
								'案件受理费',
								'延迟履行金',
								'利差',
								'调查费') THEN a.actual_fee_value ELSE 0 END) mon_qtsr_amt,
				SUM(CASE WHEN a.fee_name LIKE '%平台费%' THEN a.actual_fee_value ELSE 0 END) mon_ptf_amt,
				SUM(CASE WHEN a.fee_name IN ('提前结清平台服务费违约金') THEN a.actual_fee_value ELSE 0 END) mon_tqjqpt_amt,
				SUM(CASE WHEN a.fee_name LIKE '%滞纳金%' THEN a.actual_fee_value ELSE 0 END) mon_znj_amt,
				SUM(CASE WHEN a.fee_name = '逾期收入' THEN a.actual_fee_value ELSE 0 END) mon_yqsr_amt
		FROM ODS_XD_TUANDAI_BM.`tb_car_business_after_detail_ods` a
		WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
		  AND a.`business_after_id` NOT LIKE '%00%' 
		GROUP BY a.`business_id`,
				 a.`business_after_id`)t 
left join income_detail_tmp3 b on t.business_id = b.car_business_id
WHERE mon_yqsr_amt + mon_znj_amt + mon_tqjqpt_amt+ mon_ptf_amt+ mon_qtsr_amt + mon_tqjqfgs_amt +mon_fgssr_amt >0
  and b.src_type = 1
  ;
  
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','income_detail_tmp4', '300', '统计信贷系统按月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	

DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp5`;
CREATE TEMPORARY TABLE `income_detail_tmp5` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`date_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '[统计日期]',
	`mon_fgssr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费',
	`mon_tqjqfgs_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清违约金',
	`mon_qtsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '其他收入',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台月服务费',
	`mon_tqjqpt_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清平台违约金',
	`mon_znj_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '滞纳金',
	`mon_yqsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '逾期收入',
	`fact_principa` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '本金',
key `income_detail_tmp5_car_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

-- insert into income_detail_tmp5
-- select a.car_business_id,
       -- o.ext_business_id,
       -- DATE_FORMAT(ifnull(o.finance_confirmed_date,o.fatct_replayDate),'%Y-%m-%d') date_id,
       -- a.mon_fgssr_amt,
       -- a.mon_tqjqfgs_amt,
       -- a.mon_qtsr_amt,
       -- a.mon_ptf_amt,
       -- a.mon_tqjqpt_amt,
       -- a.mon_znj_amt,
       -- a.mon_yqsr_amt,
       -- ifnull(o.fact_principa)
-- from income_detail_tmp4 a
-- left join (select car_business_id, car_business_after_id, repayed_flag,finance_confirmed_date,fatct_replayDate,IFNULL(o.`car_business_after_defer`,o.`car_business_id`)ext_business_id ,fact_principa
            -- from ODS_XD_TUANDAI_BM.tb_car_business_after_ods o 
			-- where o.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') ) o
	   -- on a.car_business_id = o.car_business_id and a.business_after_id = o.car_business_after_id
-- where ifnull(o.repayed_flag,0)!=6 ;  -- repayed_type = 6 表示申请展期的那一期

insert into income_detail_tmp5
select o.car_business_id,
       o.ext_business_id,
       DATE_FORMAT(ifnull(o.finance_confirmed_date,o.fatct_replayDate),'%Y-%m-%d') date_id,
       ifnull(a.mon_fgssr_amt,0) mon_fgssr_amt,
       ifnull(a.mon_tqjqfgs_amt,0) mon_tqjqfgs_amt,
       ifnull(a.mon_qtsr_amt,0) mon_qtsr_amt,
       ifnull(a.mon_ptf_amt,0) mon_ptf_amt,
       ifnull(a.mon_tqjqpt_amt,0) mon_tqjqpt_amt,
       ifnull(a.mon_znj_amt,0) mon_znj_amt,
       ifnull(a.mon_yqsr_amt,0) mon_yqsr_amt,
       ifnull(o.fact_principa,0) fact_principa
from (select o.car_business_id, car_business_after_id, repayed_flag,finance_confirmed_date,fatct_replayDate,IFNULL(o.`car_business_after_defer`,o.`car_business_id`)ext_business_id ,fact_principa
		from ODS_XD_TUANDAI_BM.tb_car_business_after_ods o 
		join income_detail_tmp3 t1 on o.car_business_id = t1.car_business_id 
		where o.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
		  and ifnull(o.repayed_flag,0)!=6	
		  and t1.src_type = 1) o
left join income_detail_tmp4 a on a.car_business_id = o.car_business_id and a.business_after_id = o.car_business_after_id ;  -- repayed_type = 6 表示申请展期的那一期


insert into income_detail_tmp5
SELECT t2.orig_business_id AS car_business_id,
       t1.business_id as ext_business_id,
       DATE_FORMAT(IFNULL(t2.finance_comfirm_date,t2.fact_repay_date),'%Y-%m-%d') date_id,
       t1.mon_fgssr_amt,
       t1.mon_tqjqfgs_amt,
       t1.mon_qtsr_amt,
       t1.mon_ptf_amt,
       t1.mon_tqjqpt_amt,
       t1.mon_znj_amt,
       t1.mon_yqsr_amt,
       t1.fact_principa
FROM 
(SELECT a.`plan_list_id`,
	   a.`business_id`,
		SUM(CASE WHEN a.plan_item_name LIKE '%月收分公司服务费%' or a.plan_item_name = '分公司费用' THEN a.fact_amount ELSE 0 END) mon_fgssr_amt,
		SUM(CASE WHEN a.plan_item_name IN ('提前结清分公司服务费违约金','提前结清本金违约金','提前结清违约金') THEN a.fact_amount ELSE 0 END) mon_tqjqfgs_amt,
		SUM(CASE WHEN a.plan_item_name IN ('账户管理费',
						'诉讼费',
						'评估费',
						'查档费',
						'拖车费',
						'执行证书费',
						'停车费',
						'律师费',
						'咨询费',
						'公告费',
						'其他费用',
						'保险费',
						'保全费',
						'仲裁费',
						'上门费',
						'仲裁费',
						'案件受理费',
						'延迟履行金',
						'利差',
						'调查费') THEN a.fact_amount ELSE 0 END) mon_qtsr_amt,
		SUM(CASE WHEN a.plan_item_name LIKE '%平台费%' THEN a.fact_amount ELSE 0 END) mon_ptf_amt,
		SUM(CASE WHEN a.plan_item_name IN ('提前结清平台服务费违约金') THEN a.fact_amount ELSE 0 END) mon_tqjqpt_amt,
		SUM(CASE WHEN a.plan_item_name LIKE '%滞纳金%' THEN a.fact_amount ELSE 0 END) mon_znj_amt,
		SUM(CASE WHEN a.plan_item_name = '逾期收入' THEN a.fact_amount ELSE 0 END) mon_yqsr_amt,
		SUM(CASE WHEN a.plan_item_name = '本金' THEN a.fact_amount ELSE 0 END) fact_principa
FROM  `ODS_XD_TUANDAI_BM`.`tb_repayment_biz_plan_list_detail_dh_ods` a
WHERE IFNULL(a.`src_type`,1) != 1
  AND part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  GROUP BY a.`plan_list_id`,
	   a.`business_id`)t1
LEFT JOIN (
SELECT t.`plan_list_id`,t.`orig_business_id`,t.`fact_repay_date`,t.`finance_comfirm_date`, IFNULL(t.`repay_flag`,0) repay_flag
FROM `ODS_XD_TUANDAI_BM`.`tb_repayment_biz_plan_list_dh_ods` t 
WHERE IFNULL(t.`src_type`,1) != 1 
  AND t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  )t2 ON t1.plan_list_id = t2.plan_list_id
WHERE t2.repay_flag !=6; 

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','income_detail_tmp5', '400', '统计贷后系统和信贷系统月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	


DROP TEMPORARY TABLE IF EXISTS `income_detail_tmp6`;
CREATE TEMPORARY TABLE `income_detail_tmp6` (
	`car_business_id` VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	`ext_business_id` VARCHAR(50) NOT NULL COMMENT '[展期业务编号]',
	`date_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '[统计日期]',
	`one_time_fgssr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司收入(一次性)',
	`one_time_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台费(一次性)',
	`one_time_dbf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '担保费(一次性)',
	`mon_fgssr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '分公司月服务费',
	`mon_tqjqfgs_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清违约金',
	`mon_qtsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '其他收入',
	`mon_ptf_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '平台月服务费',
	`mon_tqjqpt_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '提前结清平台违约金',
	`mon_znj_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '滞纳金',
	`mon_yqsr_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '逾期收入',
	`fact_principa` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '本金',
key `income_detail_tmp6_car_business_id`(car_business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ; 

insert into income_detail_tmp6 
select *
from (
		select  tt.car_business_id,
				tt.ext_business_id,
			   tt.date_id,
			   sum(one_time_fgssr_amt) one_time_fgssr_amt,
			   sum(one_time_ptf_amt) one_time_ptf_amt,
			   sum(one_time_dbf_amt) one_time_dbf_amt,
			   sum(mon_fgssr_amt) mon_fgssr_amt,
			   sum(mon_tqjqfgs_amt) mon_tqjqfgs_amt,
			   sum(mon_qtsr_amt) mon_qtsr_amt,
			   sum(mon_ptf_amt) mon_ptf_amt,
			   sum(mon_tqjqpt_amt) mon_tqjqpt_amt,
			   sum(mon_znj_amt) mon_znj_amt,
			   sum(mon_yqsr_amt) mon_yqsr_amt,
			   sum(fact_principa) fact_principa
		from 
		(
			select t1.car_business_id,
				   t1.ext_business_id,
				   t1.date_id,
				   t1.one_time_fgssr_amt,
				   t1.one_time_ptf_amt,
				   t1.one_time_dbf_amt,
				   0 as mon_fgssr_amt,
				   0 as mon_tqjqfgs_amt,
				   0 as mon_qtsr_amt,
				   0 as mon_ptf_amt,
				   0 as mon_tqjqpt_amt,
				   0 as mon_znj_amt,
				   0 as mon_yqsr_amt,
				   0 as fact_principa
			from income_detail_tmp2 t1
			union all
			 select t1.car_business_id,
				   t1.ext_business_id,
				   t1.date_id,
				   0 as one_time_fgssr_amt,
				   0 as one_time_ptf_amt,
				   0 as one_time_dbf_amt,
				   t1.mon_fgssr_amt,
				   t1.mon_tqjqfgs_amt,
				   t1.mon_qtsr_amt,
				   t1.mon_ptf_amt,
				   t1.mon_tqjqpt_amt,
				   t1.mon_znj_amt,
				   t1.mon_yqsr_amt,
				   t1.fact_principa
			from income_detail_tmp5 t1
		)tt
		group by  tt.car_business_id,
				  tt.ext_business_id,
				  tt.date_id
		  ) td 
where one_time_fgssr_amt+one_time_ptf_amt+one_time_dbf_amt+mon_yqsr_amt + mon_znj_amt + mon_tqjqpt_amt+ mon_ptf_amt+ mon_qtsr_amt + mon_tqjqfgs_amt +mon_fgssr_amt+fact_principa>0;
  

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','income_detail_tmp6', '500', '汇总贷后系统和信贷系统一次性收和月收费用明细', 0,'${p_day}',  NOW(),  'dl' );	
  
  
alter table dma_sal_achv_income_detail_his truncate partition dma_sal_achv_income_detail_his_${pt_day};
insert into dma_sal_achv_income_detail_his 	  
select     
		   t1.date_id,
		   t1.car_business_id,
	       t1.ext_business_id,
		   date_format(t3.out_date,'%Y-%m-%d') out_date,
		   t4.business_type_nm,
		   t5.branch_nm,
		   t5.area_nm,
		   t2.`customer_name`,
	      case when IFNULL(t2.settle_way,-1) >= 0 and t2.act_settle_dt &lt;= t1.date_id then '1'  else '0'  end as is_settled, -- 是否结清1 已结清，0 未结清
	       t2.`shd_principa_amt` ,
		   t1.one_time_fgssr_amt,
		   t1.one_time_ptf_amt,
		   t1.one_time_dbf_amt,
		   t1.mon_fgssr_amt,
		   t1.mon_tqjqfgs_amt,
		   t1.mon_qtsr_amt,
		   t1.mon_ptf_amt,
		   t1.mon_tqjqpt_amt,
		   t1.mon_znj_amt,
		   t1.mon_yqsr_amt,
		   t1.fact_principa,
		   now() dw_ins_tm,
		   'dl' dw_ins_usr,
		    DATE_FORMAT('${pt_day}','%Y-%m-%d') part_dt
from income_detail_tmp6 t1
join (select distinct   t2.business_id,
			  t2.first_business_id,
			  t2.business_type,--	业务类型
			   t2.customer_name, -- 客户姓名
			   t2.shd_principa_amt,
			   t2.branch_id,
			   t2.area_id,
			   t2.settle_way, -- 20180815 由settle_way 改为 fin_settle_way
			   t2.act_settle_dt
	   from income_detail_tmp1 t2
	   where t2.business_id not like '%ZQ%') t2 on t1.car_business_id = t2.first_business_id
join income_detail_tmp01 t3 on t1.car_business_id = t3.business_id
left join DIM_DATA.`dim_prd_xd_business_type` t4 on t2.business_type = t4.business_type
left join DIM_DATA.dim_org_info t5 on t2.branch_id = t5.branch_id
where t5.dw_src_sys ='xd'
and t1.car_business_id not in ('TDF1012017071903')  -- add by caihl20181129 TDF1012017071903 该笔属于管车所业务，但是上标用房速贷业务类型，所以本息情况表（新）屏蔽掉该笔业务，不统计。
and not exists (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (IFNULL(xb.`business_type_detail` ,'business')  IN ('T150'))
                AND xb.business_id = t1.car_business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
and not exists (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business xb
               WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (xb.business_type  IN ('A100','T140'))
                AND xb.business_id = t1.car_business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
			  
;



insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '600', '收入明细表，成功！！！！', 0,'${p_day}',  NOW(),  'dl' );




</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：dma_sal_achv_income_detail_his 核心账务报表-收入明细表（房速贷）
创建时间：20181029
创建人   ：dailiang
源系统	 ：tuandai_bm hongte_alms
数据源表：
运行频率：天(存历史数据)
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181129 1215冲刺核心账务剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据 和过滤 TDF1012017071903这个单</note>
      <xloc>0</xloc>
      <yloc>0</yloc>
      <width>721</width>
      <heigth>203</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

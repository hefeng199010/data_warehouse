<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_shd_act_srv_fee_sum_v2</name>
  <description/>
  <extended_description>核心账务系统-应收账款统计表</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_fsd_out_tra_detail</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>/*
1.TDC2052017050401		2548d41d-8bc8-4162-9642-1bbdbecc8e9a 改单在信贷和贷后都没有标的对应的费用 看是否取业务对应的费用 参考应收未收明细表 2017/5/5 这个在2017-05-17之后
2.where ifnull(tt2.full_issue_date,'') >='2017-05-17'   -- 10月正常要做收入，系统未做中有60个单是通过这个条件过滤掉的

*/
SET SESSION tmp_table_size=2*1024*1024*1024;
SET SESSION max_heap_table_size=2*1024*1024*1024;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>&gt;&gt;&gt;&gt; JOB START >>>>>>>>>>', '0', '总共7步！！', 0,'${p_day}',  NOW(),  'dl' );

  
/* 结清期对应的应还日期 参考应收未收明细表-房速贷 begin*/
 DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_dh_ods_tmp;
 CREATE TEMPORARY TABLE `tb_repayment_biz_plan_list_dh_ods_tmp` (
  `orig_business_id` varchar(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  `after_id` varchar(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  `period` int(11) NOT NULL COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `src_type` int(11) DEFAULT NULL COMMENT '来源类型：1.信贷生成，2.贷后管理生成',
  `due_date` datetime NOT NULL COMMENT '应还日期',
  `plan_list_id` varchar(50) NOT NULL COMMENT '还款计划列表ID(主键)',
  `finance_comfirm_date` datetime DEFAULT NULL COMMENT '财务确认还款操作日期',
  KEY `idx_orig_business_id_after_id` (`orig_business_id`,`after_id`),
  key idx_plan_list_id(plan_list_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into tb_repayment_biz_plan_list_dh_ods_tmp
 SELECT
 tt.orig_business_id
 ,tt.after_id
 ,tt.period
 ,tt.src_type
 ,tt.due_date
 ,tt.`plan_list_id`
,tt.finance_comfirm_date
 FROM ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_dh_ods tt 
WHERE tt.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
;


 DROP TEMPORARY TABLE IF EXISTS dws_agr_xd_dh_business_after_src_tmp;
 CREATE TEMPORARY TABLE `dws_agr_xd_dh_business_after_src_tmp` (
  `car_business_id` varchar(50) DEFAULT NULL COMMENT '[业务编号]',
  `car_business_after_id` varchar(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `period` int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `borrow_date` datetime DEFAULT NULL COMMENT '[还款日期]'
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into dws_agr_xd_dh_business_after_src_tmp
 SELECT t.car_business_id,t.car_business_after_id,tt.period,t.borrow_date
 FROM DWS_DATA.dws_agr_xd_dh_business_after t
  LEFT JOIN  tb_repayment_biz_plan_list_dh_ods_tmp tt ON t.car_business_id = tt.orig_business_id AND t.car_business_after_id = tt.after_id 
WHERE t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
;
/* 20181218 新增period end*/  
  
DROP TEMPORARY TABLE IF EXISTS dws_agr_xd_dh_business_after_tmp;
CREATE TEMPORARY TABLE `dws_agr_xd_dh_business_after_tmp` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO dws_agr_xd_dh_business_after_tmp
SELECT 
tt.car_business_id,
MIN(tt.borrow_date) AS borrow_date
FROM  DWS_DATA.dws_agr_xd_dh_business_after tt 
WHERE tt.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  AND tt.repayed_flag=3 
GROUP BY car_business_id
;
  
/*源业务结清*/
DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp00`;
CREATE TEMPORARY TABLE `settle_date_tmp00` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO `settle_date_tmp00`
SELECT
t.car_business_id  -- 源业务编号
,MAX(t.car_business_after_id) AS max_car_business_after_id -- 结清期次
,MAX(t.borrow_date)           AS  max_borrow_date           -- 结清期对应的应还日期
,max(t.period)  as period
-- t.finance_confirmed_date,t.fatct_replayDate,t.* 
-- FROM DWS_DATA.dws_agr_xd_dh_business_after t
from dws_agr_xd_dh_business_after_src_tmp t
INNER JOIN (SELECT 
            xb.business_id
            ,xb.fin_act_settle_dt
            ,xb.fin_settle_way
            ,xb.act_settle_dt
            ,xb.settle_way
             FROM DWS_DATA.dws_agr_xd_business xb 
            WHERE xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
            -- AND xb.fin_settle_way>0  -- 财务确认结清
			AND (CASE WHEN xb.`platform_id`=2 THEN xb.`settle_way` ELSE xb.fin_settle_way END )>0    -- 你我金融的由于没有财务确认时间所以取实还结清
            ) xb ON t.car_business_id = xb.business_id
WHERE 1=1
-- and t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND EXISTS (SELECT 1 FROM dws_agr_xd_dh_business_after_tmp tt WHERE tt.`car_business_id` = t.car_business_id AND t.`borrow_date` &lt; tt.`borrow_date`)
GROUP BY t.car_business_id
;

DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp_01`;
CREATE TEMPORARY TABLE `settle_date_tmp_01` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
 /*最后一期结清*/
INSERT INTO `settle_date_tmp_01`
SELECT
t.car_business_id  -- 源业务编号
,MAX(t.car_business_after_id) AS max_car_business_after_id -- 结清期次
,MAX(t.borrow_date)           AS  max_borrow_date           -- 结清期对应的应还日期
,max(t.period)                as period
-- t.finance_confirmed_date,t.fatct_replayDate,t.* 
-- FROM DWS_DATA.dws_agr_xd_dh_business_after t
from dws_agr_xd_dh_business_after_src_tmp t
INNER JOIN (SELECT 
            xb.business_id
            ,xb.fin_act_settle_dt
            ,xb.fin_settle_way
            ,xb.act_settle_dt
            ,xb.settle_way
             FROM DWS_DATA.dws_agr_xd_business xb 
            WHERE xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
            AND xb.fin_settle_way>0  -- 财务确认结清
            ) xb ON t.car_business_id = xb.business_id
WHERE  1=1
-- and t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND not EXISTS (SELECT 1 FROM settle_date_tmp00 tt WHERE tt.`car_business_id` = t.car_business_id)
GROUP BY t.car_business_id
;


INSERT INTO `settle_date_tmp_01`
SELECT 
t.car_business_id  -- 源业务编号
,t.max_car_business_after_id -- 结清期次
,t.max_borrow_date           -- 结清期对应的应还日期
,t.period
FROM settle_date_tmp00 t
; 

/* 对结清单多次出款的原业务单号 取最晚的的还款计划对应的应还日期 begin*/
DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_dh_ods_tmp1;
CREATE TEMPORARY TABLE `tb_repayment_biz_plan_list_dh_ods_tmp1` (
  `orig_business_id` VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  `period` INT(11) NOT NULL COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `due_date` DATETIME COMMENT '应还日期',
  KEY `idx_orig_business_id` (`orig_business_id`),
  KEY `idx_orig_business_id_period` (`orig_business_id`,`period`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_repayment_biz_plan_list_dh_ods_tmp1
SELECT pl.orig_business_id,pl.period,MAX(pl.due_date) AS due_date
FROM (
SELECT t.`original_business_id`,t.`xd_out_id`,t.`is_defer`,t.`plan_status`
 FROM ODS_XD_TUANDAI_BM.`tb_repayment_biz_plan_dh_ods` t
WHERE t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND t.`plan_status` IN (10,20,30)
 AND t.`is_defer`=0
 GROUP BY t.`original_business_id`
 HAVING COUNT(1)>1
 ) tt INNER JOIN tb_repayment_biz_plan_list_dh_ods_tmp pl ON  tt.original_business_id = pl.orig_business_id
 GROUP BY pl.orig_business_id,pl.period
 ;
 DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp`;
CREATE TEMPORARY TABLE `settle_date_tmp` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

insert into settle_date_tmp
  SELECT 
   t.car_business_id
  ,t.max_car_business_after_id
  ,IFNULL(tt.due_date,t.max_borrow_date)   AS max_borrow_date
  ,t.period
   FROM settle_date_tmp_01 t
  LEFT JOIN tb_repayment_biz_plan_list_dh_ods_tmp1 tt ON t.car_business_id = tt.orig_business_id AND t.period= tt.period
; 
 
/* 结清期对应的应还日期 参考应收未收明细表-房速贷 end*/
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','1生成结清对应的应还日期数据', '0', '总共10步！！', 0,'${p_day}',  NOW(),  'dl' );
 
  
  
 /* 获取费用项*/ 
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_sum_v2_tmp1`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_sum_v2_tmp1` ( 
	`fee_item_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目ID',
	`flag` INT(11) NULL DEFAULT NULL COMMENT '费用项目ID',
KEY `shd_act_srv_fee_sum_v2_tmp1_fee_item_id`(fee_item_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO shd_act_srv_fee_sum_v2_tmp1
select distinct fee_item_id AS fee_item_id,1 as flag
from ODS_XD_TUANDAI_BM.tb_business_apply_output_ods t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4'  -- 分公司费用
and fee_item_id is not null
UNION ALL
SELECT 'f6b645e8-480b-11e7-8ed5-000c2928bb0d' AS fee_item_id,1  as flag -- update 20180723 展期未结清服务费不是配置的  写死fee_id来取值  单独计算
union all
select distinct fee_item_id AS fee_item_id,2  as flag
from ODS_XD_TUANDAI_BM.tb_business_apply_output_ods t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.`fee_item_name` ='剩余前置服务费';   -- 你我金融计算剩余前置服务费 

 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','shd_act_srv_fee_sum_v2_tmp1', '100', '从业务出款申请费用明细表生成服务费用id', 0,'${p_day}',  NOW(),  'dl' );
  
   /* 获取展期标的数据*/
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp4`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp4` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`full_issue_date` DATETIME NULL DEFAULT NULL COMMENT '满标时间',
	`RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
	`IdentityCard` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
	`first_business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
KEY `shd_act_srv_fee_v2_tmp4_first_business_id`(first_business_id),
KEY `shd_act_srv_fee_v2_tmp4_IdentityCard`(IdentityCard)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp4
SELECT  a.issue_id,
        a.business_id,
	a.full_issue_date,
	a.RealName ,
	a.full_borrow_money,
	a.`IdentityCard` ,
	b.`is_extension`,
	b.`first_business_id`
FROM DWS_DATA.`dws_agr_xd_issue_business` a
LEFT JOIN DWS_DATA.`dws_agr_xd_business` b ON a.`business_id` = b.`business_id`
WHERE a.`part_dt` =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND b.`part_dt` =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND b.is_extension = 1 ; -- 展期
  
     /* 获取非展期标的数据*/  
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp44`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp44` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`full_issue_date` DATETIME NULL DEFAULT NULL COMMENT '满标时间',
	`RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
	`IdentityCard` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
	`first_business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
KEY `shd_act_srv_fee_v2_tmp44_first_business_id`(first_business_id),
KEY `shd_act_srv_fee_v2_tmp44_IdentityCard`(IdentityCard)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp44
SELECT  a.issue_id,
        a.business_id,
	a.full_issue_date,
	a.RealName ,
	a.full_borrow_money,
	a.`IdentityCard` ,
	b.`is_extension`,
	b.`first_business_id`
FROM DWS_DATA.`dws_agr_xd_issue_business` a
LEFT JOIN DWS_DATA.`dws_agr_xd_business` b ON a.`business_id` = b.`business_id`
WHERE a.`part_dt` =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND b.`part_dt` =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND b.is_extension = 0 ; -- 非展期
  
  
   /* 获取展期标的获取原标的信息*/
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp444`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp444` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`full_issue_date` DATETIME NULL DEFAULT NULL COMMENT '满标时间',
	`RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
	`origin_issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	src_data  int(2) NULL DEFAULT NULL COMMENT '数据来源:1为展期标的数据 0为非展期标的数据',
KEY `shd_act_srv_fee_v2_tmp444_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp444
SELECT t1.issue_id,
       t1.business_id,
	   t1.full_issue_date,
	   t1.RealName ,
	   t1.full_borrow_money,
       t2.issue_id as origin_issue_id,
	   1 as src_data
FROM shd_act_srv_fee_v2_tmp4 t1  -- 展期标的数据
LEFT JOIN shd_act_srv_fee_v2_tmp44 t2 ON t1.first_business_id = t2.first_business_id AND t1.IdentityCard = t2.IdentityCard; -- 根据原业务编号+身份证号码关联

insert into shd_act_srv_fee_v2_tmp444
SELECT t1.issue_id,
       t1.business_id,
	   t1.full_issue_date,
	   t1.RealName ,
	   t1.full_borrow_money,
       '' as origin_issue_id,
	   0 as src_data
FROM shd_act_srv_fee_v2_tmp44 t1; -- 非展期标的数据

-- 贷后系统中获取标的费用信息  
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp55`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp55` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`due_date` VARCHAR(10) NULL DEFAULT NULL COMMENT '应还时间',
	`fact_repay_date` VARCHAR(10) NULL DEFAULT NULL COMMENT '实还时间',
	`plan_fee_value` DECIMAL(18,4) NULL DEFAULT NULL COMMENT '满标金额',
	`act_fee_value` DECIMAL(18,4) NULL DEFAULT NULL COMMENT '满标金额',
	`fee_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用id',
KEY `shd_act_srv_fee_v2_tmp55_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp55
SELECT t3.`project_id` AS issue_id,
       t1.`business_id`,
       DATE_FORMAT(t1.due_date,'%Y-%m-%d') AS shd_repayment_date,
       ifnull(DATE_FORMAT(t4.finance_comfirm_date,'%Y-%m-%d'),DATE_FORMAT(t2.fact_repay_date,'%Y-%m-%d')) AS finance_comfirm_date, -- 20180930 update by dailiang 陈泽圣反馈以t2.fact_repay_date为准
       IFNULL(t1.`proj_plan_amount`,0) AS plan_fee_value,
       IFNULL(t1.`proj_fact_amount`,0) AS act_fee_value,
	   t1.`fee_id`
FROM ODS_XD_TUANDAI_BM.tb_repayment_proj_plan_list_detail_dh_ods t1
LEFT JOIN (SELECT t2.proj_plan_list_id
                 ,t2.proj_plan_id
                 ,t2.fact_repay_date
		  FROM ODS_XD_TUANDAI_BM.tb_repayment_proj_plan_list_dh_ods t2 WHERE part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')) t2 ON t1.`proj_plan_list_id` = t2.`proj_plan_list_id`
LEFT JOIN (SELECT t3.`proj_plan_id`
                 ,t3.`project_id` 
		  FROM ODS_XD_TUANDAI_BM.tb_repayment_proj_plan_dh_ods t3      WHERE part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') ) t3 ON t2.`proj_plan_id` = t3.`proj_plan_id`
LEFT JOIN tb_repayment_biz_plan_list_dh_ods_tmp t4 ON t1.`plan_list_id` = t4.`plan_list_id`
where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');

  
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp2`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp2` (
    src_data int(5) null,
		`dat_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '数据日期(应收日期或实收日期或提现日期)',
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`is_first_period` INT(11) NULL DEFAULT NULL COMMENT '是否00期',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`day_shd_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天应收服务费金额',
	`day_act_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天实收服务费金额',
	`day_shd_qz_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天剩余前置服务费金额',
KEY `shd_act_srv_fee_v2_tmp2_dat_dt`(dat_dt),
KEY `shd_act_srv_fee_v2_tmp2_issue_id`(issue_id),
KEY `shd_act_srv_fee_v2_tmp2_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;
	
-- 取信贷系统应收明细（要区分00期和非00期）	
insert into shd_act_srv_fee_v2_tmp2
select  1  as src_data,
        date_format(ba.plan_repayment_date,'%Y-%m-%d') as dat_dt,
		case when ba.business_after_id like '%ZQ%00%' and ba.fee_id = 'f6b645e8-480b-11e7-8ed5-000c2928bb0d' then tt.origin_issue_id else ba.issue_id end as issue_id,
		case when  ba.business_after_id like '%00%' then 0 else 1 end is_first_period,
		ba.business_id as business_id,
		sum(case when t2.flag = 1 then ifnull(plan_fee_value,0) else 0 end) as day_shd_srv_fee_amt,-- 当天应收服务费金额
		0 as day_act_srv_fee_amt, -- 当天实收服务费金额
		sum(case when t2.flag = 2 then ifnull(plan_fee_value,0) else 0 end ) as day_shd_qz_srv_fee_amt
from ODS_XD_TUANDAI_BM.tb_issue_business_after_detail_ods ba
left join (select car_business_id, car_business_after_id, repayed_flag from ODS_XD_TUANDAI_BM.tb_car_business_after_ods o where o.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') ) o
       on ba.business_id = o.car_business_id and ba.business_after_id = o.car_business_after_id
left join shd_act_srv_fee_v2_tmp444 tt on ba.issue_id = tt.issue_id
join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id
where ba.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and ifnull(o.repayed_flag,0)!=6   -- repayed_type = 6 表示申请展期的那一期
  -- and ba.issue_id not in (select distinct issue_id  from shd_act_srv_fee_v2_tmp55 )
   AND  NOT EXISTS (SELECT 1 FROM shd_act_srv_fee_v2_tmp55 tmp55 WHERE ba.issue_id=tmp55.issue_id)
  group by date_format(ba.plan_repayment_date,'%Y-%m-%d'),
		case when ba.business_after_id like '%ZQ%00%'  and ba.fee_id = 'f6b645e8-480b-11e7-8ed5-000c2928bb0d' then tt.origin_issue_id else ba.issue_id end,
		case when  ba.business_after_id like '%00%' then 0 else 1 end,
		 ba.business_id;	

-- 取信贷系统实收明细（要区分00期和非00期）		
insert into shd_act_srv_fee_v2_tmp2
select  2 as src_data,
        date_format(ba.actual_repayment_date,'%Y-%m-%d') as dat_dt,
		ba.issue_id,
		ba.is_first_period,
		ba.business_id as business_id,
		0 as day_shd_srv_fee_amt,-- 当天应收服务费金额
		-- 0 as day_act_srv_fee_amt ,-- 当天实收服务费金额,  20180719修改，改成从还款计划获取实收服务费金额
		sum(IFNULL(ba.actual_fee_value,0)) as day_act_srv_fee_amt, -- 当天实收服务费金额
		0 as day_shd_qz_srv_fee_amt
from (select case when ba.business_after_id like '%ZQ%00%'  and ba.fee_id = 'f6b645e8-480b-11e7-8ed5-000c2928bb0d' then tt.origin_issue_id else ba.issue_id end as issue_id,
		     ba.business_id,
		     case when  ba.business_after_id like '%00%' then 0 else 1 end is_first_period,
			 -- case when business_after_id like '%00%' and actual_repayment_date is null then plan_repayment_date else actual_repayment_date end as actual_repayment_date,
			 case when business_after_id like '%00%' and o.finance_confirmed_date is null then ba.plan_repayment_date else o.finance_confirmed_date end as actual_repayment_date,
			 case when business_after_id like '%00%' and o.finance_confirmed_date is null then ba.plan_fee_value else actual_fee_value end as actual_fee_value
      from ODS_XD_TUANDAI_BM.tb_issue_business_after_detail_ods ba
      left join (select car_business_id, car_business_after_id, repayed_flag,ifnull(finance_confirmed_date,fatct_replayDate)finance_confirmed_date  from ODS_XD_TUANDAI_BM.tb_car_business_after_ods o where o.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') ) o
             on ba.business_id = o.car_business_id and ba.business_after_id = o.car_business_after_id
      left join shd_act_srv_fee_v2_tmp444 tt on ba.issue_id = tt.issue_id
      join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id
     where ba.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
       and ifnull(o.repayed_flag,0)!=6   -- repayed_type = 6 表示申请展期的那一期
       -- and ba.issue_id not in (select distinct issue_id  from shd_act_srv_fee_v2_tmp55 )
	   AND  NOT EXISTS (SELECT 1 FROM shd_act_srv_fee_v2_tmp55 tmp55 WHERE ba.issue_id=tmp55.issue_id)
	   and t2.flag = 1   -- 实收不考虑前置服务费
	   )ba
WHERE ba.actual_repayment_date IS NOT NULL
group by date_format(ba.actual_repayment_date,'%Y-%m-%d'),
		 ba.issue_id,
		ba.is_first_period,
		 ba.business_id;		

-- 贷后系统新增标的（要区分00期和非00期）	
insert into shd_act_srv_fee_v2_tmp2
select  
        3 as src_data,
		due_date as dat_dt,  -- 应收
		ba.issue_id ,
		1,
		ba.business_id ,
		sum(IFNULL(ba.plan_fee_value,0)) as day_shd_srv_fee_amt,-- 当天应收服务费金额
		0 as day_act_srv_fee_amt, -- 当天实收服务费金额
		0 as day_shd_qz_srv_fee_amt
from shd_act_srv_fee_v2_tmp55 ba
left join shd_act_srv_fee_v2_tmp444 tt on ba.issue_id = tt.issue_id
     join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id
-- left join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id  -- add 20181225
group by due_date ,
		ba.issue_id ,
		ba.business_id;		

insert into shd_act_srv_fee_v2_tmp2
select  
        4 as src_data,
		ba.fact_repay_date as dat_dt, -- 实收
		ba.issue_id ,
		1,
		ba.business_id ,
		0 as day_shd_srv_fee_amt,-- 当天应收服务费金额
		sum(IFNULL(ba.act_fee_value,0)) as day_act_srv_fee_amt,-- 当天实收服务费金额
		0 as day_shd_qz_srv_fee_amt
from shd_act_srv_fee_v2_tmp55 ba
left join shd_act_srv_fee_v2_tmp444 tt on ba.issue_id = tt.issue_id
      join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id
-- left join shd_act_srv_fee_sum_v2_tmp1 t2 on ba.fee_id = t2.fee_item_id -- add 20181225
where ba.fact_repay_date is not null
group by ba.fact_repay_date ,
		ba.issue_id ,
		ba.business_id;		


insert into shd_act_srv_fee_v2_tmp2
SELECT 
       5 as src_data,
	   DATE_FORMAT(t2.query_full_success_date,'%Y-%m-%d') AS dat_dt,
	   t1.issue_id,
        0,
	    t2.business_id,
       SUM(case when t3.flag = 1 then ifnull(t1.`fee_value`,0) else 0 end ) AS day_shd_srv_fee_amt,-- 应收_分公司费用
       SUM(case when t3.flag = 1 then ifnull(t1.`fee_value`,0) else 0 end ) AS act_total_fee_amt,-- 应收_分公司费用
		sum(case when t3.flag = 2 then ifnull(t1.`fee_value`,0) else 0 end ) as day_shd_qz_srv_fee_amt
FROM ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t1
JOIN (SELECT business_id,proj_plan_id,query_full_success_date FROM ODS_XD_TUANDAI_BM.tb_repayment_proj_plan_dh_ods t3 WHERE part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') ) t2 ON t1.issue_id = t2.proj_plan_id
join shd_act_srv_fee_sum_v2_tmp1 t3 on t1.fee_item_id = t3.fee_item_id
WHERE  t1.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND t1.is_one_time_charge = 2 -- 一次性收取
  GROUP BY  t1.issue_id,
	t2.business_id,
       DATE_FORMAT(t2.query_full_success_date,'%Y-%m-%d');
		 

 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','shd_act_srv_fee_v2_tmp2', '200', '从贷后主表获取上标应收服务费金额', 0,'${p_day}',  NOW(),  'dl' );
		 

DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp3`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp3` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标编号',
	`branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '费用项ID',
 KEY `shd_act_srv_fee_v2_tmp3_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO shd_act_srv_fee_v2_tmp3(`business_id`,`branch_name`)
-- SELECT distinct a.`IssueId` as issue_id,d.`branch_name` 
-- FROM (select  a.`IssueId`,a.BranchCompanyId from ODS_XD_TUANDAI_BM.`tb_issue_ods` a  where a.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d'))a
-- LEFT JOIN  (select distinct d.`RESERVE_2` BranchCompanyId,d.`branch_name`  
              -- from ODS_XD_TUANDAI_BM.`tb_department_ods` d  
			  -- where d.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
			    -- and d.`RESERVE_2` not in (select i.BranchCompanyId from DIM_DATA.dim_cut_xd_branch_info i )
		    -- union all
			-- select distinct i.BranchCompanyId ,i.branch_name from DIM_DATA.dim_cut_xd_branch_info i
			  -- )d
       -- ON a.`BranchCompanyId` = d.`BranchCompanyId`;
-- 0928 update by dailiang 将上标主体改为合同主体
SELECT DISTINCT tt.business_id,branch_name
FROM (
	  SELECT business_id,branch_name
		FROM ODS_XD_TUANDAI_BM.tb_business_output_ods tt3
	   WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
		 AND tt3.BUSINESS_ID NOT  LIKE '%ZQ%'
	  UNION ALL
	  SELECT car_business_extension_id AS business_id,branch_name
		FROM ODS_XD_TUANDAI_BM.tb_car_business_exhibition_ods tt3
	   WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
	 )tt; 
	 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','shd_act_srv_fee_v2_tmp3', '300', '获取合同主体', 0,'${p_day}',  NOW(),  'dl' );
  
  
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp5`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp5` (
	`business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
	`apply_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	`platform_id` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	`settle_way` INT(10) DEFAULT NULL COMMENT '是否提前结清',
	`act_settle_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '业务类型',
	`fin_act_settle_dt` date NULL DEFAULT NULL COMMENT '财务确认结清日期',
KEY `shd_act_srv_fee_v2_tmp5_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp5
select  tt3.business_id,
	    tt3.business_type,--	业务类型
		tt3.is_extension  ,--	类型
		tt3.apply_borrow_limit	,--	借款期限（月）
		tt3.loan_rate	 ,
		tt3.platform_id,
	   tt3.settle_way, 
	    DATE_FORMAT(tt3.act_settle_dt,'%Y-%m-%d') act_settle_dt,
		DATE_FORMAT(tt3.fin_act_settle_dt,'%Y-%m-%d') fin_act_settle_dt
from DWS_DATA.dws_agr_xd_business tt3
where tt3.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','shd_act_srv_fee_v2_tmp5', '500', '获取业务相关信息', 0,'${p_day}',  NOW(),  'dl' );
  
  
  
  
  
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp6`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp6` (
	`business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
KEY `shd_act_srv_fee_v2_tmp6_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	


insert into shd_act_srv_fee_v2_tmp6
SELECT DISTINCT t1.`business_id`
FROM ODS_XD_TUANDAI_BM.tb_business_apply_output_ods t1
WHERE t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  and t1.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4'
  and is_term_range = 0
  and business_id is not null;

DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp7`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp7` (
	`stat_dt` VARCHAR(8) NULL DEFAULT NULL COMMENT '统计日期',
	`dat_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '数据日期(应收日期或实收日期或提现日期)',
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`type_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '类型',
	`full_issue_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '满标日期',
	`issue_cut_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称',
	`issue_borrow_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '上标金额',
	`borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '期限（月）',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '利率(年化)',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标主体(上标分公司)',
	`is_term_range` VARCHAR(5) NULL DEFAULT NULL COMMENT '是否分段收费',
	`platform_id` VARCHAR(10) NULL DEFAULT NULL COMMENT '平台：团贷网和你我金融',
	`is_settled` INT(10) NULL DEFAULT NULL COMMENT '是否结清1 已结清，0 未结清',
	`first_day_shd_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天首次应收服务费金额',
	`mon_day_shd_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天实收服务费金额',
	`mon_day_act_srv_fee_amt` DECIMAL(18,2) NULL DEFAULT NULL COMMENT '当天应收服务费金额',
	`settle_due_dt`           date NULL DEFAULT NULL COMMENT '结清对应的应还日期',
	`fin_act_settle_dt`           date NULL DEFAULT NULL COMMENT '财务确认结清日期',
KEY `shd_act_srv_fee_v2_tmp7_issue_id`(issue_id),
KEY `shd_act_srv_fee_v2_tmp7_dat_dt`(dat_dt)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp7
select substring('${p_day}',1,8) as stat_dt	,
       tt1.dat_dt as  dat_dt,
	   tt1.issue_id,
	   tt1.business_id,
		tt3.business_type, --	业务类型
		tt3.is_extension  type_id, --	类型
		DATE_FORMAT(tt2.full_issue_date,'%Y-%m-%d') as full_issue_dt,
		tt2.RealName as issue_cut_nm,
		tt2.full_borrow_money as issue_borrow_amt,
		tt3.apply_borrow_limit	as borrow_limit,--	借款期限（月）
		tt3.loan_rate	as loan_rate,--	利率(年化)
		tt4.branch_name as branch_nm, -- 上标主体(上标分公司)
		case when tt5.business_id is null then '是' else '否' end is_term_range,
		case when ifnull(tt3.platform_id,1) = 1 then '团贷网' else '你我金融' end as platform_id,
	   case when IFNULL(tt3.settle_way,-1) >= 0 and tt3.act_settle_dt &lt;= tt1.dat_dt then 1  else 0  end as is_settled, -- 是否结清1 已结清，0 未结清
	   sum(case when is_first_period = 0 and ifnull(tt3.platform_id,1) = 2 then ifnull(tt1.day_shd_srv_fee_amt,0) + ifnull(tt1.day_shd_qz_srv_fee_amt,0) 
	            when is_first_period = 0 and ifnull(tt3.platform_id,1) = 1 then ifnull(tt1.day_shd_srv_fee_amt,0) else 0 end) as first_day_shd_srv_fee_amt,
	   sum(case when is_first_period = 1 then ifnull(tt1.day_shd_srv_fee_amt,0) else 0 end) as mon_day_shd_srv_fee_amt,
	   sum(case when is_first_period = 1 then ifnull(tt1.day_act_srv_fee_amt,0) else 0 end) as mon_day_act_srv_fee_amt,
	   DATE_FORMAT(st.max_borrow_date,'%Y-%m-%d')  as settle_due_dt,  -- 结清对应的应还日期
	   tt3.fin_act_settle_dt
from shd_act_srv_fee_v2_tmp2 tt1
left join shd_act_srv_fee_v2_tmp444 tt2 on tt1.issue_id = tt2.issue_id
left join shd_act_srv_fee_v2_tmp5 tt3 on tt2.business_id = tt3.business_id
left join shd_act_srv_fee_v2_tmp3 tt4 on tt1.business_id = tt4.business_id
left join shd_act_srv_fee_v2_tmp6 tt5 on tt1.business_id = tt5.business_id
left join settle_date_tmp         st  on st.car_business_id = tt1.business_id
where ifnull(tt2.full_issue_date,'') >='2017-05-17'   -- 10月正常要做收入，系统未做中有60个单是通过这个条件过滤掉的
group by tt1.dat_dt ,
	    tt1.issue_id,
	    tt1.business_id,
		tt3.business_type,--	业务类型
		tt3.is_extension  ,--	类型
		DATE_FORMAT(tt2.full_issue_date,'%Y-%m-%d') ,
		tt2.RealName ,
		tt2.full_borrow_money ,
		tt3.apply_borrow_limit	,--	借款期限（月）
		tt3.loan_rate	,--	利率(年化)
		tt4.branch_name , -- 上标主体(上标分公司)
		case when tt5.business_id is null then '否' else '是' end,
		case when ifnull(tt3.platform_id,1) = 1 then '团贷网' else '你我金融' end,
	   case when IFNULL(tt3.settle_way,-1) >= 0 and tt3.act_settle_dt &lt;= tt1.dat_dt then 1  else 0 end ;

 
DROP TEMPORARY TABLE IF EXISTS `shd_act_srv_fee_v2_tmp8`;
CREATE TEMPORARY TABLE `shd_act_srv_fee_v2_tmp8` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标号',
	`dat_mon` VARCHAR(7) NULL DEFAULT NULL COMMENT '满标日期',
KEY `shd_act_srv_fee_v2_tmp8_issue_id`(issue_id),
KEY `shd_act_srv_fee_v2_tmp8_dat_mon`(dat_mon)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	

insert into shd_act_srv_fee_v2_tmp8
SELECT tt2.issue_id,MIN(SUBSTRING(tt2.dat_dt,1,7)) dat_mon
 FROM shd_act_srv_fee_v2_tmp7 tt2 
 where tt2.is_settled = 1
GROUP BY tt2.issue_id;

truncate table DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_sum_v2;
insert into DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_sum_v2
SELECT tt1.stat_dt	,
       tt1.dat_dt,
	   tt1.issue_id,
	   CASE WHEN tt1.is_settled = 0 THEN 0 
	        WHEN tt1.is_settled = 1 AND SUBSTRING(tt1.dat_dt,1,7) &lt;= tt2.dat_mon THEN 0 
	        WHEN tt1.is_settled = 1 AND SUBSTRING(tt1.dat_dt,1,7) > tt2.dat_mon THEN 1 ELSE  tt1.is_settled END is_settled, -- 将结清期当作未结清统计
	    tt1.first_day_shd_srv_fee_amt,
	    tt1.mon_day_shd_srv_fee_amt,
	    tt1.mon_day_act_srv_fee_amt,
		now() dw_src_sys	,--	来源系统
		now() dw_src_tbl	,--	来源表
		NOW()	AS	dw_ins_tm	,--	插入时间
		NOW()	AS	dw_upd_tm	,--	更新时间
		'dl' dw_ins_usr	,--	插入用户
		'dl' dw_upd_usr	,--	更新用户   
		tt1.settle_due_dt,
		tt1.fin_act_settle_dt
FROM  shd_act_srv_fee_v2_tmp7 tt1
LEFT JOIN shd_act_srv_fee_v2_tmp8 tt2 ON tt1.issue_id = tt2.issue_id AND SUBSTRING(tt1.dat_dt,1,7) = tt2.dat_mon  -- tt2指每个标的对应的结清期
;


alter table DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_sum_v2_his truncate partition dma_sal_achv_shd_act_srv_fee_sum_v2_his_${pt_day};
insert into DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_sum_v2_his
(
	stat_dt	,
	dat_dt,
	issue_id,
	is_settled, -- 将结清期当作未结清统计
	first_day_shd_srv_fee_amt,
	mon_day_shd_srv_fee_amt,
	mon_day_act_srv_fee_amt,
	dw_src_sys	,--	来源系统
	dw_src_tbl	,--	来源表
	dw_ins_tm	,--	插入时间
	dw_upd_tm	,--	更新时间
	dw_ins_usr	,--	插入用户
	dw_upd_usr	,--	更新用户 
    part_dt	,
	settle_due_dt,
	fin_act_settle_dt
)
select stat_dt	,
		dat_dt,
		issue_id,
		is_settled, -- 将结清期当作未结清统计
		first_day_shd_srv_fee_amt,
		mon_day_shd_srv_fee_amt,
		mon_day_act_srv_fee_amt,
		dw_src_sys	,--	来源系统
		dw_src_tbl	,--	来源表
		dw_ins_tm	,--	插入时间
		dw_upd_tm	,--	更新时间
		dw_ins_usr	,--	插入用户
		dw_upd_usr	,--	更新用户   
		DATE_FORMAT('${pt_day}','%Y-%m-%d')	as	part_dt,	--	分区日期
		settle_due_dt,
		fin_act_settle_dt
from  DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_sum_v2;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_sal_achv_shd_act_srv_fee_sum_v2_his', '600', '将应收实收明细数据进历史表', 0,'${p_day}',  NOW(),  'dl' );
 


TRUNCATE TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_v2_mid;
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_shd_act_srv_fee_v2_mid
SELECT DISTINCT  
	        t1.issue_id, -- 上标号
	        t1.business_id,-- 业务编号
		t2.type_name  AS business_type,--	业务类型
		CASE WHEN t1.type_id = 0 THEN '净新增业务' WHEN t1.type_id &lt;&gt; 0 THEN '展期业务' END  AS type_id,--	类型
		t1.full_issue_dt, -- 满标日期
		t1.issue_cut_nm,-- 客户名称
		t1.issue_borrow_amt,-- 上标金额
		t1.borrow_limit, -- 借款期限
		t1.loan_rate,-- 年化率
		t1.branch_nm ,-- 公司上标主体
		t1.is_term_range,
		t1.platform_id,
		xb.repay_way_nm, -- add by caihl20181119
		DATE_FORMAT(xb.fin_act_settle_dt,'%Y-%m-%d')  AS fin_act_settle_dt
FROM shd_act_srv_fee_v2_tmp7 t1
LEFT JOIN ODS_XD_TUANDAI_BM.tb_business_type_ods t2  ON t1.business_type = t2.TYPE_ID
LEFT JOIN (SELECT xb.business_id,rw.repay_way_nm,xb.fin_act_settle_dt
             FROM DWS_DATA.`dws_agr_xd_business` xb 
             LEFT JOIN DIM_DATA.`dim_evt_xd_repay_way` rw ON xb.apply_repayment_type_id=rw.repay_way_id
              WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
		   ) xb  ON xb.business_id=t1.business_id
WHERE t2.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d'); 

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '700', '生成应收实收明细数据，成功！！！！', 0,'${p_day}',  NOW(),  'dl' );

		 
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：核心账务系统-应收账款统计表
创建时间：20180824
创建人   ：戴梁
源系统	 ：tuandai_bm
数据源表：dws_agr_xd_business...
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181119 新增还款方式字段 中间表中新增（dma_sal_achv_shd_act_srv_fee_v2_mid）
</note>
      <xloc>0</xloc>
      <yloc>16</yloc>
      <width>508</width>
      <heigth>220</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

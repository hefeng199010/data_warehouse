<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_out_issue_detail</name>
  <description/>
  <extended_description>核心账务系统报表-合同信息统计报表</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_fsd_defer_settle_pending_detail</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1328</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>112</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>848</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 700</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '更新任务结束标识',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1216</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp1',
   '100',
   '插入临时表（dma_sal_achv_out_issue_detail_tmp1）异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>insert_temp1</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

-- dws_agr_xd_issue_business_tmp0  dws_agr_xd_issue_business_tmp update 20180425 由之前定义的新业务从3月21日受理，改为存在tb_issue_business_apply_output即认为是新业务，目前仅包括房速贷新增业务，不含车易贷和展期业务
DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp0`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp0` (
`issue_id` varchar(50) NOT NULL DEFAULT '' COMMENT '上标编号',
key `daxibt_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';

insert into dws_agr_xd_issue_business_tmp0
select  distinct t2.issue_id
from  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';



DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp` (
`issue_id` varchar(50) NOT NULL DEFAULT '' COMMENT '上标编号',
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`full_borrow_money` decimal(10,2) DEFAULT NULL COMMENT '满标金额',
`master_issue_id` varchar(50) DEFAULT NULL COMMENT '主借标ID',
`issue_order` int(11) DEFAULT NULL COMMENT '超额拆标共借项目的序号',
`full_issue_date` datetime DEFAULT NULL COMMENT '满标时间',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
`audit_borrow_limit` int(11) DEFAULT NULL COMMENT '业务信息表中的借款期限（月）',
`RealName` varchar(50) DEFAULT NULL COMMENT '客户名称（甲方姓名）',
`IdentityCard` varchar(50) DEFAULT NULL COMMENT '身份证号',
`full_time` datetime DEFAULT NULL COMMENT '满标时间',
key `daxibt_business_id`(business_id),
key `daxibt_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp(`issue_id`,`business_id`,`full_borrow_money`,`master_issue_id`,`issue_order`,`full_issue_date`,`borrow_money`,`audit_borrow_limit`,`RealName`,`IdentityCard`,full_time)
select t1.issue_id,	t1.business_id,t1.full_borrow_money,t1.master_issue_id,t1.issue_order,t1.full_issue_date,t1.borrow_money,t1.audit_borrow_limit,t1.RealName,t1.IdentityCard,t1.full_time
from DWS_DATA.dws_agr_xd_issue_business t1
left join dws_agr_xd_issue_business_tmp0 t0
       on t1.issue_id = t0.issue_id
where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and ifnull(t1.full_time,'') !=''  -- add 20180511
  and t0.issue_id is null; -- and (t1.input_time&lt;'2018-03-21' or t1.input_time is null);
  
  
  DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp00`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp00` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
key `daxibt_business_id1`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp00
select 	t1.business_id,sum(t1.full_borrow_money) borrow_money
from dws_agr_xd_issue_business_tmp t1
group by t1.business_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dws_agr_xd_issue_business_tmp', '100', 'dws_agr_xd_issue_business_tmp', 0,'${p_day}',  NOW(),  'dl' );

  -- 20180511新增判断条件：tb_business_apply_output_ods中A模式的按月收服务费是根据审批之后的借款金额计算，而不是根据实际满标金额计算，这里需要把这部分业务单独拿出来重新计算月收服务费
  DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp000`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp000` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`full_borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
key `tmp000_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp000
SELECT  a.business_id,full_borrow_money,b.borrow_money
FROM (SELECT business_id,IFNULL(SUM(a.`borrow_money`),0) full_borrow_money
 FROM dws_agr_xd_issue_business_tmp00 a 
 GROUP BY business_id
 )a
JOIN (SELECT b.`business_id`,b.`issue_split_type`,b.`apply_borrow_money` borrow_money ,business_type
             FROM DWS_DATA.`dws_agr_xd_business` b 
            WHERE b.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
	    AND b.`issue_split_type` = 1 
	    AND b.business_type NOT IN ('T500','T600') 
      )b ON a.business_id = b.business_id 
 WHERE a.full_borrow_money &lt; b.`borrow_money`
    AND a.business_id NOT LIKE '%B';
    

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dws_agr_xd_issue_business_tmp000', '100', 'dws_agr_xd_issue_business_tmp', 0,'${p_day}',  NOW(),  'dl' );


DROP TEMPORARY TABLE IF EXISTS `tb_business_apply_output_ods_tmp`;
CREATE TEMPORARY TABLE `tb_business_apply_output_ods_tmp` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`fee_item_id` varchar(50) DEFAULT NULL COMMENT '费用项目ID',
`fee_item_name` varchar(50) DEFAULT NULL COMMENT '费用项目名称',
`fee_type_id` varchar(50) DEFAULT NULL COMMENT '费用类型ID',
`fee_value` decimal(10,2) DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
`is_one_time_charge` int(11) DEFAULT NULL COMMENT '[是否一次收取，1为按月收取，2为一次收取]',
`output_flag` int(11) DEFAULT NULL COMMENT '[标记该项费用是否单独收取，null或0:不单独收取，1:单独收取]',
`repayment_flag` int(11) DEFAULT NULL COMMENT '[标记该项费用的还款类型，1:期初收取,2:期末收取]',
`is_P2P_mainmark_collect` int(11) DEFAULT '0' COMMENT '[是否P2P主标收取,1为是，0为否]',
`is_term_range` int(11) DEFAULT '0' COMMENT '[是否设置期限范围]',
key `tbaoot_business_id`(business_id)
)ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='业务出款申请费用明细表';
insert into tb_business_apply_output_ods_tmp(`business_id`,`fee_item_id`,`fee_item_name`,`fee_type_id`,`is_one_time_charge`,`fee_value`,`repayment_flag`,`is_P2P_mainmark_collect`,`output_flag`,`is_term_range`)
select t2.business_id,t2.fee_item_id,t2.fee_item_name,t2.fee_type_id, t2.is_one_time_charge,
case when t3.business_id is null then  t2.fee_value else t2.fee_value * TRUNCATE(t3.full_borrow_money/t3.borrow_money,10) end  fee_value,
t2.repayment_flag,t2.is_P2P_mainmark_collect,t2.output_flag,t2.is_term_range
from ODS_XD_TUANDAI_BM.tb_business_apply_output_ods t2 
left join dws_agr_xd_issue_business_tmp000 t3 on t2.business_id = t3.business_id
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','tb_business_apply_output_ods_tmp', '200', 'tb_business_apply_output_ods_tmp', 0,'${p_day}',  NOW(),  'dl' );
  
  
-- 20180517 有5821条车易贷展期业务GPS费用大于0，tb_issue_out_list_ods中首月收费用为0，黄咏康建议这部分数据首月收费用从出款明细（tb_business_apply_output_ods）取，刚好business_id与issue_id一对一
DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_out_issue_detail_tmp4;
Create TEMPORARY Table `dma_sal_achv_out_issue_detail_tmp4` (
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `business_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  key `detail_tmp4_issue_id`(issue_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';

insert into dma_sal_achv_out_issue_detail_tmp4
select issue_id,a.origin_business_id as business_id 
from dma_sal_achv_out_issue_detail a  
WHERE a.`first_mon_total_amt`=0 
AND a.`first_mon_gps_amt`&lt;&gt;0 ;

--  创建临时表   t4
DROP TEMPORARY TABLE IF EXISTS `tb_issue_out_list_ods_tmp`;
Create TEMPORARY Table `tb_issue_out_list_ods_tmp` (
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `fee_id` varchar(50) DEFAULT NULL COMMENT '费用编号',
  `borrow_money` decimal(10,2) DEFAULT NULL COMMENT '出款金额',
  key ·tbbaoot_issue_id·(issue_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';
insert into tb_issue_out_list_ods_tmp(`issue_id`,`fee_id`,`borrow_money`)
select issue_id,fee_id,sum(borrow_money) borrow_money
from (select t4.issue_id,'d5aef8af-0277-4514-a4cc-cdb095db30f4' as fee_id, t4.borrow_money as borrow_money
		from ODS_XD_TUANDAI_BM.tb_issue_out_list_ods t4 
		where t4.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
		and t4.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4',
						  '64db27f6-e416-4ebe-bd08-0aa43e837a28') -- add by dailiang 根据孙进文建议车易贷增加fee_id，计算GPS费用
		union all
		select t2.issue_id,'d5aef8af-0277-4514-a4cc-cdb095db30f4' as fee_id,t1.fee_value as borrow_money
		from tb_business_apply_output_ods_tmp t1
		join dma_sal_achv_out_issue_detail_tmp4 t2 on t1.business_id = t2.business_id
		where is_one_time_charge = 2
	  )tt
group by issue_id,fee_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','tb_issue_out_list_ods_tmp', '300', 'tb_issue_out_list_ods_tmp', 0,'${p_day}',  NOW(),  'dl' );

--  t3
DROP TEMPORARY TABLE IF EXISTS `tb_business_apply_output_detail_ods_tmp`;
Create TEMPORARY Table `tb_business_apply_output_detail_ods_tmp` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务ID',
`fee_id` varchar(50) DEFAULT NULL COMMENT '费用项ID',
`B_fst_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_scd_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_thd_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_fth_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
 KEY `ix_tbbaodot_business_id` (`business_id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='业务出款申请费用明细期限范围明细表';

insert into tb_business_apply_output_detail_ods_tmp(`business_id`,`fee_id`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`)
SELECT t.`business_id`,t.`fee_id`,
MAX(IFNULL(CASE WHEN t.fee_term_range_min = 1 AND t.fee_term_range_max = 12 THEN t.fee_value END,0))  B_fst_year_mon_srv_amt,
MAX(IFNULL(CASE WHEN t.fee_term_range_min = 13 AND t.fee_term_range_max = 24 THEN t.fee_value END,0))  B_scd_year_mon_srv_amt,
MAX(IFNULL(CASE WHEN t.fee_term_range_min = 25 AND t.fee_term_range_max = 36 THEN t.fee_value END,0))  B_thd_year_mon_srv_amt,
MAX(IFNULL(CASE WHEN t.fee_term_range_min = 37 AND t.fee_term_range_max = 48 THEN t.fee_value END,0))  B_fth_year_mon_srv_amt
FROM  ODS_XD_TUANDAI_BM.tb_business_apply_output_detail_ods t
WHERE t.fee_name ='月收分公司服务费'
and t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
GROUP BY t.business_id,t.fee_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','tb_business_apply_output_detail_ods_tmp', '400', 'tb_business_apply_output_detail_ods_tmp', 0,'${p_day}',  NOW(),  'dl' );

-- 合成新表
DROP TEMPORARY TABLE IF EXISTS `dws_t1_t2_t3_t4_tmp`;
CREATE TEMPORARY TABLE `dws_t1_t2_t3_t4_tmp` (
`issue_id` varchar(50) NOT NULL DEFAULT '' COMMENT '上标编号',
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`full_issue_dt` VARCHAR(10) DEFAULT NULL COMMENT '满标时间',
`RealName` varchar(50) DEFAULT NULL COMMENT '客户名称(甲方姓名)',
`IdentityCard` varchar(50) DEFAULT NULL COMMENT '身份证号',
`full_borrow_money` decimal(10,2) DEFAULT NULL COMMENT '满标金额',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
`master_issue_id` varchar(50) DEFAULT NULL COMMENT '主借标ID',
`issue_order` int(11) DEFAULT NULL COMMENT '超额拆标共借项目的序号',
`fee_item_id` varchar(50) DEFAULT NULL COMMENT '费用项目ID',
`fee_item_name` varchar(50) DEFAULT NULL COMMENT '费用项目名称',
`fee_type_id` varchar(50) DEFAULT NULL COMMENT '费用类型ID',
`total_fee_value` int(11) DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
`fee_value` decimal(10,2) DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
`is_P2P_mainmark_collect` int(11) DEFAULT '0' COMMENT '[是否P2P主标收取,1为是，0为否]',
`repayment_flag` int(11) DEFAULT NULL COMMENT '[标记该项费用的还款类型，1:期初收取,2:期末收取]',
`output_flag` int(11) DEFAULT NULL COMMENT '[标记该项费用是否单独收取，null或0:不单独收取，1:单独收取]',
`is_term_range` int(11) DEFAULT '0' COMMENT '[是否设置期限范围]',
`B_fst_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_scd_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_thd_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`B_fth_year_mon_srv_amt` decimal(12,2) DEFAULT NULL COMMENT '本期金额',
`rate` decimal(12,10) DEFAULT NULL COMMENT '满标金额/借款总金额',
`A_borrow_money` decimal(10,2) DEFAULT NULL COMMENT '出款金额',
`full_time` VARCHAR(10) DEFAULT NULL COMMENT '满标时间',
key `daxibt_business_id`(business_id),
key `daxibt_issue_id`(issue_id),
key `daxibt_groupby`(issue_id,business_id,full_issue_dt,RealName ,IdentityCard ,full_borrow_money,issue_order)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='中间表';

insert into dws_t1_t2_t3_t4_tmp(`issue_id`,`business_id`,`full_issue_dt`,`RealName`,`IdentityCard`,`full_borrow_money`,`borrow_money`,`master_issue_id`
,`issue_order`,`fee_item_id`,`fee_item_name`,`fee_type_id`,`total_fee_value`,`fee_value`,`is_P2P_mainmark_collect`,`repayment_flag`,`output_flag`
,`is_term_range`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`,`rate`,`A_borrow_money`,full_time)
select t1.issue_id,	t1.business_id,	DATE_FORMAT(t1.full_issue_date,'%Y-%m-%d') as full_issue_dt,t1.RealName,t1.IdentityCard,t1.full_borrow_money,t1.borrow_money,
t1.master_issue_id,t1.issue_order,t2.fee_item_id,t2.fee_item_name,t2.fee_type_id,
case when t2.is_one_time_charge = 2 then 1 
	 when t2.is_one_time_charge = 1 and t2.repayment_flag =1 then ifnull(t1.audit_borrow_limit,1) -1
	 when t2.is_one_time_charge = 1 and t2.repayment_flag =2 then ifnull(t1.audit_borrow_limit,1)
	 else 1 end as total_fee_value
	 ,ifnull(t2.fee_value,0) as fee_value,t2.is_P2P_mainmark_collect,t2.repayment_flag,t2.output_flag,t2.is_term_range,
	 ifnull(t3.B_fst_year_mon_srv_amt,0) B_fst_year_mon_srv_amt,ifnull(t3.B_scd_year_mon_srv_amt,0) B_scd_year_mon_srv_amt,ifnull(t3.B_thd_year_mon_srv_amt,0) B_thd_year_mon_srv_amt,
	 ifnull(t3.B_fth_year_mon_srv_amt,0) B_fth_year_mon_srv_amt,TRUNCATE(t1.full_borrow_money/t5.borrow_money,10) rate,	t4.borrow_money as A_borrow_money,
  DATE_FORMAT(t1.full_time,'%Y-%m-%d') as full_time	 
from dws_agr_xd_issue_business_tmp t1 	
left join tb_business_apply_output_ods_tmp t2 on t1.business_id = t2.business_id
left join tb_issue_out_list_ods_tmp t4 on t1.issue_id = t4.issue_id
left join tb_business_apply_output_detail_ods_tmp t3 on t2.business_id = t3.business_id and t3.fee_id = t2.fee_item_id
left join dws_agr_xd_issue_business_tmp00 t5 on t1.business_id = t5.business_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dws_t1_t2_t3_t4_tmp', '500', 'dws_t1_t2_t3_t4_tmp', 0,'${p_day}',  NOW(),  'dl' );

TRUNCATE TABLE dma_sal_achv_out_issue_detail_tmp1;
INSERT INTO dma_sal_achv_out_issue_detail_tmp1
select substring('${p_day}',1,8) as stat_dt	,tt1.issue_id,tt1.business_id,tt1.full_issue_dt,tt1.RealName as issue_cut_nm,tt1.IdentityCard as  id_card,tt1.full_borrow_money as issue_borrow_amt,ifnull(tt1.issue_order,1) as issue_order,
           max(ifnull(tt1.A_borrow_money,0))+    
           sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then tt1.fee_value
				           when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then 0
                           when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' and convert(tt1.fee_value*tt1.rate,decimal(16,6)) - convert(tt1.fee_value*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.fee_value*tt1.rate,2)
                           when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' and convert(tt1.fee_value*tt1.rate,decimal(16,6)) - convert(tt1.fee_value*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.fee_value*tt1.rate,2)+0.01 end,0)) * max(tt1.total_fee_value)+   
           
		   sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_fst_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_fst_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_fst_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)*12) + 
           sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_scd_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_scd_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_scd_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)*12) +
           sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_thd_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_thd_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_thd_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)*12) + 
           sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_fth_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                              when tt1.is_term_range = 1 and convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_fth_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_fth_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)*12) as total_srv_amt,
		   max(ifnull(tt1.A_borrow_money,0)) first_mon_total_amt, 
		   max(ifnull(tt1.A_borrow_money,0)) - sum(ifnull(case when tt1.master_issue_id = tt1.issue_id and tt1.fee_item_id in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then tt1.fee_value else 0 end,0)) as first_mon_srv_amt,     
           sum(ifnull(case when tt1.master_issue_id = tt1.issue_id and tt1.fee_item_id in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then tt1.fee_value else 0 end,0)) first_mon_gps_amt,   -- updata 20180508 新增费用id  339fcc81-1e85-4291-87d7-e3c34a8f84f2
           
		   sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then tt1.fee_value
				  when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then 0
                  when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' and convert(tt1.fee_value*tt1.rate,decimal(16,6)) - convert(tt1.fee_value*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.fee_value*tt1.rate,2)
                  when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' and convert(tt1.fee_value*tt1.rate,decimal(16,6)) - convert(tt1.fee_value*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.fee_value*tt1.rate,2)+0.01  end,0)) A_month_srv_amt,    
            
			sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_fst_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_fst_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fst_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_fst_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)) B_fst_year_mon_srv_amt,    
             sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_scd_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_scd_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_scd_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_scd_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)) B_scd_year_mon_srv_amt,    
             sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_thd_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                             when tt1.is_term_range = 1 and convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_thd_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_thd_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_thd_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)) B_thd_year_mon_srv_amt,    
             sum(ifnull(case when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id = tt1.issue_id and tt1.is_term_range = 1 then  tt1.B_fth_year_mon_srv_amt
                             when tt1.is_P2P_mainmark_collect = 1 and tt1.master_issue_id &lt;&gt; tt1.issue_id and tt1.is_term_range = 1 then 0
                              when tt1.is_term_range = 1 and convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,10))= 0 then TRUNCATE(tt1.B_fth_year_mon_srv_amt*tt1.rate,2)
                             when tt1.is_term_range = 1 and convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,6)) - convert(tt1.B_fth_year_mon_srv_amt*tt1.rate,decimal(16,10))&lt;&gt; 0 then TRUNCATE(tt1.B_fth_year_mon_srv_amt*tt1.rate,2)+0.01 end,0)) B_fth_year_mon_srv_amt, 
			 now()	as	dw_ins_tm,
			 tt1.full_time
from dws_t1_t2_t3_t4_tmp tt1
group by tt1.issue_id,
	     tt1.business_id,
	     tt1.full_issue_dt,
	     tt1.RealName ,
	     tt1.IdentityCard ,
	     tt1.full_borrow_money,
		 tt1.issue_order,
		 tt1.full_time;



insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_sal_achv_out_issue_detail_tmp1', '600', 'dma_sal_achv_out_issue_detail_tmp1', 0,'${p_day}',  NOW(),  'dl' );</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>insert_temp2</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


DROP TEMPORARY TABLE IF EXISTS `issue_temp0`;
CREATE TEMPORARY TABLE `issue_temp0` (
`issue_id` varchar(50) NOT NULL DEFAULT '' COMMENT '上标编号',
key `daxibt_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';

insert into issue_temp0
select  distinct t2.issue_id
from  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';



DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp` (
`issue_id` varchar(50) NOT NULL DEFAULT '' COMMENT '上标编号',
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`full_borrow_money` decimal(10,2) DEFAULT NULL COMMENT '满标金额',
`master_issue_id` varchar(50) DEFAULT NULL COMMENT '主借标ID',
`issue_order` int(11) DEFAULT NULL COMMENT '超额拆标共借项目的序号',
`full_issue_date` datetime DEFAULT NULL COMMENT '满标时间',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
`audit_borrow_limit` int(11) DEFAULT NULL COMMENT '业务信息表中的借款期限（月）',
`RealName` varchar(50) DEFAULT NULL COMMENT '客户名称（甲方姓名）',
`IdentityCard` varchar(50) DEFAULT NULL COMMENT '身份证号',
`full_time` datetime DEFAULT NULL COMMENT '满标时间',
key `daxibt_business_id`(business_id),
key `daxibt_issue_id`(issue_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp(`issue_id`,`business_id`,`full_borrow_money`,`master_issue_id`,`issue_order`,`full_issue_date`,`borrow_money`,`audit_borrow_limit`,`RealName`,`IdentityCard`,full_time)
select t1.issue_id,	t1.business_id,t1.full_borrow_money,t1.master_issue_id,t1.issue_order,t1.full_issue_date,t1.borrow_money,t1.audit_borrow_limit,t1.RealName,t1.IdentityCard,t1.full_time
from DWS_DATA.dws_agr_xd_issue_business t1
left join issue_temp0 t0
       on t1.issue_id = t0.issue_id
where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and ifnull(t1.full_time,'') !=''  -- add 20180511
  and t0.issue_id is null; -- and (t1.input_time&lt;'2018-03-21' or t1.input_time is null);


 DROP TEMPORARY TABLE IF EXISTS `issue_temp1`;
CREATE TEMPORARY TABLE `issue_temp1` (
`business_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号',	
`borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '期限（月）',
`issue_order` INT(11) DEFAULT NULL COMMENT '超额拆标共借项目的序号',
 KEY `issue_temp1_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO issue_temp1(`business_id`,`borrow_limit`,`issue_order`)
SELECT t1.business_id,IFNULL(t1.audit_borrow_limit,1) AS borrow_limit,
  MAX(IFNULL(t1.issue_order,1)) AS issue_order 
FROM dws_agr_xd_issue_business_tmp t1  
GROUP BY t1.business_id,IFNULL(t1.audit_borrow_limit,1);


  
  DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp00`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp00` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
key `daxibt_business_id1`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp00
select 	t1.business_id,sum(t1.full_borrow_money) borrow_money
from dws_agr_xd_issue_business_tmp t1
group by t1.business_id;


  -- 20180511新增判断条件：tb_business_apply_output_ods中A模式的按月收服务费是根据审批之后的借款金额计算，而不是根据实际满标金额计算，这里需要把这部分业务单独拿出来重新计算月收服务费
  DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp000`;
CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp000` (
`business_id` varchar(50) DEFAULT NULL COMMENT '业务单号',
`full_borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
`borrow_money` decimal(12,2) DEFAULT NULL COMMENT '借款总金额',
key `tmp000_business_id`(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8  COMMENT='标的信息事实表';
insert into dws_agr_xd_issue_business_tmp000
SELECT  a.business_id,full_borrow_money,b.borrow_money
FROM (SELECT business_id,IFNULL(SUM(a.`borrow_money`),0) full_borrow_money
 FROM dws_agr_xd_issue_business_tmp00 a 
 GROUP BY business_id
 )a
JOIN (SELECT b.`business_id`,b.`issue_split_type`,b.`apply_borrow_money` borrow_money ,business_type
             FROM DWS_DATA.`dws_agr_xd_business` b 
            WHERE b.part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d')
	    AND b.`issue_split_type` = 1 
	    AND b.business_type NOT IN ('T500','T600') 
      )b ON a.business_id = b.business_id 
 WHERE a.full_borrow_money &lt; b.`borrow_money`
    AND a.business_id NOT LIKE '%B';
    


DROP TEMPORARY TABLE IF EXISTS `issue_temp2`;
CREATE TEMPORARY TABLE `issue_temp2` (
`business_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号',	
	`fee_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项ID',
	`B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一年月收服务费',
	`B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二年月收服务费',
	`B_thd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第三年月收服务费',
	`B_fth_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第四年月收服务费',
 KEY `issue_temp2_business_id` (`business_id`),
 KEY `issue_temp2_fee_id` (`fee_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO issue_temp2(`business_id`,`fee_id`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`)
SELECT   t.`business_id`,t.`fee_id`,
		MAX(IFNULL(CASE WHEN t.fee_term_range_min = 1 AND t.fee_term_range_max = 12 THEN t.fee_value END,0))  B_fst_year_mon_srv_amt,
		MAX(IFNULL(CASE WHEN t.fee_term_range_min = 13 AND t.fee_term_range_max = 24 THEN t.fee_value END,0))  B_scd_year_mon_srv_amt,
		MAX(IFNULL(CASE WHEN t.fee_term_range_min = 25 AND t.fee_term_range_max = 36 THEN t.fee_value END,0))  B_thd_year_mon_srv_amt,
		MAX(IFNULL(CASE WHEN t.fee_term_range_min = 37 AND t.fee_term_range_max = 48 THEN t.fee_value END,0))  B_fth_year_mon_srv_amt
FROM  ODS_XD_TUANDAI_BM.tb_business_apply_output_detail_ods t
WHERE t.fee_name ='月收分公司服务费'
and t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
GROUP BY t.`business_id`,t.`fee_id`;


DROP TEMPORARY TABLE IF EXISTS `issue_temp3`;
CREATE TEMPORARY TABLE `issue_temp3` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
	`is_term_range` INT(11) NULL DEFAULT '0' COMMENT '[是否设置期限范围]',
	`fee_item_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目名称',
	`is_one_time_charge` INT(11) NULL DEFAULT NULL COMMENT '[是否一次收取，1为按月收取，2为一次收取]',
	`fee_value` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
	`repayment_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用的还款类型，1:期初收取,2:期末收取]',
	`output_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用是否单独收取，null或0:不单独收取，1:单独收取]',
	`fee_item_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目ID',
 KEY `issue_temp3_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO issue_temp3(`business_id`,`is_term_range`,`fee_item_name`,`is_one_time_charge`,`fee_value`,`repayment_flag`,`output_flag`,`fee_item_id`)
select  t2.business_id,
        t2.is_term_range,
		t2.fee_item_name,
		t2.is_one_time_charge,
         case when t3.business_id is null then  t2.fee_value else t2.fee_value * TRUNCATE(t3.full_borrow_money/t3.borrow_money,10) end  fee_value,
		 t2.repayment_flag,
		 t2.output_flag,
		 t2.fee_item_id
from  ODS_XD_TUANDAI_BM.tb_business_apply_output_ods t2
left join dws_agr_xd_issue_business_tmp000 t3 on t2.business_id = t3.business_id
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';


-- 20180517 有5821条车易贷展期业务GPS费用大于0，tb_issue_out_list_ods中首月收费用为0，黄咏康建议这部分数据首月收费用从出款明细（tb_business_apply_output_ods）取，刚好business_id与issue_id一对一
DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_out_issue_detail_tmp4;
Create TEMPORARY Table `dma_sal_achv_out_issue_detail_tmp4` (
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `business_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  key `detail_tmp4_issue_id`(issue_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';

insert into dma_sal_achv_out_issue_detail_tmp4
select issue_id,a.origin_business_id as business_id 
from dma_sal_achv_out_issue_detail a  
WHERE a.`first_mon_total_amt`=0 
AND a.`first_mon_gps_amt`&lt;&gt;0 ;

--  创建临时表   t4
DROP TEMPORARY TABLE IF EXISTS `issue_temp5`;
Create TEMPORARY Table `issue_temp5` (
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `fee_id` varchar(50) DEFAULT NULL COMMENT '费用编号',
  `borrow_money` decimal(10,2) DEFAULT NULL COMMENT '出款金额',
  key ·tbbaoot_issue_id·(issue_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';
insert into issue_temp5(`issue_id`,`fee_id`,`borrow_money`)
select issue_id,fee_id,sum(borrow_money) borrow_money
from (select t4.issue_id,'d5aef8af-0277-4514-a4cc-cdb095db30f4' as fee_id, t4.borrow_money as borrow_money
		from ODS_XD_TUANDAI_BM.tb_issue_out_list_ods t4 
		where t4.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
		and t4.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4',
						  '64db27f6-e416-4ebe-bd08-0aa43e837a28') -- add by dailiang 根据孙进文建议车易贷增加fee_id，计算GPS费用
		union all
		select t2.issue_id,'d5aef8af-0277-4514-a4cc-cdb095db30f4' as fee_id,t1.fee_value as borrow_money
		from issue_temp3 t1
		join dma_sal_achv_out_issue_detail_tmp4 t2 on t1.business_id = t2.business_id
		where is_one_time_charge = 2
	  )tt
group by issue_id,fee_id;


DROP TEMPORARY TABLE IF EXISTS `issue_temp6`;
Create TEMPORARY Table `issue_temp6` (
  `business_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  key issue_temp6_business_id (business_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';

insert into issue_temp6
select distinct business_id,issue_id
from   ODS_XD_TUANDAI_BM.tb_issue_business_ods t1
where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;

DROP TEMPORARY TABLE IF EXISTS `issue_t5_t6`;
Create TEMPORARY Table `issue_t5_t6` (
  `business_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `borrow_money` decimal(10,2) DEFAULT NULL COMMENT '出款金额',
  key issue_t5_t6_business_id (business_id)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';

insert into issue_t5_t6
select t2.business_id,sum(t1.borrow_money) borrow_money
from issue_temp5 t1
join issue_temp6 t2 on t1.issue_id = t2.issue_id
group by t2.business_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','tb_issue_out_list_ods_tmp', '300', 'tb_issue_out_list_ods_tmp', 0,'${p_day}',  NOW(),  'dl' );



DROP TEMPORARY TABLE IF EXISTS `issue_t1_t2_t3`;
CREATE TEMPORARY TABLE `issue_t1_t2_t3` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
    `issue_order` INT(11) DEFAULT NULL COMMENT '超额拆标共借项目的序号',
	`total_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '总服务费',
	`first_mon_total_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收总额',
	`first_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收服务费',
	`first_mon_gps_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收GPS',
	`A_month_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'A收费模式月收服务费',
	`B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一年月收服务费',
	`B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二年月收服务费',
	`B_thd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第三年月收服务费',
	`B_fth_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第四年月收服务费',
 KEY `issue_t1_t2_t3_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO issue_t1_t2_t3(`business_id`,`issue_order`,`total_srv_amt`,`first_mon_total_amt`,`first_mon_srv_amt`,`first_mon_gps_amt`,`A_month_srv_amt`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`)
select t1.business_id,
		 max(IFNULL(t1.issue_order,1)) as issue_order,
		 sum(ifnull(case when t2.is_term_range = 0 and t2.fee_item_name like '%月收分公司服务费%' and t2.is_one_time_charge = 2 then ifnull(t2.fee_value,0) 
						 when t2.is_term_range = 0 and t2.fee_item_name like '%月收分公司服务费%' and t2.is_one_time_charge = 1 and t2.repayment_flag =1 then ifnull(t2.fee_value,0) * (ifnull(t1.borrow_limit,1) -1) 
						 when t2.is_term_range = 0 and t2.fee_item_name like '%月收分公司服务费%' and t2.is_one_time_charge = 1 and t2.repayment_flag =2 then ifnull(t2.fee_value,0) * ifnull(t1.borrow_limit,1) end,0)) +
		-- sum(ifnull(case when t2.repayment_flag = 1 and t2.output_flag = 1 then t2.fee_value end,0))+  
		 max(ifnull(t4.borrow_money,0)) +
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_fst_year_mon_srv_amt end,0)*12)+      
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_scd_year_mon_srv_amt end,0)*12)+      
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_thd_year_mon_srv_amt end,0)*12)+       
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_fth_year_mon_srv_amt end,0)*12) total_srv_amt,

		-- sum(ifnull(case when t2.repayment_flag = 1 and t2.output_flag = 1 then t2.fee_value end,0)) first_mon_total_amt, 
		 max(ifnull(t4.borrow_money,0)) first_mon_total_amt,
		-- sum(ifnull(case when t2.repayment_flag = 1 and t2.output_flag = 1 and t2.fee_item_id &lt;&gt;'129161a8-4a48-4f23-b04b-6e0807830899' then   t2.fee_value end,0)) first_mon_srv_amt, 
		 max(ifnull(t4.borrow_money,0)) - sum(ifnull(case when  t2.fee_item_id  in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then t2.fee_value else 0 end,0)) as first_mon_srv_amt,     
		 sum(ifnull(case when t2.fee_item_id  in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then   t2.fee_value end,0)) first_mon_gps_amt,    
		 SUM(IFNULL(CASE WHEN t2.is_term_range = 0 AND t2.fee_item_name LIKE '%月收分公司服务费%' AND t2.is_one_time_charge = 2 THEN IFNULL(t2.fee_value,0) 
                                         WHEN t2.is_term_range = 0 AND t2.fee_item_name LIKE '%月收分公司服务费%' AND t2.is_one_time_charge = 1 AND t2.repayment_flag =1 THEN IFNULL(t2.fee_value,0)  
                                         WHEN t2.is_term_range = 0 AND t2.fee_item_name LIKE '%月收分公司服务费%' AND t2.is_one_time_charge = 1 AND t2.repayment_flag =2 THEN IFNULL(t2.fee_value,0)  END,0))  A_month_srv_amt,    
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_fst_year_mon_srv_amt end,0)) B_fst_year_mon_srv_amt,       
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_scd_year_mon_srv_amt end,0)) B_scd_year_mon_srv_amt,       
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_thd_year_mon_srv_amt end,0)) B_thd_year_mon_srv_amt,       
		 sum(ifnull(case when t2.is_term_range = 1 then  t3.B_fth_year_mon_srv_amt end,0)) B_fth_year_mon_srv_amt
from issue_temp1 t1
left join issue_temp3 t2
       on t1.business_id = t2.business_id
left join issue_temp2 t3 
	   on t2.business_id = t3.business_id
     and t3.fee_id = t2.fee_item_id
left join issue_t5_t6 t4 on t1.business_id = t4.business_id
group by t1.business_id;

DROP TEMPORARY TABLE IF EXISTS `issue_temp4`;
CREATE TEMPORARY TABLE `issue_temp4` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
	`total_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '总服务费',
	`first_mon_total_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收总额',
	`first_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收服务费',
	`first_mon_gps_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收GPS',
	`A_month_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'A收费模式月收服务费',
	`B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一年月收服务费',
	`B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二年月收服务费',
	`B_thd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第三年月收服务费',
	`B_fth_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第四年月收服务费',
 KEY `issue_temp4_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO issue_temp4(`business_id`,`total_srv_amt`,`first_mon_total_amt`,`first_mon_srv_amt`,`first_mon_gps_amt`,`A_month_srv_amt`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`)
select  tt3.business_id,
	  sum(ifnull(total_srv_amt,0)) as total_srv_amt,
	  sum(ifnull(first_mon_total_amt,0)) as first_mon_total_amt,
	  sum(ifnull(first_mon_srv_amt,0)) as first_mon_srv_amt,
	  sum(ifnull(first_mon_gps_amt,0)) as first_mon_gps_amt,
	  sum(ifnull(A_month_srv_amt,0)) as A_month_srv_amt,
	  sum(ifnull(B_fst_year_mon_srv_amt,0)) as B_fst_year_mon_srv_amt,
	  sum(ifnull(B_scd_year_mon_srv_amt,0)) as B_scd_year_mon_srv_amt,
	  sum(ifnull(B_thd_year_mon_srv_amt,0)) as B_thd_year_mon_srv_amt,
	  sum(ifnull(B_fth_year_mon_srv_amt,0)) as B_fth_year_mon_srv_amt
from DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp1 tt3 
group by tt3.business_id;

truncate table DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp2;
insert into DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp2
select substring('${p_day}',1,8) as stat_dt	,-- 统计日期
	    tt1.issue_id,
	    tt1.business_id,
	    tt1.full_issue_dt,
	    tt1.issue_cut_nm ,
	    tt1.id_card,
	    tt1.issue_borrow_amt,
	    tt1.issue_order,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.total_srv_amt else  tt1.total_srv_amt + tt2.total_srv_amt-tt3.total_srv_amt end) as total_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.first_mon_total_amt else  tt1.first_mon_total_amt + tt2.first_mon_total_amt-tt3.first_mon_total_amt end) as first_mon_total_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.first_mon_srv_amt else  tt1.first_mon_srv_amt + tt2.first_mon_srv_amt-tt3.first_mon_srv_amt end ) as first_mon_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.first_mon_gps_amt else  tt1.first_mon_gps_amt + tt2.first_mon_gps_amt-tt3.first_mon_gps_amt end) as first_mon_gps_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.A_month_srv_amt else  tt1.A_month_srv_amt + tt2.A_month_srv_amt-tt3.A_month_srv_amt end) as A_month_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.B_fst_year_mon_srv_amt else  tt1.B_fst_year_mon_srv_amt + tt2.B_fst_year_mon_srv_amt-tt3.B_fst_year_mon_srv_amt end) as B_fst_year_mon_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.B_scd_year_mon_srv_amt else  tt1.B_scd_year_mon_srv_amt + tt2.B_scd_year_mon_srv_amt-tt3.B_scd_year_mon_srv_amt end) as B_scd_year_mon_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.B_thd_year_mon_srv_amt else  tt1.B_thd_year_mon_srv_amt + tt2.B_thd_year_mon_srv_amt-tt3.B_thd_year_mon_srv_amt end) as B_thd_year_mon_srv_amt,
		sum(case when tt2.issue_order &lt;&gt; tt1.issue_order then tt1.B_fth_year_mon_srv_amt else  tt1.B_fth_year_mon_srv_amt + tt2.B_fth_year_mon_srv_amt-tt3.B_fth_year_mon_srv_amt end) as B_fth_year_mon_srv_amt,
		now() as dw_ins_tm,
		tt1.full_time
from DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp1 tt1
left join issue_t1_t2_t3 tt2
		on tt1.business_id = tt2.business_id
    left join issue_temp4 tt3
	       on tt1.business_id = tt3.business_id
    group by tt1.issue_id,
	    tt1.business_id,
	    tt1.full_issue_dt,
	    tt1.issue_cut_nm ,
	    tt1.id_card,
	    tt1.issue_borrow_amt,
	    tt1.issue_order,
		tt1.full_time;




</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>720</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>insert_temp3</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

DROP TEMPORARY TABLE IF EXISTS `apply_temp2`;
CREATE TEMPORARY TABLE `apply_temp2` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
	`is_term_range` INT(11) NULL DEFAULT '0' COMMENT '[是否设置期限范围]',
	`fee_item_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目名称',
	`is_one_time_charge` INT(11) NULL DEFAULT NULL COMMENT '[是否一次收取，1为按月收取，2为一次收取]',
	`fee_value` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
	`repayment_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用的还款类型，1:期初收取,2:期末收取]',
	`output_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用是否单独收取，null或0:不单独收取，1:单独收取]',
	`fee_item_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目ID',
 KEY `apply_temp2_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO apply_temp2(`issue_id`,`is_term_range`,`fee_item_name`,`is_one_time_charge`,`fee_value`,`repayment_flag`,`output_flag`,`fee_item_id`)
select  t2.issue_id,
        t2.is_term_range,
		t2.fee_item_name,
		t2.is_one_time_charge,
		t2.fee_value,
		 t2.repayment_flag,
		 t2.output_flag,
		 t2.fee_item_id
from  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t2
where t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
and t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';


DROP TEMPORARY TABLE IF EXISTS `apply_temp3`;
CREATE TEMPORARY TABLE `apply_temp3` (
`issue_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号',	
	`fee_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项ID',
	`B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一年月收服务费',
	`B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二年月收服务费',
	`B_thd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第三年月收服务费',
	`B_fth_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第四年月收服务费',
 KEY `apply_temp3_issue_id` (`issue_id`),
 KEY `apply_temp3_fee_id` (`fee_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO apply_temp3(`issue_id`,`fee_id`,`B_fst_year_mon_srv_amt`,`B_scd_year_mon_srv_amt`,`B_thd_year_mon_srv_amt`,`B_fth_year_mon_srv_amt`)
SELECT t.`issue_id`,t.`fee_id`,
			MAX(IFNULL(CASE WHEN t.fee_term_range_min = 1 AND t.fee_term_range_max = 12 THEN t.fee_value END,0))  B_fst_year_mon_srv_amt,
			MAX(IFNULL(CASE WHEN t.fee_term_range_min = 13 AND t.fee_term_range_max = 24 THEN t.fee_value END,0))  B_scd_year_mon_srv_amt,
			MAX(IFNULL(CASE WHEN t.fee_term_range_min = 25 AND t.fee_term_range_max = 36 THEN t.fee_value END,0))  B_thd_year_mon_srv_amt,
			MAX(IFNULL(CASE WHEN t.fee_term_range_min = 37 AND t.fee_term_range_max = 48 THEN t.fee_value END,0))  B_fth_year_mon_srv_amt
FROM  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_detail_ods t
WHERE t.fee_name ='月收分公司服务费'
and t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
GROUP BY t.`issue_id`,t.`fee_id`;

DROP TEMPORARY TABLE IF EXISTS `apply_temp4`;
CREATE TEMPORARY TABLE `apply_temp4` (
	`issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '上标编号',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
	`full_issue_dt` VARCHAR(50) NULL  DEFAULT NULL COMMENT '满标时间',
	`RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`IdentityCard` VARCHAR(50) NULL DEFAULT NULL COMMENT '身份证号',
	`full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
	`borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款总金额',
	`master_issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '主借标ID',
	`issue_order` INT(11) NULL DEFAULT NULL COMMENT '超额拆标共借项目的序号',
	`borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '借款期限',
	`audit_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '业务信息表中的借款期限（月）',
	`full_time` VARCHAR(10) NULL  DEFAULT NULL COMMENT '满标时间',
 KEY `apply_temp4_issue_id` (`issue_id`),
 KEY `apply_temp4_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into `apply_temp4` (`issue_id` ,`business_id`,`full_issue_dt` ,`RealName` ,`IdentityCard`,`full_borrow_money` ,`borrow_money` ,`master_issue_id`,`issue_order` ,	`borrow_limit`,`audit_borrow_limit`,full_time )
select t1.issue_id,
		t1.business_id,
		DATE_FORMAT(t1.full_issue_date,'%Y-%m-%d') as full_issue_dt,
		t1.RealName,
		t1.IdentityCard,
		t1.full_borrow_money,
		t1.borrow_money,
		t1.master_issue_id,
		t1.issue_order,
		t1.borrow_limit,
		t1.audit_borrow_limit,
		DATE_FORMAT(t1.full_time,'%Y-%m-%d') as full_time
from DWS_DATA.dws_agr_xd_issue_business t1
where t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and ifnull(t1.full_time,'') !=''  -- add 20180511
-- and t1.input_time >= '2018-03-21' 
 ;

 
 truncate table DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp3;
 insert into DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp3
 select substring('${p_day}',1,8) as stat_dt	,-- 统计日期
	       tt1.issue_id,
	       tt1.business_id,
		   tt1.full_issue_dt,
		   tt1.RealName as issue_cut_nm,
		   tt1.IdentityCard as  id_card,
		   tt1.full_borrow_money as issue_borrow_amt,
		   ifnull(tt1.issue_order,1) as issue_order,
           sum(ifnull(case when tt1.repayment_flag = 1 and tt1.output_flag = 1 then  tt1.fee_value else 0 end,0)) + 
           sum(ifnull(case when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then  tt1.total_fee_value else 0 end,0))+
		   sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_fst_year_mon_srv_amt end,0)*12)+
           sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_scd_year_mon_srv_amt end,0)*12)+
           sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_thd_year_mon_srv_amt end,0)*12)+
           sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_fth_year_mon_srv_amt end,0)*12) as total_srv_amt,
			 sum(ifnull(case when tt1.repayment_flag = 1 and tt1.output_flag = 1 then  tt1.fee_value else 0 end,0)) first_mon_total_amt, 
			 sum(ifnull(case when tt1.repayment_flag = 1 and tt1.output_flag = 1 and tt1.fee_item_id not in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then  tt1.fee_value else 0 end,0)) first_mon_srv_amt,     
			 sum(ifnull(case when tt1.repayment_flag = 1 and tt1.output_flag = 1 and tt1.fee_item_id in ('129161a8-4a48-4f23-b04b-6e0807830899','339fcc81-1e85-4291-87d7-e3c34a8f84f2') then  tt1.fee_value else 0 end,0)) first_mon_gps_amt,    
			 sum(ifnull(case when tt1.is_term_range = 0 and tt1.fee_item_name like '%月收分公司服务费%' then  tt1.fee_value else 0 end,0)) A_month_srv_amt,    
			 sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_fst_year_mon_srv_amt end,0)) B_fst_year_mon_srv_amt,       
			 sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_scd_year_mon_srv_amt end,0)) B_scd_year_mon_srv_amt,       
			 sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_thd_year_mon_srv_amt end,0)) B_thd_year_mon_srv_amt,       
			 sum(ifnull(case when tt1.is_term_range = 1 then  tt1.B_fth_year_mon_srv_amt end,0)) B_fth_year_mon_srv_amt,
			 now()	as	dw_ins_tm,	--	插入时间
			 tt1.full_time
	from(        select t1.issue_id,
						t1.business_id,
						t1.full_issue_dt,
						t1.RealName,
						t1.IdentityCard,
						t1.full_borrow_money,
						t1.borrow_money,
						t1.master_issue_id,
						t1.issue_order,
						t2.fee_item_id,
						t2.fee_item_name,
						case when t2.is_one_time_charge = 2 then ifnull(t2.fee_value,0) 
                             when t2.is_one_time_charge = 1 and t2.repayment_flag =1 then ifnull(t2.fee_value,0) * (ifnull(t1.borrow_limit,t1.audit_borrow_limit)-1)
                             when t2.is_one_time_charge = 1 and t2.repayment_flag =2 then ifnull(t2.fee_value,0) * ifnull(t1.borrow_limit,t1.audit_borrow_limit)
					    else ifnull(t2.fee_value,0) end as total_fee_value,
						ifnull(t2.fee_value,0) as fee_value,
						t2.repayment_flag,
						t2.output_flag,
						t2.is_term_range,
						ifnull(t3.B_fst_year_mon_srv_amt,0) B_fst_year_mon_srv_amt,
						ifnull(t3.B_scd_year_mon_srv_amt,0) B_scd_year_mon_srv_amt,
						ifnull(t3.B_thd_year_mon_srv_amt,0) B_thd_year_mon_srv_amt,
						ifnull(t3.B_fth_year_mon_srv_amt,0) B_fth_year_mon_srv_amt,
						t1.full_time
				from apply_temp4 t1
			    join apply_temp2 t2
                  on t1.issue_id = t2.issue_id
				left join apply_temp3 t3
					   on t2.issue_id = t3.issue_id
				     and t3.fee_id = t2.fee_item_id
		 )tt1
group by tt1.issue_id,
	     tt1.business_id,
	     tt1.full_issue_dt,
	     tt1.RealName ,
	     tt1.IdentityCard ,
	     tt1.full_borrow_money,
		 tt1.issue_order,
		 tt1.full_time;
		 
		 
		 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>848</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>insert_result</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

DROP TEMPORARY TABLE IF EXISTS `resl_temp0`;
CREATE TEMPORARY TABLE `resl_temp0` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标编号',
	`branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '合同主体',
 KEY `resl_temp0_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp0(`business_id`,`branch_name`)
 SELECT DISTINCT tt.business_id,branch_name
FROM (
	  SELECT business_id,branch_name
		FROM ODS_XD_TUANDAI_BM.tb_business_output_ods tt3
	   WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
		 AND tt3.BUSINESS_ID NOT  LIKE '%ZQ%'
	  UNION ALL
	  SELECT car_business_extension_id AS business_id,branch_name
		FROM ODS_XD_TUANDAI_BM.tb_car_business_exhibition_ods tt3
	   WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
	 )tt; 

DROP TEMPORARY TABLE IF EXISTS `resl_temp1`;
CREATE TEMPORARY TABLE `resl_temp1` (
	`issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标编号',
	`branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '费用项ID',
 KEY `resl_temp1_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp1(`issue_id`,`branch_name`)
SELECT distinct a.`IssueId` as issue_id,d.`branch_name` 
FROM (select  a.`IssueId`,a.BranchCompanyId from ODS_XD_TUANDAI_BM.`tb_issue_ods` a  where a.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d'))a
LEFT JOIN  (select distinct d.`RESERVE_2` BranchCompanyId,d.`branch_name`  
              from ODS_XD_TUANDAI_BM.`tb_department_ods` d  
			  where d.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
			  -- 以下代码update 20180511 将上标主体手动填充
			    and d.`RESERVE_2` not in (select i.BranchCompanyId from DIM_DATA.dim_cut_xd_branch_info i )
		    union all
			select distinct i.BranchCompanyId ,i.branch_name from DIM_DATA.dim_cut_xd_branch_info i
			  )d
       ON a.`BranchCompanyId` = d.`BranchCompanyId`;
	   
	 
DROP TEMPORARY TABLE IF EXISTS `resl_temp3`;
CREATE TEMPORARY TABLE `resl_temp3` (
   `TYPE_ID` VARCHAR(50) NULL DEFAULT NULL COMMENT '[业务类型编号]',
	`TYPE_NAME` VARCHAR(50) NULL DEFAULT NULL COMMENT '[业务类型名称]',
 KEY `resl_temp3_business_id` (`TYPE_ID`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp3(`TYPE_ID` ,`TYPE_NAME`)
SELECT tt2.TYPE_ID,
		tt2.TYPE_NAME 
FROM	ODS_XD_TUANDAI_BM.`tb_business_type_ods`  tt2
WHERE  tt2.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d');

DROP TEMPORARY TABLE IF EXISTS `resl_temp2`;
CREATE TEMPORARY TABLE `resl_temp2` (
		`business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
	`apply_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	`issue_split_type` INT(11) NULL DEFAULT NULL COMMENT '标识是否P2P拆标业务，0：非P2P拆标业务，1：P2P拆标业务',
	`customer_name` VARCHAR(200) NULL DEFAULT NULL COMMENT '业务类型',
		`first_business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
 KEY `resl_temp2_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp2(`business_id` ,`business_type`,`is_extension`,`apply_borrow_limit` ,`loan_rate` ,`issue_split_type`,`customer_name`,first_business_id )
SELECT tt2.business_id,
		tt3.TYPE_NAME as business_type ,--	业务类型
		tt2.is_extension ,--	类型
		tt2.apply_borrow_limit,--	借款期限（月）
		tt2.loan_rate,--	借款期限（月）
		tt2.issue_split_type,
		tt2.customer_name,
		tt2.first_business_id
FROM	DWS_DATA.dws_agr_xd_business tt2
left join resl_temp3 tt3  
       on tt2.business_type = tt3.TYPE_ID
WHERE  tt2.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
  and ifnull(tt2.`platform_id`,0) != 2;   -- udpate 20180725 剔除你我金融数据

DROP TEMPORARY TABLE IF EXISTS `tmp_dma_sal_achv_out_issue_detail_his`;
CREATE TEMPORARY TABLE `tmp_dma_sal_achv_out_issue_detail_his` (
	`stat_dt` VARCHAR(8) NOT NULL DEFAULT '' COMMENT '统计日期',
	`issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '标的号（资产端）',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`type_nm` VARCHAR(10) NULL DEFAULT NULL COMMENT '类型',
	`full_issue_dt` VARCHAR(10) NULL DEFAULT NULL COMMENT '满标日期',
	`issue_cut_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`id_card` VARCHAR(50) NULL DEFAULT NULL COMMENT '身份证号/统一社会信用代码',
	`issue_borrow_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '上标金额',
	`borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '期限（月）',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '利率(年化)',
	`branch_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标主体(上标分公司)',
	`main_borrow_customer` VARCHAR(50) NULL DEFAULT NULL COMMENT '主借款人',
	`is_issue_split` VARCHAR(10) NULL DEFAULT NULL COMMENT '是否共借标',
	`total_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '总服务费',
	`first_mon_total_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收总额',
	`first_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收服务费',
	`first_mon_gps_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '首月收GPS',
	`A_month_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'A收费模式月收服务费',
	`B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一年月收服务费',
	`B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二年月收服务费',
	`B_thd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第三年月收服务费',
	`B_fth_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第四年月收服务费',
	`dw_src_sys` VARCHAR(50) NULL DEFAULT NULL COMMENT '来源系统',
	`dw_src_tbl` VARCHAR(500) NULL DEFAULT NULL COMMENT '来源表',
	`dw_ins_tm` DATETIME NULL DEFAULT NULL COMMENT '插入时间',
	`dw_upd_tm` DATETIME NULL DEFAULT NULL COMMENT '更新时间',
	`dw_ins_usr` VARCHAR(50) NULL DEFAULT NULL COMMENT '插入用户',
	`dw_upd_usr` VARCHAR(50) NULL DEFAULT NULL COMMENT '更新用户',
	`part_dt` DATETIME NULL DEFAULT NULL COMMENT '分区日期',
	`full_time` VARCHAR(10) NULL DEFAULT NULL,
	`origin_business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '原业务编号或者展期业务编号',
	`contract_branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '合同主体',
	INDEX `idx_dma_sal_achv_out_issue_detail_his_part_dt` (`part_dt`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

	
INSERT INTO tmp_dma_sal_achv_out_issue_detail_his 
 SELECT SUBSTRING('${p_day}',1,8) AS stat_dt	,-- 统计日期
	    tt1.issue_id,
		-- tt1.business_id,
	    tt2.first_business_id as business_id, -- 业务编号改为原业务编号 update 20180508 需求变更
		tt2.business_type  AS business_type_nm,--	业务类型
		CASE WHEN tt2.is_extension = 0 THEN '净新增业务' WHEN tt2.is_extension &lt;&gt; 0 THEN '展期业务' END  AS type_nm,--	类型
	    tt1.full_issue_dt,
	    tt1.issue_cut_nm ,
	    tt1.id_card,
	    tt1.issue_borrow_amt,
		tt2.apply_borrow_limit	AS borrow_limit,--	借款期限（月）
		tt2.loan_rate	AS loan_rate,--	借款期限（月）
		tt3.branch_name AS branch_nm,
		tt2.customer_name AS main_borrow_customer,
		CASE WHEN tt2.issue_split_type = 0 THEN '否' WHEN tt2.issue_split_type = 1 THEN '是' ELSE '未知' END  AS is_issue_split,
		SUM(total_srv_amt) AS total_srv_amt,
		SUM(first_mon_total_amt) AS first_mon_total_amt,
		SUM(first_mon_srv_amt) AS first_mon_srv_amt,
		SUM(first_mon_gps_amt) AS first_mon_gps_amt,
		SUM(A_month_srv_amt) AS A_month_srv_amt,
		SUM(B_fst_year_mon_srv_amt) AS B_fst_year_mon_srv_amt,
		SUM(B_scd_year_mon_srv_amt) AS B_scd_year_mon_srv_amt,
		SUM(B_thd_year_mon_srv_amt) AS B_thd_year_mon_srv_amt,
		SUM(B_fth_year_mon_srv_amt) AS B_fth_year_mon_srv_amt,
		'tuandai_bm'	AS	dw_src_sys	,--	来源系统
		'DWS_DATA.dws_agr_xd_issue_business,DWD_DATA.dwd_evt_xd_business_apply_output,DWD_DATA.dwd_evt_xd_business_apply_output_detail,DWS_DATA.dws_agr_xd_business ..'	AS	dw_src_tbl	,--	来源表
		NOW()	AS	dw_ins_tm	,--	插入时间
		NOW()	AS	dw_upd_tm	,--	更新时间
		'dailiang'	AS	dw_ins_usr	,--	插入用户
		'dailiang'	AS	dw_upd_usr	,--	更新用户
        DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt,	--	分区日期
        tt1.full_time,
	    tt1.business_id as origin_business_id,
		tt4.branch_name as contract_branch_name   -- update 20180516 add 合同主体
		
	FROM (SELECT 	`stat_dt` ,
					`issue_id` ,
					`business_id` ,
					`full_issue_dt`,
					`issue_cut_nm` ,
					`id_card` ,
					`issue_borrow_amt`,
					`issue_order` ,
					`total_srv_amt` ,
					`first_mon_total_amt`,
					`first_mon_srv_amt` ,
					`first_mon_gps_amt` ,
					`A_month_srv_amt`,
					`B_fst_year_mon_srv_amt`,
					`B_scd_year_mon_srv_amt` ,
					`B_thd_year_mon_srv_amt`,
					`B_fth_year_mon_srv_amt` ,
					full_time
	        FROM DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp2 tt1
		 UNION ALL
		 SELECT `stat_dt` ,
				`issue_id` ,
				`business_id` ,
				`full_issue_dt`,
				`issue_cut_nm` ,
				`id_card` ,
				`issue_borrow_amt`,
				`issue_order` ,
				`total_srv_amt` ,
				`first_mon_total_amt`,
				`first_mon_srv_amt` ,
				`first_mon_gps_amt` ,
				`A_month_srv_amt`,
				`B_fst_year_mon_srv_amt`,
				`B_scd_year_mon_srv_amt` ,
				`B_thd_year_mon_srv_amt`,
				`B_fth_year_mon_srv_amt`  ,
				full_time
		   FROM DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_tmp3 tt2
		 )tt1
	 JOIN resl_temp2 tt2
	       ON tt1.business_id = tt2.business_id
	LEFT JOIN resl_temp1 tt3
	       ON tt1.issue_id = tt3.issue_id
	LEFT JOIN resl_temp0 tt4
	       ON tt1.business_id = tt4.business_id
where ifnull(tt1.full_time,'') !=''
GROUP BY tt1.issue_id,
	    tt2.first_business_id,
		tt2.business_type,
		CASE WHEN tt2.is_extension = 0 THEN '净新增业务' WHEN tt2.is_extension &lt;&gt; 0 THEN '展期业务' END,--	类型
	    tt1.full_issue_dt,
	    tt1.issue_cut_nm ,
	    tt1.id_card,
	    tt1.issue_borrow_amt,
		tt2.apply_borrow_limit,--	借款期限（月）
		tt2.loan_rate,--	借款期限（月）
		tt3.branch_name ,
		tt2.customer_name ,
		CASE WHEN tt2.issue_split_type = 0 THEN '否' WHEN tt2.issue_split_type = 1 THEN '是' ELSE '未知' END,
		tt1.full_time,
	    tt1.business_id,
		tt4.branch_name;



ALTER TABLE `DMA_SAL_ACHV_DATA`.`dma_sal_achv_out_issue_detail_his`  TRUNCATE PARTITION dma_sal_achv_out_issue_detail_his_${pt_day};	
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail_his
 SELECT  `stat_dt`,
  `issue_id`,
  t.`business_id`,
  `business_type_nm`,
  `type_nm`,
  `full_issue_dt`,
  `issue_cut_nm`,
  `id_card`,
  `issue_borrow_amt`,
  `borrow_limit`,
  `loan_rate`,
  `branch_nm`,
  `main_borrow_customer`,
  `is_issue_split`,
  `total_srv_amt`,
  `first_mon_total_amt`,
  `first_mon_srv_amt`,
  `first_mon_gps_amt`,
  `A_month_srv_amt`,
  `B_fst_year_mon_srv_amt`,
  `B_scd_year_mon_srv_amt`,
  `B_thd_year_mon_srv_amt`,
  `B_fth_year_mon_srv_amt`,
  `dw_src_sys`,
  `dw_src_tbl`,
  `dw_ins_tm`,
  `dw_upd_tm`,
  `dw_ins_usr`,
  `dw_upd_usr`,
  part_dt,
  full_time,
  origin_business_id,
  contract_branch_name,
  xb.repay_way_nm
  FROM tmp_dma_sal_achv_out_issue_detail_his t
  LEFT JOIN (SELECT xb.business_id,rw.repay_way_nm FROM DWS_DATA.`dws_agr_xd_business` xb 
             LEFT JOIN DIM_DATA.`dim_evt_xd_repay_way` rw ON xb.apply_repayment_type_id=rw.repay_way_id
              WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')) xb  ON xb.business_id=t.business_id
  WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');
		  

TRUNCATE TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail;
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_out_issue_detail
 SELECT  `stat_dt`,
  `issue_id`,
  `business_id`,
  `business_type_nm`,
  `type_nm`,
  `full_issue_dt`,
  `issue_cut_nm`,
  `id_card`,
  `issue_borrow_amt`,
  `borrow_limit`,
  `loan_rate`,
  `branch_nm`,
  `main_borrow_customer`,
  `is_issue_split`,
  `total_srv_amt`,
  `first_mon_total_amt`,
  `first_mon_srv_amt`,
  `first_mon_gps_amt`,
  `A_month_srv_amt`,
  `B_fst_year_mon_srv_amt`,
  `B_scd_year_mon_srv_amt`,
  `B_thd_year_mon_srv_amt`,
  `B_fth_year_mon_srv_amt`,
  `dw_src_sys`,
  `dw_src_tbl`,
  `dw_ins_tm`,
  `dw_upd_tm`,
  `dw_ins_usr`,
  `dw_upd_usr`,
  full_time,
  origin_business_id,
  contract_branch_name,
  repay_way_nm
  FROM dma_sal_achv_out_issue_detail_his
  WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');		 
		 
		 </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>960</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 410</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp2',
   '100',
   '插入临时表（dma_sal_achv_out_issue_detail_tmp2）异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>720</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 510</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp3',
   '100',
   '插入临时表（dma_sal_achv_out_issue_detail_tmp3）异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>848</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 610</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_result',
   '100',
   '插入结果表（dma_sal_achv_out_issue_detail）异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>960</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp1',
   '100',
   '插入临时表(dma_sal_achv_out_issue_detail_tmp1)',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>656</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp1',
   '100',
   '插入临时表(dma_sal_achv_out_issue_detail_tmp2)',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>784</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 500</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_temp1',
   '100',
   '插入临时表(dma_sal_achv_out_issue_detail_tmp3)',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>896</xloc>
      <yloc>352</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 600</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_result',
   '100',
   '插入结果表(dma_sal_achv_out_issue_detail)',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1024</xloc>
      <yloc>352</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 700</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 700</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp1</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp1</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>insert_temp2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp2</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>insert_temp3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp3</from>
      <to>SQL_LOG 500</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 500</from>
      <to>insert_result</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_result</from>
      <to>SQL_LOG 600</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 600</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp2</from>
      <to>SQL_LOG 410</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_temp3</from>
      <to>SQL_LOG 510</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_result</from>
      <to>SQL_LOG 610</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 410</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 510</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 610</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_temp1</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：核心账务系统-合同信息统计报表
创建时间：20180413
创建人   ：dailiang
源系统	 ：tuandai_bm
数据源表：DWS_DATA.dws_agr_xd_issue_business,
               DWD_DATA.dwd_evt_xd_business_apply_output,
               DWD_DATA.dwd_evt_xd_business_apply_output_detail,
               DWS_DATA.dws_agr_xd_business
               ...
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181119 新增还款方式字段</note>
      <xloc>32</xloc>
      <yloc>16</yloc>
      <width>442</width>
      <heigth>267</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

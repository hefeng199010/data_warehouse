<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_yam_contract_detail</name>
  <description/>
  <extended_description>核心账务系统-合同统计报表-你我金融平台</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_fsd_out_tra_detail</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共9步！！', 0,'${p_day}',  NOW(),  'dl' );
  
DROP TEMPORARY TABLE IF EXISTS `apply_temp1`;
CREATE TEMPORARY TABLE `apply_temp1` (
 `issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
 KEY `apply_temp1_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;
INSERT INTO apply_temp1
SELECT tt.`issue_id` 
  FROM ODS_XD_TUANDAI_BM.`tb_issue_business_ods` tt 
 WHERE  tt.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  AND tt.`business_id` IN (SELECT a.`business_id` FROM ODS_XD_TUANDAI_BM.`tb_business_ods` a WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')  AND a.`platform_id` = 2 );
  
  
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp1', '100', '获取你我金融标的号', 0,'${p_day}',  NOW(),  'dl' );

DROP TEMPORARY TABLE IF EXISTS `apply_temp2`;
CREATE TEMPORARY TABLE `apply_temp2` (
 `issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
 `is_term_range` INT(11) NULL DEFAULT '0' COMMENT '[是否设置期限范围]',
 `fee_item_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目名称',
 `is_one_time_charge` INT(11) NULL DEFAULT NULL COMMENT '[是否一次收取，1为按月收取，2为一次收取]',
 `fee_value` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '[业务应收取费用值，如果按月收取，则存储按月收取的值，如800元/月收取服务费，此字段存储800。如果一次性收取，则存储应收总费用值]',
 `repayment_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用的还款类型，1:期初收取,2:期末收取]',
 `output_flag` INT(11) NULL DEFAULT NULL COMMENT '[标记该项费用是否单独收取，null或0:不单独收取，1:单独收取]',
 `fee_item_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项目ID',
 KEY `apply_temp2_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO apply_temp2(`issue_id`,`is_term_range`,`fee_item_name`,`is_one_time_charge`,`fee_value`,`repayment_flag`,`output_flag`,`fee_item_id`)
SELECT  t2.issue_id,
        t2.is_term_range,
  t2.fee_item_name,
  t2.is_one_time_charge,
  t2.fee_value,
   t2.repayment_flag,
   t2.output_flag,
   t2.fee_item_id
FROM  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t2
JOIN apply_temp1 t3  ON t2.issue_id = t3.issue_id
WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND t2.fee_type_id='d5aef8af-0277-4514-a4cc-cdb095db30f4';


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp2', '200', '获取你我金融服务费信息', 0,'${p_day}',  NOW(),  'dl' );


DROP TEMPORARY TABLE IF EXISTS `apply_temp3`;
CREATE TEMPORARY TABLE `apply_temp3` (
`issue_id` VARCHAR(50) DEFAULT NULL COMMENT '业务单号', 
 `fee_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '费用项ID',
 `B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一月收服务费',
 `B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二月收服务费',
 KEY `apply_temp3_issue_id` (`issue_id`),
 KEY `apply_temp3_fee_id` (`fee_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO apply_temp3
SELECT t.`issue_id`,t.`fee_id`,
  MAX(IFNULL(CASE WHEN t.fee_term_range_min = 1 AND t.fee_term_range_max = 1 THEN t.fee_value END,0))  B_fst_year_mon_srv_amt,
        MAX(IFNULL(CASE WHEN t.fee_term_range_min = 2 AND t.fee_term_range_max > 2 THEN t.fee_value END,0))  B_scd_year_mon_srv_amt
FROM  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_detail_ods t
JOIN apply_temp1 t3  ON t.issue_id = t3.issue_id
WHERE t.fee_name ='月收分公司服务费'
AND t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
GROUP BY t.`issue_id`,t.`fee_id`;

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp3', '300', '获取你我金融B段模式月收服务费', 0,'${p_day}',  NOW(),  'dl' );


DROP TEMPORARY TABLE IF EXISTS `apply_temp4`;
CREATE TEMPORARY TABLE `apply_temp4` (
 `issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '上标编号',
 `business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
 `full_issue_dt` VARCHAR(50) NULL  DEFAULT NULL COMMENT '满标时间',
 `RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
 `IdentityCard` VARCHAR(50) NULL DEFAULT NULL COMMENT '身份证号',
 `full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
 `borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款总金额',
 `master_issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '主借标ID',
 `issue_order` INT(11) NULL DEFAULT NULL COMMENT '超额拆标共借项目的序号',
 `borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '借款期限',
 `audit_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '业务信息表中的借款期限（月）',
 `full_time` VARCHAR(10) NULL  DEFAULT NULL COMMENT '满标时间',
 KEY `apply_temp4_issue_id` (`issue_id`),
 KEY `apply_temp4_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO `apply_temp4` 
SELECT t1.issue_id,
  t1.business_id,
  DATE_FORMAT(t1.full_issue_date,'%Y-%m-%d') AS full_issue_dt,
  t1.RealName,
  t1.IdentityCard,
  t1.full_borrow_money,
  t1.borrow_money,
  t1.master_issue_id,
  t1.issue_order,
  t1.borrow_limit,
  t1.audit_borrow_limit,
  DATE_FORMAT(t1.full_time,'%Y-%m-%d') AS full_time
FROM DWS_DATA.dws_agr_xd_issue_business t1
WHERE t1.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');
--  and ifnull(t1.full_time,'') !=''  -- add 20180511
-- and t1.input_time >= '2018-03-21' 


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp4', '400', '获取标的信息', 0,'${p_day}',  NOW(),  'dl' );


DROP TEMPORARY TABLE IF EXISTS `apply_temp5`;
CREATE TEMPORARY TABLE `apply_temp5` (
 `issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '上标编号',
 `A_month_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一月收服务费',
 `B_fst_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一月收服务费',
 `B_scd_year_mon_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第二月收服务费',
 KEY `apply_temp5_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;
 
 INSERT INTO apply_temp5
 SELECT   tt1.issue_id,
    SUM(IFNULL(CASE WHEN tt1.is_term_range = 0 AND tt1.fee_item_name LIKE '%月收分公司服务费%' THEN  tt1.fee_value ELSE 0 END,0)) A_month_srv_amt,    
    SUM(IFNULL(CASE WHEN tt1.is_term_range = 1 THEN  tt1.B_fst_year_mon_srv_amt END,0)) B_fst_year_mon_srv_amt,       
    SUM(IFNULL(CASE WHEN tt1.is_term_range = 1 THEN  tt1.B_scd_year_mon_srv_amt END,0)) B_scd_year_mon_srv_amt
 FROM(        SELECT t2.issue_id,
      t2.fee_item_name,
      IFNULL(t2.fee_value,0) AS fee_value,
      t2.repayment_flag,
      t2.output_flag,
      t2.is_term_range,
      IFNULL(t3.B_fst_year_mon_srv_amt,0) B_fst_year_mon_srv_amt,
      IFNULL(t3.B_scd_year_mon_srv_amt,0) B_scd_year_mon_srv_amt
    FROM  apply_temp2 t2
    LEFT JOIN apply_temp3 t3
        ON t2.issue_id = t3.issue_id
         AND t3.fee_id = t2.fee_item_id
   )tt1
GROUP BY tt1.issue_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp5', '500', '获取你我金融月收服务费信息', 0,'${p_day}',  NOW(),  'dl' );
  
   
DROP TEMPORARY TABLE IF EXISTS `apply_temp6`;
CREATE TEMPORARY TABLE `apply_temp6` (
 `issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '上标编号',
 `first_srv_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B收费模式第一月收服务费',
 KEY `apply_temp6_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;
 
 INSERT INTO apply_temp6
 SELECT t2.`issue_id`,SUM(t2.`fee_value`) first_srv_amt
FROM  ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods t2
JOIN apply_temp1 t3  ON t2.issue_id = t3.issue_id
WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
   AND t2.`fee_item_name` ='剩余前置服务费'
 GROUP BY t2.issue_id ;
 

--  创建临时表   t4
DROP TEMPORARY TABLE IF EXISTS `apply_temp66`;
Create TEMPORARY Table `apply_temp66` (
  `issue_id` varchar(50) DEFAULT NULL COMMENT '上标编号',
  `first_mon_amt` decimal(10,2) DEFAULT NULL COMMENT '一次性收取分公司费',
 KEY `apply_temp66_issue_id` (`issue_id`)
) ENGINE=MEMORY  DEFAULT CHARSET=utf8  COMMENT='上标出款明细表';
insert into apply_temp66
select t4.issue_id, t4.borrow_money as first_mon_amt
from ODS_XD_TUANDAI_BM.tb_issue_out_list_ods t4 
JOIN apply_temp1 t3  ON t4.issue_id = t3.issue_id
where t4.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
and t4.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4',
				  '64db27f6-e416-4ebe-bd08-0aa43e837a28') -- add by dailiang 根据孙进文建议车易贷增加fee_id，计算GPS费用
;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','apply_temp6', '600', '获取你我金融剩余前置服务费', 0,'${p_day}',  NOW(),  'dl' ); 
 
DROP TEMPORARY TABLE IF EXISTS `resl_temp0`;
CREATE TEMPORARY TABLE `resl_temp0` (
 `business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标编号',
 `branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '合同主体',
 KEY `resl_temp0_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp0(`business_id`,`branch_name`)
 SELECT DISTINCT tt.business_id,branch_name
FROM (
   SELECT business_id,branch_name
  FROM ODS_XD_TUANDAI_BM.tb_business_output_ods tt3
    WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
   AND tt3.BUSINESS_ID NOT  LIKE '%ZQ%'
   UNION ALL
   SELECT car_business_extension_id AS business_id,branch_name
  FROM ODS_XD_TUANDAI_BM.tb_car_business_exhibition_ods tt3
    WHERE tt3.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
  )tt; 

DROP TEMPORARY TABLE IF EXISTS `resl_temp1`;
CREATE TEMPORARY TABLE `resl_temp1` (
 `issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '上标编号',
 `branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '费用项ID',
 KEY `resl_temp1_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp1(`issue_id`,`branch_name`)
SELECT DISTINCT a.`IssueId` AS issue_id,d.`branch_name` 
FROM (SELECT  a.`IssueId`,a.BranchCompanyId FROM ODS_XD_TUANDAI_BM.`tb_issue_ods` a  WHERE a.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d'))a
LEFT JOIN  (SELECT DISTINCT d.`RESERVE_2` BranchCompanyId,d.`branch_name`  
              FROM ODS_XD_TUANDAI_BM.`tb_department_ods` d  
     WHERE d.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
     -- 以下代码update 20180511 将上标主体手动填充
       AND d.`RESERVE_2` NOT IN (SELECT i.BranchCompanyId FROM DIM_DATA.dim_cut_xd_branch_info i )
      UNION ALL
   SELECT DISTINCT i.BranchCompanyId ,i.branch_name FROM DIM_DATA.dim_cut_xd_branch_info i
     )d
       ON a.`BranchCompanyId` = d.`BranchCompanyId`;
    
  
DROP TEMPORARY TABLE IF EXISTS `resl_temp3`;
CREATE TEMPORARY TABLE `resl_temp3` (
   `TYPE_ID` VARCHAR(50) NULL DEFAULT NULL COMMENT '[业务类型编号]',
 `TYPE_NAME` VARCHAR(50) NULL DEFAULT NULL COMMENT '[业务类型名称]',
 KEY `resl_temp3_business_id` (`TYPE_ID`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp3(`TYPE_ID` ,`TYPE_NAME`)
SELECT tt2.TYPE_ID,
  tt2.TYPE_NAME 
FROM ODS_XD_TUANDAI_BM.`tb_business_type_ods`  tt2
WHERE  tt2.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d');

DROP TEMPORARY TABLE IF EXISTS `resl_temp2`;
CREATE TEMPORARY TABLE `resl_temp2` (
  `business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
 `business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
 `is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
 `apply_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
 `loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
 `issue_split_type` VARCHAR(10) NULL DEFAULT NULL COMMENT '是否共借标',
 `customer_name` VARCHAR(200) NULL DEFAULT NULL COMMENT '业务类型',
  `first_business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
 KEY `resl_temp2_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO resl_temp2(`business_id` ,`business_type`,`is_extension`,`apply_borrow_limit` ,`loan_rate` ,`issue_split_type`,`customer_name`,first_business_id )
SELECT tt2.business_id,
  tt3.TYPE_NAME AS business_type ,-- 业务类型
  tt2.is_extension ,-- 类型
  tt2.apply_borrow_limit,-- 借款期限（月）
  tt2.loan_rate,-- 借款期限（月）
  case when tt2.issue_split_type='1' then '是' else '否' end as issue_split_type,
  tt2.customer_name,
  tt2.first_business_id
FROM DWS_DATA.dws_agr_xd_business tt2
LEFT JOIN resl_temp3 tt3  
       ON tt2.business_type = tt3.TYPE_ID
WHERE  tt2.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d');


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','resl_temp2', '700', '获取你我金融上标主体、合同主体、业务信息等', 0,'${p_day}',  NOW(),  'dl' );     

DROP TEMPORARY TABLE IF EXISTS `resl_temp4`;
CREATE TEMPORARY TABLE `resl_temp4` (
  `issue_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '标的ID',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`type_nm` VARCHAR(50) NULL DEFAULT NULL COMMENT '类型 新增、展期',
	`full_time` VARCHAR(10) NULL DEFAULT NULL COMMENT '启标时间',
	`full_issue_date` VARCHAR(10) NULL DEFAULT NULL COMMENT '满标时间',
	`RealName` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称（甲方姓名）',
	`IdentityCard` VARCHAR(50) NULL DEFAULT NULL COMMENT '身份证号码',
	`full_borrow_money` DECIMAL(10,2) NULL DEFAULT NULL COMMENT '满标金额',
	`borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	`branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '合同主体',
	`issue_branch_name` VARCHAR(100) NULL DEFAULT NULL COMMENT '上标主体',
 `customer_name` VARCHAR(200) NULL DEFAULT NULL COMMENT '主借款人',
 `issue_split_type` VARCHAR(10) NULL DEFAULT NULL COMMENT '是否共借标',
	`total_fee_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '总服务费',
	`first_mon_fee_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '剩余前置服务费',
	`first_mon_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '一次性收取分公司服务费',
	`a_mon_fee_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'A模式月收服务费',
	`b_mon_first_fee_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B模式第1个月服务费',
	`b_mon_scd_fee_amt` DECIMAL(12,2) NULL DEFAULT NULL COMMENT 'B模式第2个月服务费',
 KEY `resl_temp4_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;


insert into resl_temp4
SELECT  t1.issue_id ,
 t2.business_id ,
tt2.business_type ,
CASE WHEN tt2.is_extension = 0 THEN '净新增业务' WHEN tt2.is_extension &lt;&gt; 0 THEN '展期业务' END AS type_nm,-- 类型
 t2.full_time ,
 t2.full_issue_dt ,
 t2.RealName ,
 t2.IdentityCard,
 t2.full_borrow_money,
 t2.borrow_limit,
 tt2.loan_rate ,
 tt4.branch_name ,
 tt3.branch_name AS issue_branch_name,
 tt2.customer_name,
 tt2.issue_split_type,
 case when t1.first_mon_amt = 0 then  t1.first_srv_amt when t1.first_mon_amt != 0 then first_mon_amt end
  + t1.A_month_srv_amt * t2.borrow_limit + t1.B_fst_year_mon_srv_amt + t1.B_scd_year_mon_srv_amt*(t2.borrow_limit -1)  AS total_fee_amt,
 t1.first_srv_amt AS first_mon_fee_amt, -- 剩余前置服务费
 t1.first_mon_amt AS first_mon_amt,   -- 分公司服务费
 t1.A_month_srv_amt AS a_mon_fee_amt,
 t1.B_fst_year_mon_srv_amt AS b_mon_first_fee_amt,
 t1.B_scd_year_mon_srv_amt AS b_mon_scd_fee_amt
FROM ( SELECT issue_id, 
      SUM(first_srv_amt) AS first_srv_amt,
   SUM(A_month_srv_amt) AS A_month_srv_amt,
   SUM(B_fst_year_mon_srv_amt) AS B_fst_year_mon_srv_amt,
   SUM(B_scd_year_mon_srv_amt) AS B_scd_year_mon_srv_amt,
   SUM(first_mon_amt) AS first_mon_amt
 FROM (
SELECT issue_id,
    0 AS first_srv_amt,
   A_month_srv_amt,
   B_fst_year_mon_srv_amt,
   B_scd_year_mon_srv_amt,
   0 first_mon_amt
FROM apply_temp5 t1
UNION ALL
SELECT issue_id,
    first_srv_amt AS first_srv_amt,
   0 AS A_month_srv_amt,
   0 AS B_fst_year_mon_srv_amt,
   0 AS B_scd_year_mon_srv_amt,
   0 AS first_mon_amt
FROM apply_temp6
UNION ALL
SELECT issue_id,
    0 AS first_srv_amt,
   0 AS A_month_srv_amt,
   0 AS B_fst_year_mon_srv_amt,
   0 AS B_scd_year_mon_srv_amt,
   first_mon_amt AS first_mon_amt
FROM apply_temp66
)t1 
GROUP BY issue_id
)t1
LEFT JOIN  apply_temp4 t2 ON t1.issue_id = t2.issue_id
  JOIN resl_temp2 tt2
        ON t2.business_id = tt2.business_id
 LEFT JOIN resl_temp1 tt3
        ON t1.issue_id = tt3.issue_id
 LEFT JOIN resl_temp0 tt4
        ON t2.business_id = tt4.business_id		;				

		


DROP TEMPORARY TABLE IF EXISTS `resl_temp44`;
CREATE TEMPORARY TABLE `resl_temp44` (
	`car_business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务编号',
	`create_time` datetime NULL DEFAULT NULL COMMENT '业务类型',
	`log_content` VARCHAR(100) NULL DEFAULT NULL COMMENT '类型 新增、展期',
 KEY `resl_temp44_business_id` (`car_business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into resl_temp44
SELECT aa.`car_business_id`,aa.`create_time`,aa.`log_content`
FROM ODS_XD_TUANDAI_BM.tb_car_business_log_ods aa
JOIN (
		SELECT ttt.car_business_id,MAX(create_time) create_time
		FROM ODS_XD_TUANDAI_BM.tb_car_business_log_ods ttt  
		WHERE ttt.`car_business_id` IN (SELECT business_id FROM resl_temp4)
		  and ttt.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
		GROUP BY ttt.car_business_id
	 )bb ON aa.`car_business_id` = bb.car_business_id AND aa.create_time = bb.create_time
where aa.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');

		
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','resl_temp4', '800', '汇总信息', 0,'${p_day}',  NOW(),  'dl' );     							

alter table DMA_SAL_ACHV_DATA.dma_sal_achv_yam_contract_detail_his truncate partition dma_sal_achv_yam_contract_detail_his_${pt_day};
insert into DMA_SAL_ACHV_DATA.dma_sal_achv_yam_contract_detail_his							
SELECT substring('${p_day}',1,8) as stat_dt	,
	t1.`issue_id` ,
	t1.`business_id` ,
	t1.`business_type` ,
	t1.`type_nm`,
	t1.`full_time` ,
	t1.`full_issue_date`,
	t2.create_time  as approve_time,
	t2.log_content as process_stg ,--  流程阶段
	t1.`RealName` ,
	t1.`IdentityCard` ,
	t1.`full_borrow_money` ,
	t1.`borrow_limit`,
	t1.`loan_rate` ,
	t1.`branch_name` ,
	t1.`issue_branch_name`,
	t1.customer_name,
	t1.issue_split_type,
	t1.`total_fee_amt` ,
	t1.`first_mon_fee_amt`,
	t1.first_mon_amt,
	t1.`a_mon_fee_amt`,
	t1.`b_mon_first_fee_amt`,
	t1.`b_mon_scd_fee_amt` ,
	'tuandai_bm'	as	dw_src_sys	,--	来源系统
	'DWS_DATA.dws_agr_xd_business_after..'	as	dw_src_tbl	,--	来源表
	now()	as	dw_ins_tm	,--	插入时间
	now()	as	dw_upd_tm	,--	更新时间
	'dailiang'	as	dw_ins_usr	,--	插入用户
	'dailiang'	as	dw_upd_usr	, 
	DATE_FORMAT('${pt_day}','%Y-%m-%d')	as	part_dt,	--	分区日期
	xb.repay_way_nm  -- add by caihl20181119
FROM resl_temp4 t1
LEFT JOIN resl_temp44 t2 ON t1.`business_id` = t2.car_business_id	
LEFT JOIN (SELECT xb.business_id,rw.repay_way_nm FROM DWS_DATA.`dws_agr_xd_business` xb 
             LEFT JOIN DIM_DATA.`dim_evt_xd_repay_way` rw ON xb.apply_repayment_type_id=rw.repay_way_id
              WHERE xb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
		  ) xb  ON xb.business_id=t1.business_id
		;		



insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_sal_achv_yam_contract_detail_his', '900', '将你我金融明细数据进历史表', 0,'${p_day}',  NOW(),  'dl' );
  		  
							
truncate table 	DMA_SAL_ACHV_DATA.dma_sal_achv_yam_contract_detail;
insert into DMA_SAL_ACHV_DATA.dma_sal_achv_yam_contract_detail
select  t1.stat_dt	,
	t1.`issue_id` ,
	t1.`business_id` ,
	t1.`business_type` ,
	t1.`type_nm`,
	t1.`full_time` ,
	t1.`full_issue_date`,
	t1.approve_time,
	t1.process_stg ,--  流程阶段
	t1.`RealName` ,
	t1.`IdentityCard` ,
	t1.`full_borrow_money` ,
	t1.`borrow_limit`,
	t1.`loan_rate` ,
	t1.`branch_name` ,
	t1.`issue_branch_name`,
	t1.customer_name,
	t1.issue_split_type,
	t1.`total_fee_amt` ,
	t1.`first_mon_fee_amt`,
	t1.first_mon_amt,
	t1.`a_mon_fee_amt`,
	t1.`b_mon_first_fee_amt`,
	t1.`b_mon_scd_fee_amt` ,
	t1.dw_src_sys	,--	来源系统
	t1.dw_src_tbl	,--	来源表
	t1.dw_ins_tm	,--	插入时间
	t1.dw_upd_tm	,--	更新时间
	t1.dw_ins_usr	,--	插入用户
	t1.dw_upd_usr	,
	t1.repay_way_nm  -- add by caihl20181119
from DMA_SAL_ACHV_DATA.dma_sal_achv_yam_contract_detail_his t1
where 	part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');			
							

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '1000', '生成你我金融明细数据，成功！！！！', 0,'${p_day}',  NOW(),  'dl' );						

							
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>704</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：核心账务系统-合同统计报表-你我金融平台
创建时间：20180718
创建人   ：戴梁
源系统	 ：tuandai_bm
数据源表：dws_agr_xd_business...
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181119 新增还款方式字段</note>
      <xloc>0</xloc>
      <yloc>16</yloc>
      <width>442</width>
      <heigth>203</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_ceo_rpt_business_sum</name>
  <description/>
  <extended_description>ceo看板业务汇总表</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_ceo_rpt_business_sum</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1264</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'delete_data',
   '100',
   '删除数据！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1168</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'delete_data',
   '100',
   '删除数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>768</xloc>
      <yloc>608</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1088</xloc>
      <yloc>496</yloc>
    </entry>
    <entry>
      <name>delete_data 2</name>
      <description/>
      <type>SQL</type>
      <sql>alter table DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_his truncate partition dma_ceo_rpt_business_sum_his_${pt_day};
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('123', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );

/*房速贷产品类型begin*/
DROP TEMPORARY TABLE IF EXISTS `tb_car_business_after_ods_tmp`;
CREATE TEMPORARY TABLE `tb_car_business_after_ods_tmp` (
  `car_business_id` varchar(50) DEFAULT NULL COMMENT '[业务编号]',
  index tb_car_business_after_ods_tmp_car_business_id(car_business_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into tb_car_business_after_ods_tmp
SELECT DISTINCT IFNULL(tibd.car_business_after_defer,tibd.car_business_id) AS car_business_id
 FROM ODS_XD_TUANDAI_BM.tb_car_business_after_ods tibd 
WHERE part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND paratype IN ('T600','房速贷标准件','房速贷非标准件')
AND tibd.car_business_after_id LIKE '%XYD%';
/*房速贷产品类型end*/  
  


/*计算线上满标 线下出款的金额和时间 begin*/
 DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp`;
 CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp` (
	`is_issue` VARCHAR(1) NOT NULL DEFAULT '',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
     borrow_money DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款金额',
	`full_issue_date` DATETIME NULL DEFAULT NULL,
	INDEX `idx_business_id` (`business_id`)
)
COLLATE='utf8_general_ci'
ENGINE=INNODB
;

-- P2P业务实际满标金额累计之和，线下出款以财务登记出款为准
-- 线上:tb_issue_business.full_borrow_money
-- 线下:tb_output_list.OUTPUT_MONEY
 INSERT INTO dws_agr_xd_issue_business_tmp 
-- 线上  
  SELECT '1' AS is_issue,business_id,SUM(IFNULL(full_borrow_money,0)) AS borrow_money, MIN(IFNULL(t.full_issue_date,DATE'4712-12-31')) AS full_issue_date  
  FROM DWS_DATA.dws_agr_xd_issue_business t
WHERE  part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
and ifnull(t.full_issue_date,'')!='' -- add by caihl 
GROUP BY business_id
;


 -- 线下
INSERT INTO dws_agr_xd_issue_business_tmp
 SELECT '0' AS is_issue,business_id, SUM(IFNULL(OUTPUT_MONEY,0)) AS borrow_money,MIN(IFNULL(t.Actual_OutTime,DATE'4712-12-31')) AS  full_issue_date FROM DWS_DATA.dws_evt_xd_output_list t
WHERE  part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND t.is_issue = '0'
and ifnull(t.Actual_OutTime,'')!='' -- add by caihl 
GROUP BY business_id
;
-- 避免测试环境中由于数据不准确 导致线上线下都有业务ID
  DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_tmp01`;
  CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_tmp01` (
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
	borrow_money DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款金额',
	`full_issue_date` DATETIME NULL DEFAULT NULL,
	INDEX `idx_business_id`(`business_id`)
)
COLLATE='utf8_general_ci'
ENGINE=INNODB
;

INSERT INTO dws_agr_xd_issue_business_tmp01
 SELECT
 business_id,
 SUM(IFNULL(borrow_money,0)) AS borrow_money,
 MIN(IFNULL(t.full_issue_date,DATE'4712-12-31')) AS full_issue_date
 FROM dws_agr_xd_issue_business_tmp t
 GROUP BY business_id;
/*计算线上满标 线下出款的金额和时间 END*/
  
 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','1:计算线上满标 线下出款的金额和时间', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 

 
/*将申请、通过、签约等数据插入到表中 begin*/
DROP TEMPORARY TABLE IF EXISTS dma_ceo_rpt_business_sum_tmp1;
CREATE TEMPORARY TABLE `dma_ceo_rpt_business_sum_tmp1` (
  `data_src` varchar(10) NOT NULL DEFAULT '',
  `business_id` varchar(50) DEFAULT NULL COMMENT '业务编号',
  `data_dt` varchar(10) DEFAULT NULL COMMENT '申请日期',
  `new_apl_cnt` int(10) DEFAULT NULL COMMENT '当日申请单笔数',
  `new_pass_cnt` int(10) NOT NULL DEFAULT '0',
  `new_sign_cnt` int(10) NOT NULL DEFAULT '0',
  `new_output_cnt` int(10) NOT NULL DEFAULT '0',
  `new_output_amt` decimal(15,2) NOT NULL DEFAULT '0.00',
  `extension_cnt` int(10) NOT NULL DEFAULT '0',
  `extension_amount` decimal(15,2) NOT NULL DEFAULT '0.00',
   index dma_ceo_rpt_business_sum_tmp1_business_id(business_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;


-- 申请数据
INSERT INTO dma_ceo_rpt_business_sum_tmp1 
SELECT 
'1申请数据'    AS data_src
,business_id       
,apply_dt      AS  data_dt                     -- 申请日期      
,cur_day_apply_cnt AS new_apl_cnt                  -- 申请单数        
,0 AS new_pass_cnt                 -- 通过单数                  
,0 AS new_sign_cnt                 -- 签约单数                 
,0 AS new_output_cnt               -- 放款单数               
,0 AS new_output_amt               -- 放款金额        
,0 AS extension_cnt                -- 续贷单数        
,0 AS extension_amount             -- 续贷金额        
FROM DMB_OPR_DATA.dmb_opr_xd_business_stat_sum t
WHERE t.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND t.cur_day_apply_cnt = 1;

-- 通过数据
INSERT INTO dma_ceo_rpt_business_sum_tmp1 
SELECT 
'2通过数据'   AS data_src
,business_id       
,pass_dt      AS  data_dt                     -- 申请日期      
,0 AS new_apl_cnt                  -- 申请单数        
,cur_day_pass_cnt AS new_pass_cnt                 -- 通过单数                  
,0 AS new_sign_cnt                 -- 签约单数                 
,0 AS new_output_cnt               -- 放款单数               
,0 AS new_output_amt               -- 放款金额        
,0 AS extension_cnt                -- 续贷单数        
,0 AS extension_amount             -- 续贷金额        
FROM DMB_OPR_DATA.dmb_opr_xd_business_stat_sum t
WHERE t.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND  t.cur_day_pass_cnt = 1;

-- 签约日期
INSERT INTO dma_ceo_rpt_business_sum_tmp1 
SELECT 
'3签约数据' AS data_src
,business_id        
,sign_dt      AS  data_dt                     -- 申请日期      
,0 AS new_apl_cnt                  -- 申请单数        
,0 AS new_pass_cnt                 -- 通过单数                  
,cur_day_sign_cnt AS new_sign_cnt                 -- 签约单数                 
,0 AS new_output_cnt               -- 放款单数               
,0 AS new_output_amt               -- 放款金额        
,0 AS extension_cnt                -- 续贷单数        
,0 AS extension_amount             -- 续贷金额        
FROM DMB_OPR_DATA.dmb_opr_xd_business_stat_sum t
WHERE t.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND t.cur_day_sign_cnt = 1 ;


-- 放款日期
INSERT INTO dma_ceo_rpt_business_sum_tmp1 
SELECT 
 '4放款数据' AS data_src
,t.business_id       
,DATE_FORMAT(tt.full_issue_date,'%Y%m%d')      AS  data_dt                     -- 放款日期
,0 AS new_apl_cnt                  -- 申请单数        
,0 AS new_pass_cnt                 -- 通过单数                  
,0 AS new_sign_cnt                 -- 签约单数                 
,CASE WHEN DATE_FORMAT(tt.full_issue_date,'%Y%m%d')='47121231' THEN 0 ELSE 1 END AS new_output_cnt    -- 放款单数 确定逻辑 有放款日期为1       
,IFNULL(tt.borrow_money,0) AS new_output_amt               -- 放款金额        
,0 AS extension_cnt                -- 续贷单数        
,0 AS extension_amount             -- 续贷金额        
FROM DMB_OPR_DATA.dmb_opr_xd_business_stat_sum t
INNER JOIN dws_agr_xd_issue_business_tmp01 tt
ON t.business_id = tt.business_id
WHERE t.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND t.is_extension =0  -- 非展期
AND tt.full_issue_date &lt;&gt; DATE '4712-12-31' -- 排除放款日期为空的数据
;


-- 展期日期
INSERT INTO dma_ceo_rpt_business_sum_tmp1 
SELECT 
  '5展期数据' AS data_src
,t.business_id       
-- ,t.input_dt      AS  data_dt                     -- 受理日期
,DATE_FORMAT(tt.full_issue_date,'%Y%m%d') as data_dt  -- add by caihl20180523
,0 AS new_apl_cnt                  -- 申请单数        
,0 AS new_pass_cnt                 -- 通过单数                  
,0 AS new_sign_cnt                 -- 签约单数                 
,0 AS new_output_cnt               -- 放款单数 确定逻辑 是否是有放款日期就判断为 1     TDCDXW2016052603004 放款日期为空？？       
,0 AS new_output_amt               -- 放款金额        
,CASE WHEN DATE_FORMAT(tt.full_issue_date,'%Y%m%d')='47121231' THEN 0 ELSE 1 END  AS extension_cnt                -- 续贷单数  有放款日期就为展期单？？    
,IFNULL(tt.borrow_money,0) AS extension_amount             -- 续贷金额        
FROM DMB_OPR_DATA.dmb_opr_xd_business_stat_sum t
INNER JOIN dws_agr_xd_issue_business_tmp01 tt
ON t.business_id = tt.business_id
WHERE t.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND t.is_extension =1                        -- 展期数据
AND tt.full_issue_date &lt;&gt; DATE '4712-12-31' -- 排除放款日期为空的数据
 ; 
/*将申请、通过、签约等数据插入到表中 end*/

 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','2:将申请、通过、签约等数据插入到表中', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 

/*根据业务单号和业务日期 汇总数据 begin*/
DROP TEMPORARY TABLE IF EXISTS dma_ceo_rpt_business_sum_tmp2;
CREATE TEMPORARY TABLE `dma_ceo_rpt_business_sum_tmp2` (
  `business_id` varchar(50) DEFAULT NULL COMMENT '业务编号',
  `data_dt` varchar(8) DEFAULT NULL COMMENT '申请日期',
  `new_apl_cnt` int(10) DEFAULT NULL,
  `new_pass_cnt` int(10) DEFAULT NULL,
  `new_sign_cnt` int(10) DEFAULT NULL,
  `new_output_cnt` int(10) DEFAULT NULL,
  `new_output_amt` decimal(15,0) DEFAULT NULL,
  `extension_cnt` int(10) DEFAULT NULL,
  `extension_amount` decimal(15,0) DEFAULT NULL,
  index dma_ceo_rpt_business_sum_tmp2_business_id(business_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;

insert into dma_ceo_rpt_business_sum_tmp2 
SELECT 
 business_id                 
,data_dt                     -- 申请日期      
,SUM(new_apl_cnt) AS  new_apl_cnt                 -- 申请单数        
,SUM(new_pass_cnt) AS  new_pass_cnt               -- 通过单数                  
,SUM(new_sign_cnt) AS new_sign_cnt                 -- 签约单数                 
,SUM(new_output_cnt) AS   new_output_cnt             -- 放款单数               
,SUM(new_output_amt) AS new_output_amt               -- 放款金额        
,SUM(extension_cnt) AS extension_cnt                -- 续贷单数        
,SUM(extension_amount) AS extension_amount             -- 续贷金额   
 FROM dma_ceo_rpt_business_sum_tmp1 t
GROUP BY 
 business_id                  
,data_dt;
/*根据业务单号和业务日期 汇总数据 end*/

 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','3:根据业务单号和业务日期 汇总数据', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 

/*粒度到业务单号和业务日期明细数据，加上其他维度信息 begin*/

--  将该表落地方便后面使用
truncate table DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_fsd;
insert into DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_fsd 
SELECT 
 DATE_FORMAT('${pt_day}','%Y-%m-%d')   AS  stat_dt                 -- 统计日期 
,DATE_FORMAT(ifnull(t.data_dt,'4712-12-31'),'%Y-%m-%d') as data_dt
,t.business_id      
,tt.area_nm                      -- 片区            
,tt.branch_nm                    -- 分公司   
,CASE WHEN tt.business_type IN ('T600','房速贷标准件','房速贷非标准件') THEN '房速贷' 
      WHEN tt.business_type IN ('T500','车易贷') THEN '车易贷' END   AS business_type_nm                     # 业务类型  
,case when  tt.business_type IN ('T600','房速贷标准件','房速贷非标准件') and aft.car_business_id is not null then '信用加成类型' 
      when  tt.business_type IN ('T600','房速贷标准件','房速贷非标准件') and aft.car_business_id is  null then '纯抵押类型'
	else '其他'
end as product_type      -- 产品类型 新增字段	  
,t.new_apl_cnt                  -- 申请单数        
,t.new_pass_cnt                 -- 通过单数                 
,t.new_sign_cnt                 -- 签约单数              
,t.new_output_cnt               -- 放款单数               
,t.new_output_amt               -- 放款金额        
,t.extension_cnt                -- 续贷单数        
,t.extension_amount             -- 续贷金额   
, 'tuandai_bm' AS dw_src_sys
, 'dmb_opr_xd_business_stat_sum,dws_agr_xd_business,tb_department_ods' AS dw_src_tbl
, CURRENT_TIMESTAMP AS dw_ins_tm
, CURRENT_TIMESTAMP AS dw_upd_tm
, 'caihl' AS dw_ins_usr
, 'caihl' AS dw_upd_usr     
 FROM dma_ceo_rpt_business_sum_tmp2 t
INNER JOIN 
(SELECT 
tt.business_id,
dep1.dept_name AS area_nm,
dep2.dept_name AS branch_nm,
tt.business_type
FROM DWS_DATA.dws_agr_xd_business tt
LEFT JOIN
  (
  SELECT a1.DEPT_ID,dept_name
  FROM ODS_XD_TUANDAI_BM.tb_department_ods a1
  WHERE a1.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')   -- 报表按小时跑批，部门表按天跑
  ) dep1 ON tt.area_id = dep1.DEPT_ID 
  LEFT JOIN 
  (
  SELECT a1.DEPT_ID,dept_name
  FROM ODS_XD_TUANDAI_BM.tb_department_ods a1
  WHERE a1.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')  
  ) dep2  ON tt.branch_id = dep2.DEPT_ID 
WHERE  tt.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
AND  tt.business_type IN ('T600','房速贷标准件','房速贷非标准件','T500','车易贷')
) tt
ON t.`business_id` = tt.`business_id`
left join tb_car_business_after_ods_tmp aft
on t.business_id = aft.car_business_id
;
/*粒度到业务单号和业务日期明细数据，加上其他维度信息 end*/

 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','4:粒度到业务单号和业务日期明细数据，加上其他维度信息', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 

-- truncate table DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_his  ;
INSERT INTO DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_his  
(
 stat_dt                       -- 统计日期
,data_dt        
,area_nm                      -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type        
,new_apl_cnt                  -- 申请单数        
,new_pass_cnt                 -- 通过单数        
,new_pass_cnt_pct             -- 通过率          
,new_sign_cnt                 -- 签约单数        
,new_sign_cnt_pct             -- 签约率          
,new_output_cnt               -- 放款单数        
,new_output_cnt_pct           -- 放款率          
,new_output_amt               -- 放款金额        
,extension_cnt                -- 续贷单数        
,extension_cnt_pct            -- 续贷比例（单数）
,extension_amount             -- 续贷金额        
,extension_amount_pct         -- 续贷比例（金额）
,dw_src_sys
,dw_src_tbl
,dw_ins_tm
,dw_upd_tm
,dw_ins_usr
,dw_upd_usr
,part_dt
)
 SELECT 
 stat_dt                 -- 统计日期 
,DATE_FORMAT(IFNULL(t.data_dt,'4712-12-31'),'%Y-%m-%d') AS data_dt
,IFNULL(t.area_nm,'未知') AS area_nm                      -- 片区            
,IFNULL(t.branch_nm,'未知') AS   branch_nm                 -- 分公司   
,IFNULL(t.business_type_nm,'未知')                     # 业务类型  
,t.product_type           
,SUM(new_apl_cnt) AS  new_apl_cnt                 -- 申请单数        
,SUM(new_pass_cnt) AS  new_pass_cnt               -- 通过单数 
,CASE WHEN SUM(new_apl_cnt) =0 THEN 0 ELSE CAST(SUM(new_pass_cnt)/SUM(new_apl_cnt) AS DECIMAL(10,4)) END AS new_pass_cnt_pct             -- 通过率   通过单数/申请单数               
,SUM(new_sign_cnt) AS new_sign_cnt                 -- 签约单数  
,CASE WHEN SUM(new_pass_cnt)=0 THEN 0 ELSE CAST(SUM(new_sign_cnt)/SUM(new_pass_cnt) AS DECIMAL(10,4)) END AS new_sign_cnt_pct             -- 签约率   签约单数/通过单数               
,SUM(new_output_cnt) AS   new_output_cnt             -- 新增业务单数   
,CASE WHEN SUM(new_pass_cnt) =0 THEN 0 ELSE CAST(SUM(new_output_cnt)/SUM(new_pass_cnt) AS DECIMAL(10,4)) END AS new_output_cnt_pct           -- 放款率 放款单数/通过单数            
,SUM(new_output_amt) AS new_output_amt               -- 新增放款金额        
,SUM(extension_cnt) AS extension_cnt                -- 续贷单数
,case when sum(new_output_cnt) =0 then 0 else cast(SUM(extension_cnt)/SUM(new_output_cnt) AS DECIMAL(10,4)) end as  extension_cnt_pct            -- 续贷比例（单数）展期单数/应还单数   extension_cnt/new_output_cnt     
,SUM(extension_amount) AS extension_amount             -- 续贷金额 
,CASE WHEN SUM(new_output_amt) =0 THEN 0 ELSE cast(SUM(extension_amount)/sum(new_output_amt) AS DECIMAL(10,4)) end as extension_amount_pct         -- 续贷比例（金额） 展期本金/原业务本金 extension_amount/new_output_amt
, 'tuandai_bm' AS dw_src_sys
, 'dmb_opr_xd_business_stat_sum,dws_agr_xd_business,tb_department_ods' AS dw_src_tbl
, CURRENT_TIMESTAMP AS dw_ins_tm
, CURRENT_TIMESTAMP AS dw_upd_tm
, 'caihl' AS dw_ins_usr
, 'caihl' AS dw_upd_usr
, DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt	     --	分区日期
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_fsd t
GROUP BY 
 IFNULL(t.data_dt,'4712-12-31')
,IFNULL(t.area_nm,'未知')                     -- 片区            
,IFNULL(t.branch_nm,'未知')                   -- 分公司   
,t.business_type_nm                     # 业务类型  
,t.product_type
;
 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','5:将房车数据插入到his表', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 



/*part2: 一点数据加工begin*/

/*一点步骤1：获取满标金额，由于一点上标业务单号存在() 对这些数据处理 begin*/
DROP TEMPORARY TABLE IF EXISTS `dws_agr_xd_issue_business_yidian_tmp`;
 CREATE TEMPORARY TABLE `dws_agr_xd_issue_business_yidian_tmp` (
	`is_issue` VARCHAR(1) NOT NULL DEFAULT '',
	`business_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务单号',
     borrow_money DECIMAL(12,2) NULL DEFAULT NULL COMMENT '借款金额',
	`full_issue_date` DATETIME NULL DEFAULT NULL,
	INDEX `idx_business_id` (`business_id`)
)
COLLATE='utf8_general_ci'
ENGINE=INNODB
;

 INSERT INTO dws_agr_xd_issue_business_yidian_tmp   
  SELECT '1' AS is_issue
  ,(CASE WHEN t.business_id LIKE '%(%' THEN SUBSTR(t.`business_id`,1,POSITION('(' IN t.`business_id`)-1)
     ELSE t.business_id END) AS business_id
  ,SUM(IFNULL(full_borrow_money,0)) AS borrow_money
  ,MIN(IFNULL(t.full_issue_date,'4712-12-31')) AS full_issue_date  
  FROM DWS_DATA.dws_agr_xd_issue_business t
WHERE  part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND IFNULL(t.full_issue_date,'')!='' -- add by caihl 
GROUP BY 
(CASE WHEN t.business_id LIKE '%(%' THEN SUBSTR(t.`business_id`,1,POSITION('(' IN t.`business_id`)-1)
     ELSE t.business_id END)
;
/*一点步骤1：获取满标金额，由于一点上标业务单号存在() 对这些数据处理 begin*/

 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','6:获取满标金额', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );

/*一点步骤2：一点车贷目前只能获取放款单数 放款金额 begin*/
DROP TEMPORARY TABLE IF EXISTS `tb_yidian_business_information_tmp`;
CREATE TEMPORARY TABLE `tb_yidian_business_information_tmp` (
  `data_dt` varchar(10) DEFAULT NULL,
  `business_id` varchar(50) NOT NULL DEFAULT '' COMMENT '业务单号 ',
  `area_nm` varchar(50) DEFAULT NULL COMMENT '业务区域，例如，华南',
  `branch_nm` varchar(50) DEFAULT NULL COMMENT '业务所属分公司名',
  `business_type_nm` varchar(50) NOT NULL DEFAULT '',
  `product_type` varchar(50) DEFAULT NULL,
  `new_apl_cnt` int(10) NOT NULL DEFAULT '0',
  `new_pass_cnt` int(10) NOT NULL DEFAULT '0',
  `new_sign_cnt` int(10) NOT NULL DEFAULT '0',
  `new_output_cnt` int(10) NOT NULL DEFAULT '0',
  `new_output_amt` decimal(15,2) NOT NULL DEFAULT '0.00',
  `extension_cnt` int(10) NOT NULL DEFAULT '0',
  `extension_amount` decimal(15,2) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;


insert into tb_yidian_business_information_tmp 
  SELECT
 ifnull(DATE_FORMAT(b.full_issue_date,'%Y-%m-%d') ,'4712-12-31')  AS data_dt  -- 放款时间
,a.business_id         AS business_id                     -- 业务单号  
,IFNULL(a.business_area,'一点车贷')        AS area_nm                        -- 业务区域  
,IFNULL(a.branch_name,'未知')         AS branch_nm                      -- 分公司     
,'一点车贷'            AS business_type_nm               -- 业务类型 
,NULL AS product_type                                    -- 产品类型 新增字段
,0 AS new_apl_cnt                  -- 申请单数        
,0 AS new_pass_cnt                 -- 通过单数                  
,0 AS new_sign_cnt                 -- 签约单数                 
,1 AS new_output_cnt               -- 放款单数                 
,IFNULL(a.`borrow_money`,0) AS new_output_amt               -- 放款金额        
,0 AS extension_cnt                -- 续贷单数        
,0 AS extension_amount             -- 续贷金额        
FROM ODS_XD_TUANDAI_BM.tb_yidian_business_information_ods a
LEFT JOIN dws_agr_xd_issue_business_yidian_tmp b
ON a.`business_id` = b.business_id
WHERE a.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d') 
;
 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','7:将一点明细数据插入到临时表', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );

/*一点步骤2：一点车贷目前只能获取放款单数 放款金额 end*/
INSERT INTO DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_his  
(
 stat_dt                       -- 统计日期
,data_dt        
,area_nm                      -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type        
,new_apl_cnt                  -- 申请单数        
,new_pass_cnt                 -- 通过单数        
,new_pass_cnt_pct             -- 通过率          
,new_sign_cnt                 -- 签约单数        
,new_sign_cnt_pct             -- 签约率          
,new_output_cnt               -- 放款单数        
,new_output_cnt_pct           -- 放款率          
,new_output_amt               -- 放款金额        
,extension_cnt                -- 续贷单数        
,extension_cnt_pct            -- 续贷比例（单数）
,extension_amount             -- 续贷金额        
,extension_amount_pct         -- 续贷比例（金额）
,dw_src_sys
,dw_src_tbl
,dw_ins_tm
,dw_upd_tm
,dw_ins_usr
,dw_upd_usr
,part_dt
)
 SELECT 
DATE_FORMAT('${pt_day}','%Y-%m-%d')  as  stat_dt                 -- 统计日期
,data_dt  
,area_nm                 -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type        
,0 as new_apl_cnt                  -- 申请单数        
,0 as new_pass_cnt                 -- 通过单数        
,0 as new_pass_cnt_pct             -- 通过率          
,0 as new_sign_cnt                 -- 签约单数        
,0 as new_sign_cnt_pct             -- 签约率          
,sum(new_output_cnt) as new_output_cnt               -- 放款单数        
,0 as new_output_cnt_pct           -- 放款率          
,sum(new_output_amt) as new_output_amt               -- 放款金额        
,0 as extension_cnt                -- 续贷单数        
,0 as extension_cnt_pct            -- 续贷比例（单数）
,0 as extension_amount             -- 续贷金额        
,0 as extension_amount_pct         -- 续贷比例（金额）
, 'tuandai_bm' AS dw_src_sys
, 'tb_yidian_business_information_ods,dws_agr_xd_issue_business' AS dw_src_tbl
, CURRENT_TIMESTAMP AS dw_ins_tm
, CURRENT_TIMESTAMP AS dw_upd_tm
, 'caihl' AS dw_ins_usr
, 'caihl' AS dw_upd_usr
, DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt	     --	分区日期
FROM tb_yidian_business_information_tmp t
GROUP BY 
 data_dt  
,ifnull(area_nm,'一点车贷')                      -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type 
;      
 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','8:将一点数据插入到his表', '0', '总共12步！！', 0,'${pt_day}',  NOW(),  'caihl' );
/*part2: 一点数据加工end*/




-- 从历史表中获取当天分区数据
TRUNCATE TABLE DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum;
INSERT INTO DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum
(
 stat_dt                       -- 统计日期
,data_dt        
,area_nm                      -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type        
,new_apl_cnt                  -- 申请单数        
,new_pass_cnt                 -- 通过单数        
,new_pass_cnt_pct             -- 通过率          
,new_sign_cnt                 -- 签约单数        
,new_sign_cnt_pct             -- 签约率          
,new_output_cnt               -- 放款单数        
,new_output_cnt_pct           -- 放款率          
,new_output_amt               -- 放款金额        
,extension_cnt                -- 续贷单数        
,extension_cnt_pct            -- 续贷比例（单数）
,extension_amount             -- 续贷金额        
,extension_amount_pct         -- 续贷比例（金额）
,dw_src_sys
,dw_src_tbl
,dw_ins_tm
,dw_upd_tm
,dw_ins_usr
,dw_upd_usr
)
SELECT 
 stat_dt                       -- 统计日期
,data_dt        
,area_nm                      -- 片区            
,branch_nm                    -- 分公司          
,business_type_nm             -- 业务类型
,product_type        
,ifnull(new_apl_cnt          ,0) as new_apl_cnt                  -- 申请单数        
,ifnull(new_pass_cnt         ,0) as new_pass_cnt                 -- 通过单数        
,ifnull(new_pass_cnt_pct     ,0) as new_pass_cnt_pct             -- 通过率          
,ifnull(new_sign_cnt         ,0) as new_sign_cnt                 -- 签约单数        
,ifnull(new_sign_cnt_pct     ,0) as new_sign_cnt_pct             -- 签约率          
,ifnull(new_output_cnt       ,0) as new_output_cnt               -- 放款单数        
,ifnull(new_output_cnt_pct   ,0) as new_output_cnt_pct           -- 放款率          
,ifnull(new_output_amt       ,0) as new_output_amt               -- 放款金额        
,ifnull(extension_cnt        ,0) as extension_cnt                -- 续贷单数        
,ifnull(extension_cnt_pct    ,0) as extension_cnt_pct            -- 续贷比例（单数）
,ifnull(extension_amount     ,0) as extension_amount             -- 续贷金额        
,ifnull(extension_amount_pct ,0) as extension_amount_pct         -- 续贷比例（金额）
,dw_src_sys
,dw_src_tbl
,dw_ins_tm
,dw_upd_tm
,dw_ins_usr
,dw_upd_usr
FROM DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_his
WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d');

 insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','9:将his当天数据插入目标表', '0', '总共9步！！', 0,'${pt_day}',  NOW(),  'caihl' );</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>496</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>delete_data 2</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>delete_data 2</from>
      <to>SQL_LOG 210</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>delete_data 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：ceo看板业务汇总表
创建时间：20180424
创建人   ：caihl
源系统	 ：tuandai_bm
数据源表：
房速贷 车易贷、
dmb_opr_xd_business_stat_sum,dws_agr_xd_business,tb_department_ods

运行频率：天
注意事项： 
问题发现： 
修改记录： 
20180705 caihl 将房速贷中间表落地，方便后面使用DMA_CEO_RPT_DATA.dma_ceo_rpt_business_sum_fsd
***********************
</note>
      <xloc>32</xloc>
      <yloc>16</yloc>
      <width>599</width>
      <heigth>269</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

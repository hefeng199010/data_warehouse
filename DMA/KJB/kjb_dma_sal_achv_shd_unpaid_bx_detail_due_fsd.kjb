<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_shd_unpaid_bx_detail_due_fsd</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>p_day</name>
      <default_value>20180328</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>p_duty_nm</name>
      <default_value>dma_sal_achv_shd_unpaid_bx_detail_due_fsd</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection>public_data</connection>
    <schema/>
    <table>TRANS_LOG</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>/*
不需要展示逾期利息和逾期收入
*/
SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共10步！！', 0,'${p_day}',  NOW(),  'dl' );


 DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_dh_ods_tmp;
 CREATE TEMPORARY TABLE `tb_repayment_biz_plan_list_dh_ods_tmp` (
  `orig_business_id` varchar(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  `after_id` varchar(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  `period` int(11) NOT NULL COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `src_type` int(11) DEFAULT NULL COMMENT '来源类型：1.信贷生成，2.贷后管理生成',
  `due_date` datetime NOT NULL COMMENT '应还日期',
  KEY `idx_orig_business_id_after_id` (`orig_business_id`,`after_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into tb_repayment_biz_plan_list_dh_ods_tmp
 SELECT
 tt.orig_business_id
 ,tt.after_id
 ,tt.period
 ,tt.src_type
 ,tt.due_date
 FROM ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_dh_ods tt 
WHERE tt.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d')
;


 DROP TEMPORARY TABLE IF EXISTS dws_agr_xd_dh_business_after_src_tmp;
 CREATE TEMPORARY TABLE `dws_agr_xd_dh_business_after_src_tmp` (
  `car_business_id` varchar(50) DEFAULT NULL COMMENT '[业务编号]',
  `car_business_after_id` varchar(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `period` int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `borrow_date` datetime DEFAULT NULL COMMENT '[还款日期]'
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;
insert into dws_agr_xd_dh_business_after_src_tmp
 SELECT t.car_business_id,t.car_business_after_id,tt.period,t.borrow_date
 FROM DWS_DATA.dws_agr_xd_dh_business_after t
  LEFT JOIN  tb_repayment_biz_plan_list_dh_ods_tmp tt ON t.car_business_id = tt.orig_business_id AND t.car_business_after_id = tt.after_id 
WHERE t.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
;
/* 20181218 新增period end*/  
  
DROP TEMPORARY TABLE IF EXISTS dws_agr_xd_dh_business_after_tmp;
CREATE TEMPORARY TABLE `dws_agr_xd_dh_business_after_tmp` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO dws_agr_xd_dh_business_after_tmp
SELECT 
tt.car_business_id,
MIN(tt.borrow_date) AS borrow_date
FROM  DWS_DATA.dws_agr_xd_dh_business_after tt 
WHERE tt.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  AND tt.repayed_flag=3 
GROUP BY car_business_id
;
  
/*源业务结清*/
DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp00`;
CREATE TEMPORARY TABLE `settle_date_tmp00` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO `settle_date_tmp00`
SELECT
t.car_business_id  -- 源业务编号
,MAX(t.car_business_after_id) AS max_car_business_after_id -- 结清期次
,MAX(t.borrow_date)           AS  max_borrow_date           -- 结清期对应的应还日期
,max(t.period)  as period
-- t.finance_confirmed_date,t.fatct_replayDate,t.* 
-- FROM DWS_DATA.dws_agr_xd_dh_business_after t
from dws_agr_xd_dh_business_after_src_tmp t
INNER JOIN (SELECT 
            xb.business_id
            ,xb.fin_act_settle_dt
            ,xb.fin_settle_way
            ,xb.act_settle_dt
            ,xb.settle_way
             FROM DWS_DATA.dws_agr_xd_business xb 
            WHERE xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
            -- AND xb.fin_settle_way>0  -- 财务确认结清
			AND (CASE WHEN xb.`platform_id`=2 THEN xb.`settle_way` ELSE xb.fin_settle_way END )>0    -- 你我金融的由于没有财务确认时间所以取实还结清
            ) xb ON t.car_business_id = xb.business_id
WHERE 1=1
-- and t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND EXISTS (SELECT 1 FROM dws_agr_xd_dh_business_after_tmp tt WHERE tt.`car_business_id` = t.car_business_id AND t.`borrow_date` &lt; tt.`borrow_date`)
GROUP BY t.car_business_id
;

DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp_01`;
CREATE TEMPORARY TABLE `settle_date_tmp_01` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
 /*最后一期结清*/
INSERT INTO `settle_date_tmp_01`
SELECT
t.car_business_id  -- 源业务编号
,MAX(t.car_business_after_id) AS max_car_business_after_id -- 结清期次
,MAX(t.borrow_date)           AS  max_borrow_date           -- 结清期对应的应还日期
,max(t.period)                as period
-- t.finance_confirmed_date,t.fatct_replayDate,t.* 
-- FROM DWS_DATA.dws_agr_xd_dh_business_after t
from dws_agr_xd_dh_business_after_src_tmp t
INNER JOIN (SELECT 
            xb.business_id
            ,xb.fin_act_settle_dt
            ,xb.fin_settle_way
            ,xb.act_settle_dt
            ,xb.settle_way
             FROM DWS_DATA.dws_agr_xd_business xb 
            WHERE xb.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
            AND xb.fin_settle_way>0  -- 财务确认结清
            ) xb ON t.car_business_id = xb.business_id
WHERE  1=1
-- and t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND not EXISTS (SELECT 1 FROM settle_date_tmp00 tt WHERE tt.`car_business_id` = t.car_business_id)
GROUP BY t.car_business_id
;


INSERT INTO `settle_date_tmp_01`
SELECT 
t.car_business_id  -- 源业务编号
,t.max_car_business_after_id -- 结清期次
,t.max_borrow_date           -- 结清期对应的应还日期
,t.period
FROM settle_date_tmp00 t
; 

/* 对结清单多次出款的原业务单号 取最晚的的还款计划对应的应还日期 begin*/
DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_dh_ods_tmp1;
CREATE TEMPORARY TABLE `tb_repayment_biz_plan_list_dh_ods_tmp1` (
  `orig_business_id` VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  `period` INT(11) NOT NULL COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  `due_date` DATETIME COMMENT '应还日期',
  KEY `idx_orig_business_id` (`orig_business_id`),
  KEY `idx_orig_business_id_period` (`orig_business_id`,`period`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_repayment_biz_plan_list_dh_ods_tmp1
SELECT pl.orig_business_id,pl.period,MAX(pl.due_date) AS due_date
FROM (
SELECT t.`original_business_id`,t.`xd_out_id`,t.`is_defer`,t.`plan_status`
 FROM ODS_XD_TUANDAI_BM.`tb_repayment_biz_plan_dh_ods` t
WHERE t.part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d') 
 AND t.`plan_status` IN (10,20,30)
 AND t.`is_defer`=0
 GROUP BY t.`original_business_id`
 HAVING COUNT(1)>1
 ) tt INNER JOIN tb_repayment_biz_plan_list_dh_ods_tmp pl ON  tt.original_business_id = pl.orig_business_id
 GROUP BY pl.orig_business_id,pl.period
 ;
 DROP TEMPORARY TABLE IF EXISTS `settle_date_tmp`;
CREATE TEMPORARY TABLE `settle_date_tmp` (
  `car_business_id` VARCHAR(50) DEFAULT NULL COMMENT '[业务编号]',
  `max_car_business_after_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
  `max_borrow_date` DATETIME DEFAULT NULL COMMENT '[还款日期]',
  period int(11) COMMENT '当前还款计划期数，若期数为0，表示为展期还款计划第0期或者线下出款业务的第0期',
  KEY `idx_car_business_id` (`car_business_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

insert into settle_date_tmp
  SELECT 
   t.car_business_id
  ,t.max_car_business_after_id
  ,IFNULL(tt.due_date,t.max_borrow_date)   AS max_borrow_date
  ,t.period
   FROM settle_date_tmp_01 t
  LEFT JOIN tb_repayment_biz_plan_list_dh_ods_tmp1 tt ON t.car_business_id = tt.orig_business_id AND t.period= tt.period
; 
 
/* 对结清单多次出款的原业务单号 取最晚的的还款计划对应的应还日期 end*/
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','1生成结清对应的应还日期数据', '0', '总共10步！！', 0,'${p_day}',  NOW(),  'dl' );

  drop TEMPORARY table if exists  `tb_basic_business_dh_ods_tmp`;
 CREATE TEMPORARY TABLE `tb_basic_business_dh_ods_tmp` (
  `business_id` varchar(128) NOT NULL COMMENT '资产端业务编号',
  `input_time` datetime NOT NULL COMMENT '进件日期',
  KEY `idx_business_id` (`business_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;

insert into tb_basic_business_dh_ods_tmp
SELECT 
 bb.business_id
,bb.`input_time`
FROM ODS_XD_TUANDAI_BM.tb_basic_business_dh_ods bb 
WHERE bb.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
; 
    
DROP TEMPORARY TABLE IF EXISTS dws_agr_xd_business_tmp;
CREATE TEMPORARY TABLE dws_agr_xd_business_tmp (
	BUSINESS_ID VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	business_type VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型代码',
	customer_name VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称',
	issue_type INT(11) NULL DEFAULT NULL COMMENT '发标类型0:线下放款, 1:P2p,2:定期理财',
	shd_principa_amt DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	branch_id VARCHAR(50) NULL DEFAULT NULL COMMENT '业务所属分公司编号',
	area_id VARCHAR(51) NULL DEFAULT NULL COMMENT '区域编号',
	settle_way INT(10) DEFAULT NULL COMMENT '是否提前结清',
	act_settle_dt DATE NULL DEFAULT NULL COMMENT '结清日期',
	input_time VARCHAR(10) NULL DEFAULT NULL COMMENT '业务类型',
	loan_rate DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	borrow_limit INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
	business_type_nm VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型名称',
   `settle_period_id` VARCHAR(50) DEFAULT NULL COMMENT '[当前还款期数]',
   `due_settle_dt` DATE DEFAULT NULL COMMENT '[还款日期]',
   `repay_way_nm` VARCHAR(50) DEFAULT NULL COMMENT '还款方式',
    `platform_id` tinyint(4) DEFAULT '1' COMMENT '[平台编号 1：团贷网 2：你我金融]',
KEY dws_agr_xd_business_tmp_business_id(BUSINESS_ID),
KEY dws_agr_xd_business_tmp_branch_id(branch_id),
KEY dws_agr_xd_business_tmp_area_id(area_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO dws_agr_xd_business_tmp
SELECT t2.business_id,
      t2.business_type,      -- 业务类型
	   t2.customer_name, -- 客户姓名
	   t2.issue_type,    -- 是否上标
	   t2.shd_principa_amt,
	   t2.branch_id,
	   t2.area_id,
	   CASE WHEN IFNULL(t2.fin_settle_way,-1)&lt; 0 THEN  t2.settle_way ELSE t2.fin_settle_way END AS settle_way, -- 20180815 由settle_way 改为 fin_settle_way
	    IFNULL(DATE_FORMAT(t2.fin_act_settle_dt,'%Y-%m-%d'),DATE_FORMAT(t2.act_settle_dt,'%Y-%m-%d')) act_settle_dt,
	    DATE_FORMAT(ifnull(t2.input_time,bb.input_time),'%Y-%m-%d') input_time,
	    t2.loan_rate,
	    t2.apply_borrow_limit AS  borrow_limit,
	    (CASE WHEN t2.business_type IN ('房速贷标准件','房速贷非标准件','T600') THEN '房速贷'
		  WHEN t2.business_type IN ('车易贷','T500') THEN '车易贷'
		  WHEN t2.business_type IN ('T251') THEN '优房贷'
		  WHEN t2.business_type IN ('T170','T160') THEN '小微企业信用贷'
		  ELSE t3.business_type_nm	END)  AS business_type_nm, --	业务类型 
		 st.max_car_business_after_id                 AS settle_period_id, -- 结清期次
		DATE_FORMAT(st.max_borrow_date,'%Y-%m-%d')    AS due_settle_dt,     -- 结清期对应的应还日期
		rw.repay_way_nm,
		t2.platform_id
FROM DWS_DATA.dws_agr_xd_business t2
LEFT JOIN DIM_DATA.dim_prd_xd_business_type t3 ON t2.business_type = t3.business_type
LEFT JOIN settle_date_tmp st                   ON t2.business_id   = st.car_business_id
LEFT JOIN DIM_DATA.dim_evt_xd_repay_way rw     ON t2.apply_repayment_type_id=rw.repay_way_id
left join tb_basic_business_dh_ods_tmp bb      on t2.business_id      =bb.business_id
WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
;



INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','2dws_agr_xd_business_tmp', '0', '总共10步！！', 0,'${p_day}',  NOW(),  'dl' );

  

DROP TEMPORARY TABLE IF EXISTS tb_department_ods_tmp_area;
CREATE TEMPORARY TABLE tb_department_ods_tmp_area (
		DEPT_ID VARCHAR(50) NOT NULL COMMENT '部门编号',
	DEPT_NAME VARCHAR(50) NULL DEFAULT NULL COMMENT '部门名称',
KEY tb_department_ods_tmp_area_DEPT_ID(DEPT_ID)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

INSERT INTO   tb_department_ods_tmp_area 
SELECT DISTINCT dept_id,
	   dept_name
FROM  ODS_XD_TUANDAI_BM.tb_department_ods a
 WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;
 
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','3tb_department_ods_tmp_area', '600', '获取分区信息', 0,'${p_day}',  NOW(),  'caihl' );	
  
  
DROP TEMPORARY TABLE IF EXISTS tb_department_ods_tmp_branch;
CREATE TEMPORARY TABLE tb_department_ods_tmp_branch (
		DEPT_ID VARCHAR(50) NOT NULL COMMENT '部门编号',
	DEPT_NAME VARCHAR(50) NULL DEFAULT NULL COMMENT '部门名称',
KEY tb_department_ods_tmp_branch_DEPT_ID(DEPT_ID)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

INSERT INTO   tb_department_ods_tmp_branch 
SELECT DISTINCT dept_id,
	   dept_name
FROM  ODS_XD_TUANDAI_BM.tb_department_ods a
 WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','4tb_department_ods_tmp_branch', '700', '获取分公司信息', 0,'${p_day}',  NOW(),  'caihl' );	


		
DROP TEMPORARY TABLE IF EXISTS out_date_tmp;
CREATE TEMPORARY TABLE out_date_tmp (
	business_id VARCHAR(50) NOT NULL COMMENT '[业务编号]',
	out_date DATETIME NULL DEFAULT NULL COMMENT '[合并还款计划时间]',
KEY tb_output_list_tmp03_business_id(business_id)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO out_date_tmp
SELECT t3.business_id,MIN(out_date) out_date
FROM DWS_DATA.dws_evt_xd_output_list t3
WHERE t3.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
  AND t3.out_date >= '2016-03-11'
  AND t3.is_issue = '0'
GROUP BY t3.business_id;

INSERT INTO out_date_tmp
SELECT a.BUSINESS_ID,
	   MIN(a.full_issue_date) out_date
FROM DWS_DATA.dws_agr_xd_issue_business a
WHERE a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
AND IFNULL(a.full_issue_date,'') != ''
GROUP BY a.BUSINESS_ID;



INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','5out_date_tmp', '300', '从出款明细表生成各业务最小出款日期', 0,'${p_day}',  NOW(),  'dl' );	
    

/*part1:贷后费用加工*/
DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_detail_dh_ods_tmp; 
CREATE TEMPORARY TABLE tb_repayment_biz_plan_list_detail_dh_ods_tmp (
  real_business_id VARCHAR(50) NOT NULL COMMENT '还款计划所属业务ID(若当前业务为展期，则存展期业务编号)',
  business_id VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  business_after_id VARCHAR(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  plan_item_name VARCHAR(500) NOT NULL COMMENT '应还项目名称',
  plan_item_type INT(11) NOT NULL COMMENT '应还项目所属分类，10：本金，20：利息，25：利差， 30：资产端分公司服务费，40：担保公司费用，50：资金端平台服务费，60：滞纳金，70：违约金，80：中介费，90：押金类费用，100：冲应收,110：返点（返点都是不线上分账的）',
  plan_fee_value DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  actual_fee_value DECIMAL(18,4) NOT NULL DEFAULT '0.0000'
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_repayment_biz_plan_list_detail_dh_ods_tmp
SELECT 
t1.business_id AS real_business_id, 
t2.orig_business_id AS business_id, -- 源业务编号
t2.after_id AS business_after_id  ,
t1.plan_item_name,
t1.plan_item_type, 
IFNULL(t1.plan_amount,0) AS plan_fee_value,
IFNULL(t1.fact_amount,0) AS actual_fee_value
FROM (SELECT t1.plan_list_id,
             t1.business_id,
	     t1.plan_item_name,
             t1.plan_amount,
	     t1.due_date,
	     t1.fact_amount,
	     t1.plan_item_type,
	     t1.period
	 FROM ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_detail_dh_ods t1 
	 WHERE part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') 
	 ) t1
JOIN (SELECT t2.plan_list_id,
             t2.after_id,
             t2.orig_business_id
		FROM ODS_XD_TUANDAI_BM.tb_repayment_biz_plan_list_dh_ods t2 
		WHERE part_dt =  DATE_FORMAT('${pt_day}','%Y-%m-%d') 
		) t2 ON t1.plan_list_id = t2.plan_list_id
;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','6tb_repayment_biz_plan_list_detail_dh_ods_tmp', '1000', 'tb_repayment_biz_plan_list_detail_dh_ods_tmp', 0,'${p_day}',  NOW(),  'dl' );	   
  
/*
本期实收滞纳金：取“还款计划实还”字段“线下滞纳金+线上滞纳金+滞纳金”
本期实还分公司月服务费 :
分公司费用(非00期)+  分公司服务费(非00期) + LIKE  '%分公司服务费%'(剔除掉 分公司服务费 提前结清分公司服务费违约金) + 展期未结清的分公司费用 + 展期未结清服务费 + 服务费 + 期末未结清服务费

本期实还平台月服务费：取还款计划实还字段：月收平台费 + 团贷网平台费用
（注：团贷网平台费用 取扣除掉00期的平台费）
平台月服务费: LIKE '%月收平台%' + 团贷网平台费用(非00期) + 展期未结清的团贷网平台费用

*/
DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_detail_dh_ods_tmp1; 
CREATE TEMPORARY TABLE tb_repayment_biz_plan_list_detail_dh_ods_tmp1 (
  real_business_id VARCHAR(50) NOT NULL COMMENT '还款计划所属业务ID(若当前业务为展期，则存展期业务编号)',
  business_id VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  business_after_id VARCHAR(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  plan_item_name VARCHAR(500) NOT NULL COMMENT '应还项目名称',
  plan_item_type INT(11) NOT NULL COMMENT '应还项目所属分类，10：本金，20：利息，25：利差， 30：资产端分公司服务费，40：担保公司费用，50：资金端平台服务费，60：滞纳金，70：违约金，80：中介费，90：押金类费用，100：冲应收,110：返点（返点都是不线上分账的）',
  plan_fee_value DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  actual_fee_value DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  shd_principa_amt DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  shd_interest_fee DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  shd_late_fee DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  shd_branch_fee DECIMAL(18,4) NOT NULL DEFAULT 0.0000,
  shd_plat_fee DECIMAL(18,4) NOT NULL DEFAULT 0.0000,
  act_principa_amt DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  act_interest_fee DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  act_late_fee DECIMAL(18,4) NOT NULL DEFAULT '0.0000',
  act_branch_fee DECIMAL(18,4) NOT NULL DEFAULT 0.0000,
  act_plat_fee DECIMAL(18,4) NOT NULL DEFAULT 0.0000
) ENGINE=INNODB DEFAULT CHARSET=utf8
;


INSERT INTO tb_repayment_biz_plan_list_detail_dh_ods_tmp1
SELECT 
 t.real_business_id
,t.business_id -- 源业务编号
,t.business_after_id  
,t.plan_item_name
,t.plan_item_type
,t.plan_fee_value
,t.actual_fee_value
,(CASE WHEN t.plan_item_name='本金' THEN t.plan_fee_value ELSE 0 END)   AS shd_principa_amt
,(CASE WHEN t.plan_item_name='利息' THEN t.plan_fee_value ELSE 0 END)   AS shd_interest_fee
,(CASE WHEN t.plan_item_name IN ('线下滞纳金','线上滞纳金','滞纳金') THEN t.plan_fee_value ELSE 0 END)   AS shd_late_fee  -- 滞纳金
,(CASE WHEN ((t.plan_item_name='分公司费用' AND t.business_after_id NOT LIKE '%00%') OR (t.plan_item_name='分公司服务费' AND t.business_after_id NOT LIKE '%00%')
         OR (t.plan_item_name LIKE '%分公司服务费%' AND t.plan_item_name NOT IN ('分公司服务费','提前结清分公司服务费违约金')) 
         OR (t.plan_item_name IN ('展期未结清的分公司费用','展期未结清服务费','服务费','期末未结清服务费')))   
 THEN t.plan_fee_value ELSE 0 END)   AS shd_branch_fee  -- 分公司月服务费
 ,(CASE WHEN (t.plan_item_name LIKE '%月收平台%' OR (t.plan_item_name='团贷网平台费用' AND t.business_after_id NOT LIKE '%00%') OR t.plan_item_name='展期未结清的团贷网平台费用') THEN t.plan_fee_value ELSE 0 END)   AS shd_plat_fee  -- 平台月服务费

,(CASE WHEN t.plan_item_name='本金' THEN t.actual_fee_value ELSE 0 END)   AS act_principa_amt
,(CASE WHEN t.plan_item_name='利息' THEN t.actual_fee_value ELSE 0 END)   AS act_interest_fee
,(CASE WHEN t.plan_item_name IN ('线下滞纳金','线上滞纳金','滞纳金') THEN t.actual_fee_value ELSE 0 END)   AS act_late_fee  -- 滞纳金
,(CASE WHEN (t.plan_item_name='分公司费用' AND t.business_after_id NOT LIKE '%00%') OR (t.plan_item_name='分公司服务费' AND t.business_after_id NOT LIKE '%00%')
         OR (t.plan_item_name LIKE '%分公司服务费%' AND t.plan_item_name NOT IN ('分公司服务费','提前结清分公司服务费违约金')) 
         OR (t.plan_item_name IN ('展期未结清的分公司费用','展期未结清服务费','服务费','期末未结清服务费'))   
 THEN t.actual_fee_value ELSE 0 END)   AS act_branch_fee  -- 分公司月服务费
 ,(CASE WHEN (t.plan_item_name LIKE '%月收平台%' OR (t.plan_item_name='团贷网平台费用' AND t.business_after_id NOT LIKE '%00%') OR t.plan_item_name='展期未结清的团贷网平台费用') THEN t.actual_fee_value ELSE 0 END)   AS act_plat_fee  -- 平台月服务费
FROM 
tb_repayment_biz_plan_list_detail_dh_ods_tmp t
WHERE ABS(t.plan_fee_value)+ ABS(t.actual_fee_value)>0
;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','7tb_repayment_biz_plan_list_detail_dh_ods_tmp1', '1000', 'tb_repayment_biz_plan_list_detail_dh_ods_tmp1', 0,'${p_day}',  NOW(),  'dl' );	   
  



DROP TEMPORARY TABLE IF EXISTS tb_repayment_biz_plan_list_detail_dh_ods_tmp2; 
CREATE TEMPORARY TABLE tb_repayment_biz_plan_list_detail_dh_ods_tmp2 (
  ext_business_id VARCHAR(50) NOT NULL COMMENT '还款计划所属业务ID(若当前业务为展期，则存展期业务编号)',
  business_id VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  business_after_id VARCHAR(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  shd_principa_amt DECIMAL(40,4) DEFAULT 0.00,
  shd_interest_fee DECIMAL(40,4) DEFAULT 0.00,
  shd_late_fee DECIMAL(40,4) DEFAULT 0.00,
  shd_branch_fee DECIMAL(40,4) DEFAULT 0.00,
  shd_plat_fee DECIMAL(40,4) DEFAULT 0.00,
  act_principa_amt DECIMAL(40,4) DEFAULT 0.00,
  act_interest_fee DECIMAL(40,4) DEFAULT 0.00,
  act_late_fee DECIMAL(40,4) DEFAULT 0.00,
  act_branch_fee DECIMAL(40,4) DEFAULT 0.00,
  act_plat_fee DECIMAL(40,4) DEFAULT 0.00,
  KEY idx_business_id (business_id),
  KEY idx_business_id_business_after_id (business_id,business_after_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO tb_repayment_biz_plan_list_detail_dh_ods_tmp2
SELECT 
 t.real_business_id  AS ext_business_id -- 如果是展期就显示展期业务编号，否则就是非展期业务编号
,t.business_id                          -- 源业务单号
,t.business_after_id  
,SUM(t.shd_principa_amt )  AS  shd_principa_amt
,SUM(t.shd_interest_fee )  AS  shd_interest_fee
,SUM(t.shd_late_fee     )  AS  shd_late_fee    
,SUM(t.shd_branch_fee   )  AS  shd_branch_fee  
,SUM(t.shd_plat_fee     )  AS  shd_plat_fee    
,SUM(t.act_principa_amt )  AS  act_principa_amt
,SUM(t.act_interest_fee )  AS  act_interest_fee
,SUM(t.act_late_fee     )  AS  act_late_fee    
,SUM(t.act_branch_fee   )  AS  act_branch_fee  
,SUM(t.act_plat_fee     )  AS  act_plat_fee    
FROM tb_repayment_biz_plan_list_detail_dh_ods_tmp1 t
WHERE    
ABS(t.shd_principa_amt ) +  
ABS(t.shd_interest_fee ) +  
ABS(t.shd_late_fee     ) +  
ABS(t.shd_branch_fee   ) +  
ABS(t.shd_plat_fee     ) +  
ABS(t.act_principa_amt ) +  
ABS(t.act_interest_fee ) +  
ABS(t.act_late_fee     ) +  
ABS(t.act_branch_fee   ) +  
ABS(t.act_plat_fee     ) >0
GROUP BY 
 t.real_business_id   
,t.business_id        
,t.business_after_id 
;  
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','8tb_repayment_biz_plan_list_detail_dh_ods_tmp2', '1000', 'tb_repayment_biz_plan_list_detail_dh_ods_tmp2', 0,'${p_day}',  NOW(),  'dl' );	   
  

/*修改是否结清的判断*/
DROP TEMPORARY TABLE IF EXISTS dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp;
CREATE TEMPORARY TABLE dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp (
  stat_dt VARCHAR(8) DEFAULT NULL,
  data_dt VARCHAR(10) DEFAULT NULL,
  business_id VARCHAR(50) DEFAULT NULL COMMENT '还款计划所属原业务编号',
  ext_business_id VARCHAR(50) DEFAULT NULL COMMENT '展期显示展期否则显示原业务单号',
  area_nm VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  branch_nm VARCHAR(50) DEFAULT NULL COMMENT '部门名称',
  business_type_nm VARCHAR(50) DEFAULT NULL COMMENT '业务类型名称',
  out_dt  VARCHAR(10) DEFAULT NULL COMMENT '[合并还款计划时间]',
  customer_nm VARCHAR(50) DEFAULT NULL COMMENT '客户名称',
  is_issue VARCHAR(1) DEFAULT NULL,
  is_settled_before VARCHAR(1) DEFAULT NULL,
  is_settled VARCHAR(1) DEFAULT NULL,
  repayed_type INT(11) DEFAULT NULL COMMENT '[已还款类型]0:还款中1:财务确认已还款 2:自动匹配已还款 3:财务确认全部结清,4:财务代扣已还款,5:自动代扣已还款,6:标识展期已还款,7:当期部分已还款,8:用户APP主动还款,9:代扣全部结清',
  loan_rate DECIMAL(10,4) DEFAULT NULL COMMENT '年化利率',
  borrow_limit INT(11) DEFAULT NULL COMMENT '申请借款期限',
  total_borrow_amt DECIMAL(12,2) NOT NULL DEFAULT '0.00',
  shd_principa_amt DECIMAL(40,4) DEFAULT '0.0000',
  shd_interest_fee DECIMAL(40,4) DEFAULT NULL,
  act_principa_amt DECIMAL(40,4) DEFAULT '0.0000',
  act_interest_fee DECIMAL(40,4) DEFAULT '0.0000',
  act_ovt_interest_fee INT(1) NOT NULL DEFAULT '0.00',
  act_late_fee DECIMAL(40,4) DEFAULT '0.0000',
  act_ovt_income_fee INT(1) NOT NULL DEFAULT '0.00',
  shd_late_fee DECIMAL(40,4) DEFAULT '0.0000',
  shd_branch_fee DECIMAL(40,4) DEFAULT 0.00,
  shd_plat_fee DECIMAL(40,4) DEFAULT 0.00,
  act_branch_fee DECIMAL(40,4) DEFAULT '0.0000',
  act_plat_fee DECIMAL(40,4) DEFAULT '0.0000',
  `due_settle_dt` DATE DEFAULT NULL COMMENT '[还款日期]',
  `repay_way_nm` VARCHAR(50) DEFAULT NULL COMMENT '还款方式',
  `platform_id` tinyint(4) DEFAULT '1' COMMENT '[平台编号 1：团贷网 2：你我金融]',
  KEY idx_business_id(business_id),
  KEY idx_ext_business_id(ext_business_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
/*
caihl20181215 你我金融由于月收分公司服务费和月收平台费 结清之后(repayed_type=3)还会继续收取，所以需要特殊判断

*/	  
INSERT INTO dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp 
SELECT
 DATE_FORMAT('${pt_day}','%Y%m%d')  AS stat_dt	-- 统计日期
,t2.borrow_date   AS data_dt
,t1.business_id     -- 业务单号
,t1.ext_business_id -- 展期显示展期否则显示原业务单号
,t4.dept_name	  AS area_nm--	片区
,t5.dept_name	  AS branch_nm--	分公司
,xb.business_type_nm   --	业务类型
,(CASE WHEN od.out_date IS NULL THEN xb.input_time ELSE DATE_FORMAT(od.out_date,'%Y-%m-%d') END) AS out_dt-- 出款日期  对于出款时间为空则取进件时间
,xb.customer_name AS customer_nm-- 客户姓名
-- ,t1.is_issue-- 是否上标
,CASE WHEN IFNULL(xb.issue_type,0) = 1 THEN '是'  WHEN IFNULL(xb.issue_type,0) &lt;&gt; 1 THEN '否' END AS is_issue  -- 是否上标
-- ,t1.is_settled-- 是否结清
-- ,case when IFNULL(xb.settle_way,-1) >= 0 and xb.act_settle_dt &lt;= t1.data_dt then '1'  else '0'  end as is_settled -- 是否结清1 已结清，0 未结清
,CASE WHEN IFNULL(xb.settle_way,-1) >= 0 AND xb.act_settle_dt &lt;= t2.borrow_date THEN '1'  ELSE '0'  END AS is_settled_before -- 是否结清1 已结清，0 未结清
,CASE WHEN IFNULL(xb.settle_way,-1) >= 0 AND xb.due_settle_dt &lt;= t2.borrow_date THEN '1'  ELSE '0'  END AS is_settled -- 是否结清1 已结清，0 未结清 xb.settle_way优先取财务结清
,t2.repayed_type
,xb.loan_rate
,xb.borrow_limit
,IFNULL(xb.shd_principa_amt,0) AS total_borrow_amt
,t1.shd_principa_amt 
-- ,CASE WHEN IFNULL(t2.repayed_type,0) &lt;&gt; 3 THEN t1.shd_interest_fee ELSE 0 END AS shd_interest_fee
,CASE WHEN xb.due_settle_dt is not null and t2.borrow_date &lt;= xb.due_settle_dt THEN t1.shd_interest_fee  
      when xb.due_settle_dt is  null                                           then t1.shd_interest_fee  ELSE 0 END AS shd_interest_fee  -- 多次出款结清状态不同，取最晚的还款计划的应还日期
,t1.act_principa_amt   
,t1.act_interest_fee    
,0 AS act_ovt_interest_fee
,t1.act_late_fee    
,0 AS act_ovt_income_fee 
,t1.shd_late_fee
-- ,(CASE WHEN xb.platform_id =2 then t1.shd_branch_fee when IFNULL(t2.repayed_type,0) &lt;&gt; 3 THEN t1.shd_branch_fee ELSE 0 END) AS shd_branch_fee   -- 你我金融的单不需要判断结清期
-- ,CASE WHEN IFNULL(t2.repayed_type,0) &lt;&gt; 3 THEN t1.shd_plat_fee ELSE 0 END AS shd_plat_fee
,(CASE WHEN xb.platform_id =2 then t1.shd_branch_fee 
       when ifnull(xb.platform_id,1)  &lt;&gt; 2 and  xb.due_settle_dt is not null and t2.borrow_date &lt;= xb.due_settle_dt THEN t1.shd_branch_fee 
	   when ifnull(xb.platform_id,1)  &lt;&gt; 2 and  xb.due_settle_dt is     null                                        THEN t1.shd_branch_fee
	   ELSE 0 END) AS shd_branch_fee   -- 1.你我金融的单不需要判断结清期 2. 多次出款结清状态不同，取最晚的还款计划的应还日期
-- ,(CASE WHEN xb.platform_id =2 then t1.shd_plat_fee   when IFNULL(t2.repayed_type,0) &lt;&gt; 3     THEN t1.shd_plat_fee   ELSE 0 END) AS shd_plat_fee -- 你我金融的单不需要判断结清期
,(CASE WHEN xb.platform_id =2 then t1.shd_plat_fee   
       when ifnull(xb.platform_id,1)  &lt;&gt; 2 and  xb.due_settle_dt is not null and t2.borrow_date &lt;= xb.due_settle_dt THEN t1.shd_plat_fee 
	   when ifnull(xb.platform_id,1)  &lt;&gt; 2 and  xb.due_settle_dt is     null                                        THEN t1.shd_plat_fee
	   ELSE 0 END) AS shd_plat_fee -- 你我金融的单不需要判断结清期
,t1.act_branch_fee
,t1.act_plat_fee
,xb.due_settle_dt  -- 结清期对应的应还日期
,xb.repay_way_nm
,xb.platform_id
FROM tb_repayment_biz_plan_list_detail_dh_ods_tmp2 t1
LEFT JOIN dws_agr_xd_business_tmp  xb ON t1.business_id = xb.business_id
/* 改为内关联排除掉最后一期需要做展期的数据*/
INNER JOIN (SELECT car_business_id,car_business_after_id,repayed_flag AS repayed_type ,DATE_FORMAT(t2.borrow_date,'%Y-%m-%d') AS borrow_date
            FROM DWS_DATA.dws_agr_xd_dh_business_after t2 
            WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
              AND IFNULL(t2.repayed_flag,0)!=6
            )t2
       ON t2.car_business_id = t1.business_id
      AND t2.car_business_after_id = t1.business_after_id
LEFT JOIN out_date_tmp od ON t1.business_id = od.business_id  
LEFT JOIN tb_department_ods_tmp_area   t4 
       ON xb.area_id = t4.dept_id
LEFT JOIN tb_department_ods_tmp_branch t5 
       ON xb.branch_id = t5.dept_id
;


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','9dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp', '1000', 'dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp', 0,'${p_day}',  NOW(),  'dl' );	   
  


-- 应收未收明细表
ALTER TABLE DMA_SAL_ACHV_DATA.dma_sal_achv_shd_unpaid_bx_detail_due_fsd TRUNCATE PARTITION dma_sal_achv_shd_unpaid_bx_detail_due_fsd_${pt_day};
INSERT INTO DMA_SAL_ACHV_DATA.dma_sal_achv_shd_unpaid_bx_detail_due_fsd 	   
SELECT t1.stat_dt	,-- 统计日期
       t1.data_dt,
	   t1.business_id ,-- 业务单号
	   t1.area_nm	  AS area_nm,--	片区
	   t1.branch_nm	  AS branch_nm,--	分公司
	   t1.business_type_nm,--	业务类型
	   t1.out_dt,          -- 出款日期
	   t1.customer_nm,     -- 客户姓名
	   t1.is_issue,        -- 是否上标
	   t1.is_settled_before,      -- 是否结清备份字段
	   t1.is_settled,             -- 是否结清
	   t1.repayed_type,
	   t1.loan_rate,
	   t1.borrow_limit,
	   t1.total_borrow_amt,
	   t1.shd_principa_amt ,
		t1.shd_interest_fee,
		t1.act_principa_amt   ,
		t1.act_interest_fee    ,
		t1.act_ovt_interest_fee,
		t1.act_late_fee    ,
	   CASE WHEN t1.is_settled ='0' THEN t1.act_interest_fee 
	        WHEN  t1.is_settled ='1' AND t1.act_ovt_interest_fee = 0 THEN t1.act_interest_fee 
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee &lt;=0 THEN t1.act_ovt_interest_fee + t1.act_interest_fee
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee >0 THEN t1.shd_interest_fee
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee >= 0 THEN t1.act_interest_fee END AS adjust_act_interest_fee,    -- 本期实还利息	
	   CASE WHEN t1.is_settled ='0' THEN 0 
	        WHEN  t1.is_settled ='1' AND t1.act_ovt_interest_fee = 0 THEN 0 
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee &lt;=0 THEN t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee >0 THEN 0
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee >= 0 THEN t1.act_interest_fee - t1.shd_interest_fee END AS interest_syjq_amt,    -- 利息损益结清
	   CASE WHEN t1.is_settled ='0' THEN 0 
	        WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee = 0 THEN 0 
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee &lt;=0 THEN 0
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee &lt; 0 AND t1.act_ovt_interest_fee + t1.act_interest_fee - t1.shd_interest_fee >0 THEN t1.shd_interest_fee - t1.act_interest_fee
			WHEN t1.is_settled ='1' AND t1.act_ovt_interest_fee > 0 AND t1.act_interest_fee - t1.shd_interest_fee >= 0 THEN t1.act_ovt_interest_fee END AS adjust_ovt_interest_fee,    -- 调整后的逾期利息
		t1.act_ovt_income_fee,
		t1.shd_late_fee    ,
		t1.shd_branch_fee,
		t1.shd_plat_fee,
		t1.act_branch_fee,
		t1.act_plat_fee,
		DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt,	--	分区日期
		'tuandai_bm'	AS	dw_src_sys	,--	来源系统
		'DWS_DATA.dws_agr_xd_issue_business..'	AS	dw_src_tbl	,--	来源表
		NOW()	AS	dw_ins_tm	,--	插入时间
		NOW()	AS	dw_upd_tm	,--	更新时间
		'dailiang'	AS	dw_ins_usr	,--	插入用户
		'dailiang'	AS	dw_upd_usr,	--	更新用户,	--	分区日期
      t1.repay_way_nm,
      t1.due_settle_dt,  -- 结清期对应的应还日期
	  t1.platform_id     -- add 20181215
FROM dma_sal_achv_shd_unpaid_bx_detail_due_fsd_tmp t1
WHERE t1.out_dt >='2016-03-11' -- 排除出款日期为'2016-03-11'之前的数据
AND t1.business_id NOT IN ('TDF1012017071903','TDF20420160829217B','TDF10420160719279B','TDF50120160805016B')  -- add by caihl20181129 TDF1012017071903 该笔属于管车所业务，其他3个带B的单为错误单不统计。
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business t2
               WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (IFNULL(t2.business_type_detail ,'business')  IN ('T150'))
                AND t2.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
AND NOT EXISTS (
                SELECT 1
                FROM DWS_DATA.dws_agr_xd_business t2
               WHERE t2.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
                AND (t2.business_type  IN ('A100','T140'))
                AND t2.business_id = t1.business_id
               )    -- add by caihl20181129剔除 业务类型为 汽车融资租赁、扶贫贷、汽车垫资代采的数据
;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','10dma_sal_achv_shd_unpaid_bx_detail_due_fsd>>end', '1100', '本息情况表', 0,'${p_day}',  NOW(),  'dl' );

</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>672</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：kjb_dma_sal_achv_shd_unpaid_bx_detail_due_fsd
创建时间：20181206
创建人   ：caihl
源系统	 ：tuandai_bm hongte_alms
数据源表：
运行频率：天(存历史数据)
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181206 new add 应收未收情况表和本息情况分离（由于应收未收-房速贷 查询日期改为应收日期）
caihl20181244 out_dt改为varchar(10)</note>
      <xloc>0</xloc>
      <yloc>0</yloc>
      <width>579</width>
      <heigth>219</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

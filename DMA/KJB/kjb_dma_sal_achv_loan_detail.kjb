<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dma_sal_achv_loan_detail</name>
  <description/>
  <extended_description>核心账务系统报表-借款明细表</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>${p_day}</name>
      <default_value>2018030719</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>${p_duty_nm}</name>
      <default_value>dma_sal_achv_fsd_defer_settle_pending_detail</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.autoReconnect</code>
        <attribute>true</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.testWhileIdle</code>
        <attribute>true</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.timeBetweenEvictionRunsMillis</code>
        <attribute>28000</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.useSSL</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1264</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'delete_data',
   '100',
   '删除数据！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1168</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'delete_data',
   '100',
   '删除数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>768</xloc>
      <yloc>608</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1088</xloc>
      <yloc>496</yloc>
    </entry>
    <entry>
      <name>delete_data</name>
      <description/>
      <type>SQL</type>
      <sql>alter table dma_sal_achv_loan_detail_his  truncate partition dma_sal_achv_loan_detail_his_${pt_day}</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共12步！！', 0,'${p_day}',  NOW(),  'dl' );
  
 

DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp1`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp1` (
	`business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`business_type` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务类型',
	`branch_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '业务所属分公司编号',
	`area_id` VARCHAR(51) NULL DEFAULT NULL COMMENT '区域编号',
	`customer_name` VARCHAR(50) NULL DEFAULT NULL COMMENT '客户名称',
	`loan_rate` DECIMAL(10,4) NULL DEFAULT NULL COMMENT '年化利率',
	`apply_borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`apply_borrow_limit` INT(11) NULL DEFAULT NULL COMMENT '申请借款期限',
	`operator_id` VARCHAR(50) NULL DEFAULT NULL COMMENT '主办人编号',
	`issue_type` INT(11) NULL DEFAULT NULL COMMENT '发标类型0:线下放款, 1:P2p,2:定期理财',
	`is_extension` INT(11) NULL DEFAULT NULL COMMENT '是否展期 1：是 0：否',
	`plan_settle_dt` DATETIME NULL DEFAULT NULL COMMENT '计划结清时间',
	KEY `dma_loan_detail_tmp1_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into dma_loan_detail_tmp1
select a.`business_id` ,
	a.`business_type`,
	a.`branch_id`,
	a.`area_id` ,
	a.`customer_name` ,
	a.`loan_rate` ,
	a.`apply_borrow_money`,
	a.`apply_borrow_limit` ,
	a.operator_id ,
	a.`issue_type` ,
	a.`is_extension`,
	a.`plan_settle_dt`
from DWS_DATA.dws_agr_xd_business a
where a.part_dt =DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  and a.is_extension = 0  ;

insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp1', '100', 'dma_loan_detail_tmp1', 0,'${p_day}',  NOW(),  'dl' );

  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp2`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp2` (
	`business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`full_time` DATETIME NULL DEFAULT NULL COMMENT '计划结清时间',
	`full_borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	KEY `dma_loan_detail_tmp2_business_id` (`business_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into dma_loan_detail_tmp2
select a.BUSINESS_ID,
       a.issue_id,
	   a.full_time,
	   sum(a.full_borrow_money) full_borrow_money
from DWS_DATA.dws_agr_xd_issue_business a
where a.part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
and ifnull(a.full_time,'') != ''
group by a.BUSINESS_ID,
         a.issue_id,
	     a.full_time ;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp2', '200', 'dma_loan_detail_tmp2', 0,'${p_day}',  NOW(),  'dl' );
  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp3`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp3` (
	`issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`act_rec_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`total_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_db_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_fgssrv_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_zj_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_yj_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	KEY `dma_loan_detail_tmp3_business_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

insert into dma_loan_detail_tmp3
select  f.issue_id,
        sum(case when f.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4','64db27f6-e416-4ebe-bd08-0aa43e837a28',
									'38456370-3b68-41d3-a16b-ec294c1a334c','e71fa201-5c81-40bc-b20c-e6f0d802924c'
									,'f8ef006c-9e71-4f03-9144-e3802f3a45f8','54781a0f-fd98-11e6-b1d5-000c2928bb0d'
									) then f.borrow_money else 0 end) act_rec_fee ,--
        sum(case when f.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4','64db27f6-e416-4ebe-bd08-0aa43e837a28',
									'38456370-3b68-41d3-a16b-ec294c1a334c','e71fa201-5c81-40bc-b20c-e6f0d802924c'
									-- ,'f8ef006c-9e71-4f03-9144-e3802f3a45f8','54781a0f-fd98-11e6-b1d5-000c2928bb0d'
									) then f.borrow_money else 0 end) total_pt_fee ,--
		sum(case when f.fee_id='e71fa201-5c81-40bc-b20c-e6f0d802924c' then f.borrow_money else 0 end) one_tm_db_fee,  -- 担保公司费用,
		sum(case when f.fee_id='38456370-3b68-41d3-a16b-ec294c1a334c' then f.borrow_money else 0 end) one_tm_pt_fee ,-- 团贷网平台费用,
		sum(case when f.fee_id='d5aef8af-0277-4514-a4cc-cdb095db30f4' or f.fee_id='64db27f6-e416-4ebe-bd08-0aa43e837a28' then f.borrow_money else 0 end) one_tm_fgssrv_fee ,-- 分公司服务费,
		 sum(case when f.fee_id='f8ef006c-9e71-4f03-9144-e3802f3a45f8' then f.borrow_money else 0 end) as  one_tm_zj_fee,-- 中介费,
		 sum(case when f.fee_id='54781a0f-fd98-11e6-b1d5-000c2928bb0d' then f.borrow_money else 0 end) as  one_tm_yj_fee -- 押金类费用
from ODS_XD_TUANDAI_BM.tb_issue_out_list_ods f
where part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') 
  and f.fee_id in ('d5aef8af-0277-4514-a4cc-cdb095db30f4','64db27f6-e416-4ebe-bd08-0aa43e837a28',
									'38456370-3b68-41d3-a16b-ec294c1a334c','e71fa201-5c81-40bc-b20c-e6f0d802924c',
									'f8ef006c-9e71-4f03-9144-e3802f3a45f8','54781a0f-fd98-11e6-b1d5-000c2928bb0d'
				   ) 
group by f.issue_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp3', '300', 'dma_loan_detail_tmp3', 0,'${p_day}',  NOW(),  'dl' );

  
/*add by caihl20181121 一次性收取分公司服务费和行政综合费 
改报表为按小时跑批，但是tb_issue_business_apply_output_ods 按天确定是否需要改成按小时跑批
begin */ 
 DROP TEMPORARY TABLE IF EXISTS `tb_issue_business_apply_output_ods_tmp`;  
CREATE TEMPORARY TABLE `tb_issue_business_apply_output_ods_tmp` (
  `issue_id` varchar(50) NOT NULL COMMENT '上标编号',
  `admin_fee` decimal(32,2) DEFAULT 0.00,
  `one_time_sub_comp_fee` decimal(32,2) DEFAULT 0.00,
  KEY `idx_issue_id` (`issue_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;

insert into tb_issue_business_apply_output_ods_tmp
SELECT 
f.issue_id
,SUM(IFNULL((CASE WHEN f.fee_type_name ='分公司费用' AND f.fee_item_name ='行政综合费'   THEN f.fee_value ELSE 0 END),0))   AS admin_fee
,SUM(IFNULL((CASE WHEN f.fee_type_name ='分公司费用' AND f.fee_item_name ='分公司服务费' THEN f.fee_value ELSE 0 END),0))   AS one_time_sub_comp_fee 
FROM ODS_XD_TUANDAI_BM.tb_issue_business_apply_output_ods f
 WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
-- WHERE part_dt = DATE_FORMAT('${pt_yesterday}','%Y-%m-%d')
AND f.fee_type_name ='分公司费用' AND f.fee_item_name IN ('行政综合费','分公司服务费')
AND f.is_one_time_charge=2
GROUP BY f.issue_id
;
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','tb_issue_business_apply_output_ods_tmp', '1000', '一次性收取分公司服务费和行政综合费', 0,'${p_day}',  NOW(),  'dl' );
 

DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp3_1`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp3_1` (
	`issue_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`act_rec_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`total_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_db_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_fgssrv_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_zj_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_yj_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`admin_fee` DECIMAL(32,2) DEFAULT 0.00,
        `one_time_sub_comp_fee` DECIMAL(32,2) DEFAULT 0.00,
  KEY `idx_issue_id` (`issue_id`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

INSERT INTO dma_loan_detail_tmp3_1 
SELECT 
 t.issue_id
,(t.one_tm_db_fee + t.one_tm_pt_fee + t.one_tm_zj_fee + t.one_tm_yj_fee + IFNULL(tt.admin_fee,0) + IFNULL(tt.one_time_sub_comp_fee,0)) as act_rec_fee -- 重新算总费用：担保+平台+中介+押金+行政综合费+一次性收取分公司服务费
,t.total_pt_fee
,t.one_tm_db_fee
,t.one_tm_pt_fee
,t.one_tm_fgssrv_fee
,t.one_tm_zj_fee
,t.one_tm_yj_fee
,IFNULL(tt.admin_fee,0)             AS admin_fee -- 行政综合费
,IFNULL(tt.one_time_sub_comp_fee,0) AS one_time_sub_comp_fee  -- 一次性收取分公司服务费 
 FROM dma_loan_detail_tmp3 t
LEFT JOIN tb_issue_business_apply_output_ods_tmp tt ON t.issue_id=tt.issue_id
; 
/*add by caihl20181121 end */
  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp4`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp4` (
	`BUSINESS_ID` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	`full_time` VARCHAR(10) NOT NULL DEFAULT '' COMMENT '业务单号',
	`act_rec_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`total_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_db_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_pt_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`one_tm_fgssrv_fee` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`full_borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`admin_fee` DECIMAL(32,2) DEFAULT 0.00,
   -- `one_time_sub_comp_fee` DECIMAL(32,2) DEFAULT 0.00,
	`rn` INT(10) NULL DEFAULT NULL COMMENT '申请借款金额',
	`var_business_id` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '业务单号',
	KEY `dma_loan_detail_tmp4_business_id` (`BUSINESS_ID`),
	KEY `dma_loan_detail_tmp4_business_id_rn` (`BUSINESS_ID`,rn)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;

SET @rn=0;       
SET @var_business_id=''; 
insert into dma_loan_detail_tmp4
select t2.BUSINESS_ID,
	   t2.full_time,
	   t2.act_rec_fee,
	   t2.total_pt_fee,
	   t2.one_tm_db_fee,
	   t2.one_tm_pt_fee,
	   -- t2.one_tm_fgssrv_fee,
	   t2.one_tm_fgssrv_fee,
	   t2.full_borrow_money,
	   t2.admin_fee,        -- add by caihl20181121
	    IF(@var_business_id = t2.business_id, @rn:=@rn+1,@rn:=1) AS rn,
	   @var_business_id := t2.business_id AS var_business_id 
from 
(select t1.BUSINESS_ID,
	   DATE_FORMAT(t1.full_time,'%Y-%m-%d')	full_time,
	   sum(t2.act_rec_fee) as act_rec_fee,
	   sum(t2.total_pt_fee) as total_pt_fee,
	   sum(t2.one_tm_db_fee) as one_tm_db_fee,
	   sum(t2.one_tm_pt_fee) as one_tm_pt_fee,
	  -- sum(t2.one_tm_fgssrv_fee) as one_tm_fgssrv_fee,
	   sum(t2.one_time_sub_comp_fee) as one_tm_fgssrv_fee,
	   sum(t1.full_borrow_money) as full_borrow_money,
	   sum(t2.admin_fee)             as admin_fee
from dma_loan_detail_tmp2 t1
join dma_loan_detail_tmp3_1 t2
  on t1.issue_id = t2.issue_id
group by t1.BUSINESS_ID,
	     DATE_FORMAT(t1.full_time,'%Y-%m-%d')
order by t1.BUSINESS_ID, DATE_FORMAT(t1.full_time,'%Y-%m-%d')
)t2;
  
 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp4', '400', 'dma_loan_detail_tmp4', 0,'${p_day}',  NOW(),  'dl' );
  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp5`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp5` (
		`DEPT_ID` VARCHAR(50) NOT NULL COMMENT '部门编号',
	`DEPT_NAME` VARCHAR(50) NULL DEFAULT NULL COMMENT '部门名称'
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

INSERT INTO   dma_loan_detail_tmp5 
SELECT DISTINCT dept_id,
	   dept_name
FROM  ODS_XD_TUANDAI_BM.tb_department_ods a
 WHERE a.part_dt = DATE_FORMAT('${pt_yesterday}','%Y-%m-%d') ;
 
 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp5', '500', 'dma_loan_detail_tmp5', 0,'${p_day}',  NOW(),  'dl' );
 
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp6`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp6` (
		`DEPT_ID` VARCHAR(50) NOT NULL COMMENT '部门编号',
	`DEPT_NAME` VARCHAR(50) NULL DEFAULT NULL COMMENT '部门名称'
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

INSERT INTO   dma_loan_detail_tmp6 
SELECT DISTINCT dept_id,
	   dept_name
FROM  ODS_XD_TUANDAI_BM.tb_department_ods a
 WHERE a.part_dt = DATE_FORMAT('${pt_yesterday}','%Y-%m-%d') ;
 
 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp6', '600', 'dma_loan_detail_tmp6', 0,'${p_day}',  NOW(),  'dl' );
  
  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp7`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp7` (
		`TYPE_ID` VARCHAR(50) NOT NULL COMMENT '部门编号',
	`TYPE_NAME` VARCHAR(50) NULL DEFAULT NULL COMMENT '部门名称'
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

INSERT INTO   dma_loan_detail_tmp7 
SELECT DISTINCT TYPE_ID,
	   TYPE_NAME
FROM  ODS_XD_TUANDAI_BM.tb_business_type_ods a
 WHERE a.part_dt = DATE_FORMAT('${pt_yesterday}','%Y-%m-%d') ;
 
 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp7', '700', 'dma_loan_detail_tmp7', 0,'${p_day}',  NOW(),  'dl' );
  
DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp8`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp8` (
		`BUSINESS_ID` VARCHAR(50) NOT NULL COMMENT '部门编号',
	`full_time` VARCHAR(10) NULL DEFAULT NULL COMMENT '部门名称',
	`full_borrow_money` DECIMAL(12,2) NULL DEFAULT NULL COMMENT '申请借款金额',
	`rn` INT(10) NULL DEFAULT NULL COMMENT '申请借款金额',
	KEY `dma_loan_detail_tmp8_business_id` (`BUSINESS_ID`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

 INSERT INTO dma_loan_detail_tmp8
 select tt.BUSINESS_ID,tt.full_time,full_borrow_money,
	   (@rowNum:=@rowNum+1) rn
from ( 
 select BUSINESS_ID,
	   DATE_FORMAT(out_date,'%Y-%m-%d')	full_time,
	   sum(out_amt) as full_borrow_money
 from DWS_DATA.dws_evt_xd_output_list 
 WHERE part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d')
   AND is_issue ='0'
   AND ifnull(out_date,'')!= ''
group by BUSINESS_ID,
	   DATE_FORMAT(out_date,'%Y-%m-%d')  
order by BUSINESS_ID,
	   DATE_FORMAT(out_date,'%Y-%m-%d')    
	   )tt,(SELECT (@rowNum :=0) )b;
 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp8', '800', 'dma_loan_detail_tmp8', 0,'${p_day}',  NOW(),  'dl' );
 
 DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp9`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp9` (
		`user_id` VARCHAR(50) NOT NULL COMMENT '部门编号',
	`user_name` VARCHAR(200) NULL DEFAULT NULL COMMENT '部门名称'
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

 INSERT INTO dma_loan_detail_tmp9
select distinct uo.user_id,uo.user_name
from ODS_XD_TUANDAI_BM.tb_user_ods uo 
where  uo.part_dt=DATE_FORMAT('${pt_yesterday}','%Y-%m-%d');


 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp9', '900', 'dma_loan_detail_tmp9', 0,'${p_day}',  NOW(),  'dl' );
  

 DROP TEMPORARY TABLE IF EXISTS `dma_loan_detail_tmp10`;
CREATE TEMPORARY TABLE `dma_loan_detail_tmp10` (
		`BUSINESS_ID` VARCHAR(50) NOT NULL COMMENT '部门编号',
	    `rn` int(10) NULL DEFAULT NULL COMMENT '部门名称',
	`plan_settle_dt` DATETIME NULL DEFAULT NULL COMMENT '计划结清时间',
	KEY `dma_loan_detail_tmp10_business_id` (`BUSINESS_ID`)
)ENGINE=MEMORY DEFAULT CHARSET=utf8 ;	   

insert into dma_loan_detail_tmp10
select car_business_id BUSINESS_ID,
	    ifnull(out_id,1) AS rn,
	   max(borrow_date) plan_settle_dt
from ODS_XD_TUANDAI_BM.tb_car_business_after_ods 
where part_dt=DATE_FORMAT('${pt_day}','%Y-%m-%d')
 group by  car_business_id,
	   ifnull(out_id,1);
	 
insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_loan_detail_tmp10', '1000', 'dma_loan_detail_tmp10', 0,'${p_day}',  NOW(),  'dl' );
 
 drop TEMPORARY TABLE if exists `tb_repayment_biz_plan_list_tmp`;
CREATE TEMPORARY TABLE `tb_repayment_biz_plan_list_tmp` (
  `orig_business_id` VARCHAR(50) NOT NULL COMMENT '还款计划所属原业务编号',
  `out_id` VARCHAR(1) DEFAULT NULL,
  `due_date` DATETIME COMMENT '应还日期',
  `after_id` VARCHAR(50) DEFAULT NULL COMMENT '总批次期数，唯一，对应信贷系统的还款计划编号',
  KEY `idx_orig_business_id` (`orig_business_id`),
  KEY `idx_orig_business_id_out_id` (`orig_business_id`,`out_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
insert into tb_repayment_biz_plan_list_tmp
SELECT 
 t.`orig_business_id`,SUBSTR(t.`after_id`,1,1) AS out_id,MAX(t.`due_date`) AS due_date,MAX(t.`after_id`) AS after_id
 FROM ODS_XD_TUANDAI_BM.`tb_repayment_biz_plan_list_dh_ods` t
WHERE t.part_dt =DATE_FORMAT('${pt_yesterday}','%Y-%m-%d') 
AND t.`src_type` =2
AND t.`after_id` NOT LIKE '%ZQ%'
-- and t.`orig_business_id` ='TDF6032018103102'
GROUP BY t.`orig_business_id`,SUBSTR(t.`after_id`,1,1) 
;

 
alter table dma_sal_achv_loan_detail_his truncate partition dma_sal_achv_loan_detail_his_${pt_day};


insert into dma_sal_achv_loan_detail_his
select  
    SUBSTRING('${p_day}',1,8) stat_dt,
	t2.full_time as begin_issue_dt,
	DATE_FORMAT(t7.plan_settle_dt,'%Y-%m-%d') as expire_dt,
	null as act_rec_pay_dt,
    t1.business_id ,
	t5.TYPE_NAME as business_type_nm,
	t3.dept_name as area_nm,
	t4.dept_name as branch_nm,
	t1.customer_name as customer_nm ,
	truncate(t1.loan_rate/12,4)+0.0001 as loan_rate,
	concat(t1.apply_borrow_limit,'个月') as borrow_limit,
	concat('期末结清(',t1.apply_borrow_limit,'次)') as repay_interest_way,
	t6.user_name as operator_nm,
	null as acct_nm,
	null as rec_pay_tra_detail,
	0 as is_issue,
	-- t1.apply_borrow_money as borrow_amt,
	t2.full_borrow_money as borrow_amt,
	null as act_rec_fee,
   null as total_pt_fee,
   null as one_tm_db_fee,
   null as one_tm_pt_fee,
   null as one_tm_fgssrv_fee,
   null as admin_fee, -- add by caihl20181121
   null as db_rate,
   null as pt_rate,
   null as fgssrv_rate,
   null as srv_rate   ,      
  'tuandai_bm' AS dw_src_sys,
  'DWS_DATA.dws_agr_xd_business,DWS_DATA.dws_agr_xd_issue_business,ODS_XD_TUANDAI_BM.tb_issue_out_list_ods...' AS dw_src_tbl,
  CURRENT_TIMESTAMP AS dw_ins_tm,
  CURRENT_TIMESTAMP AS dw_upd_tm,
  'dailiang' AS dw_ins_usr,
  'dailiang' AS dw_upd_usr,
   DATE_FORMAT('${pt_day}','%Y-%m-%d')	as	part_dt	--	分区日期
 from (select * from dma_loan_detail_tmp1 t1 where IFNULL(t1.issue_type,0) &lt;&gt; 1) t1
 join dma_loan_detail_tmp8 t2 on t1.business_id = t2.business_id
left join dma_loan_detail_tmp5 t3 on t3.DEPT_ID=t1.area_id
left join dma_loan_detail_tmp6 t4 on t4.DEPT_ID=t1.branch_id
left join dma_loan_detail_tmp7 t5 on t5.TYPE_ID = t1.business_type
left join dma_loan_detail_tmp9 t6 on t1.operator_id = t6.user_id
left join dma_loan_detail_tmp10 t7 on t1.business_id = t7.business_id and t7.rn = t2.rn;


 /*
 由于 信贷还款计划中的out_id 不准确 导致部分实际上有多个还款计划的 out_id 只有1
 处理该部分数据 add by caihl20181216
 */
insert into dma_sal_achv_loan_detail_his
select  
    SUBSTRING('${p_day}',1,8) stat_dt,
	t2.full_time as begin_issue_dt,
	-- DATE_FORMAT(t7.plan_settle_dt,'%Y-%m-%d') as expire_dt,
	-- DATE_FORMAT(ifnull(t7.plan_settle_dt,pl.due_date),'%Y-%m-%d') as expire_dt, -- add by caihl20181216
	DATE_FORMAT(ifnull(pl.due_date,t7.plan_settle_dt),'%Y-%m-%d') as expire_dt, -- add by caihl20181216
	null as act_rec_pay_dt,
    t1.business_id ,
	t5.TYPE_NAME as business_type_nm,
	t3.dept_name as area_nm,
	t4.dept_name as branch_nm,
	t1.customer_name as customer_nm ,
	truncate(t1.loan_rate/12,4)+0.0001 as loan_rate,
	concat(t1.apply_borrow_limit,'个月') as borrow_limit,
	concat('期末结清(',t1.apply_borrow_limit,'次)') as repay_interest_way,
	t6.user_name as operator_nm,
	'平台上标' as acct_nm,
	null as rec_pay_tra_detail,
	1 as is_issue,
	-- t1.apply_borrow_money as borrow_amt,
	sum(t2.full_borrow_money) as borrow_amt , -- udpate 20180414 李芳确认由借款金额改为上标金额
	sum(t2.act_rec_fee) as act_rec_fee,
   sum(t2.total_pt_fee) as total_pt_fee,
   sum(t2.one_tm_db_fee) as one_tm_db_fee,
   sum(t2.one_tm_pt_fee) as one_tm_pt_fee,
   sum(t2.one_tm_fgssrv_fee) as one_tm_fgssrv_fee,
   sum(t2.admin_fee)         as admin_fee, -- add by caihl20181121
  -- sum(t2.one_time_sub_comp_fee) as one_tm_fgssrv_fee, -- add by caihl20181121
   /* 
   concat(case when sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_db_fee)/sum(t2.full_borrow_money) ,4) else 0 end*100  ,'%') as db_rate,
   concat(case when sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_pt_fee)/sum(t2.full_borrow_money) ,4) else 0 end*100  ,'%') as pt_rate,
   concat(case when sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_fgssrv_fee)/sum(t2.full_borrow_money) ,4) else 0 end*100 ,'%') as fgssrv_rate,
   concat(case when sum(t2.full_borrow_money)>0 then round(sum(t2.act_rec_fee)/sum(t2.full_borrow_money) ,4) else 0 end*100 ,'%') as srv_rate   , */   -- update 20180420 需求由李芳确认修改，总借款金额未超过10万，按10万计算服务费率

   concat(case when sum(t2.full_borrow_money)>100000 then round(sum(t2.one_tm_db_fee)/sum(t2.full_borrow_money) ,4) 
               when sum(t2.full_borrow_money)&lt;=100000 and sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_db_fee)/100000 ,4)  else 0 end*100  ,'%') as db_rate,
   concat(case when sum(t2.full_borrow_money)>100000 then round(sum(t2.one_tm_pt_fee)/sum(t2.full_borrow_money) ,4) 
               when sum(t2.full_borrow_money)&lt;=100000 and sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_pt_fee)/100000 ,4)  else 0 end*100  ,'%') as pt_rate,
   concat(case when sum(t2.full_borrow_money)>100000 then round(sum(t2.one_tm_fgssrv_fee)/sum(t2.full_borrow_money) ,4) 
               when sum(t2.full_borrow_money)&lt;=100000 and sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_fgssrv_fee)/100000 ,4)  else 0 end*100  ,'%') as fgssrv_rate,

  /* concat(case when sum(t2.full_borrow_money)>100000 then round(sum(t2.act_rec_fee)/sum(t2.full_borrow_money) ,4) 
               when sum(t2.full_borrow_money)&lt;=100000 and sum(t2.full_borrow_money)>0 then round(sum(t2.act_rec_fee)/100000 ,4)  else 0 end*100  ,'%') as srv_rate,
			   */
  concat(case when sum(t2.full_borrow_money)>100000 then round(sum(t2.one_tm_db_fee + t2.one_tm_pt_fee + t2.one_tm_fgssrv_fee)/sum(t2.full_borrow_money) ,4) 
               when sum(t2.full_borrow_money)&lt;=100000 and sum(t2.full_borrow_money)>0 then round(sum(t2.one_tm_db_fee + t2.one_tm_pt_fee + t2.one_tm_fgssrv_fee)/100000 ,4)  else 0 end*100  ,'%') as srv_rate,			   
  'tuandai_bm' AS dw_src_sys,
  'DWS_DATA.dws_agr_xd_business,DWS_DATA.dws_agr_xd_issue_business,ODS_XD_TUANDAI_BM.tb_issue_out_list_ods...' AS dw_src_tbl,
  CURRENT_TIMESTAMP AS dw_ins_tm,
  CURRENT_TIMESTAMP AS dw_upd_tm,
  'dailiang' AS dw_ins_usr,
  'dailiang' AS dw_upd_usr,
   DATE_FORMAT('${pt_day}','%Y-%m-%d')	as	part_dt	--	分区日期
from (select * from dma_loan_detail_tmp1 t1 where IFNULL(t1.issue_type,0) = 1 )t1
join dma_loan_detail_tmp4 t2 on t1.business_id = t2.business_id
left join dma_loan_detail_tmp5 t3 on t3.DEPT_ID=t1.area_id
left join dma_loan_detail_tmp6 t4 on t4.DEPT_ID=t1.branch_id
left join dma_loan_detail_tmp7 t5 on t5.TYPE_ID = t1.business_type
left join dma_loan_detail_tmp9 t6 on t1.operator_id = t6.user_id
left join dma_loan_detail_tmp10 t7 on t2.business_id = t7.business_id and t7.rn = t2.rn
left join tb_repayment_biz_plan_list_tmp pl  on t2.business_id =pl.orig_business_id and t2.rn = pl.out_id   -- add by caihl20181216
 group by t2.full_time ,
	-- DATE_FORMAT(t7.plan_settle_dt,'%Y-%m-%d') ,
	DATE_FORMAT(ifnull(pl.due_date,t7.plan_settle_dt),'%Y-%m-%d'),
    t1.business_id ,
	t5.TYPE_NAME ,
	t3.dept_name,
	t4.dept_name,
	t1.customer_name ,
	t1.loan_rate,
	concat(t1.apply_borrow_limit,'个月') ,
	concat('期末结清(',t1.apply_borrow_limit,'次)') ,
	t1.operator_id ;
 
 -- add by dailiang 应需求方要求要把带B车贷数据统计进来
 insert into dma_sal_achv_loan_detail_his
select  
    SUBSTRING('${p_day}',1,8) stat_dt,
	null as begin_issue_dt,
	DATE_FORMAT(t7.plan_settle_dt,'%Y-%m-%d') as expire_dt,
	null as act_rec_pay_dt,
    t1.business_id ,
	t5.TYPE_NAME as business_type_nm,
	t3.dept_name as area_nm,
	t4.dept_name as branch_nm,
	t1.customer_name as customer_nm ,
	truncate(t1.loan_rate/12,4)+0.0001 as loan_rate,
	concat(t1.apply_borrow_limit,'个月') as borrow_limit,
	concat('期末结清(',t1.apply_borrow_limit,'次)') as repay_interest_way,
	t6.user_name as operator_nm,
	null as acct_nm,
	null as rec_pay_tra_detail,
	0 as is_issue,
	-- t1.apply_borrow_money as borrow_amt,
	null as borrow_amt,
	null as act_rec_fee,
   null as total_pt_fee,
   null as one_tm_db_fee,
   null as one_tm_pt_fee,
   null as one_tm_fgssrv_fee,
   null as admin_fee, -- add by caihl20181121
   null as db_rate,
   null as pt_rate,
   null as fgssrv_rate,
   null as srv_rate   ,      
  'tuandai_bm' AS dw_src_sys,
  'DWS_DATA.dws_agr_xd_business,DWS_DATA.dws_agr_xd_issue_business,ODS_XD_TUANDAI_BM.tb_issue_out_list_ods...' AS dw_src_tbl,
  CURRENT_TIMESTAMP AS dw_ins_tm,
  CURRENT_TIMESTAMP AS dw_upd_tm,
  'dailiang' AS dw_ins_usr,
  'dailiang' AS dw_upd_usr,
   DATE_FORMAT('${pt_day}','%Y-%m-%d')	as	part_dt	--	分区日期
 from (select * from dma_loan_detail_tmp1 t1 where IFNULL(t1.issue_type,0) &lt;&gt; 1 and business_id like '%B' and business_id like 'TDC%') t1
left join dma_loan_detail_tmp5 t3 on t3.DEPT_ID=t1.area_id
left join dma_loan_detail_tmp6 t4 on t4.DEPT_ID=t1.branch_id
left join dma_loan_detail_tmp7 t5 on t5.TYPE_ID = t1.business_type
left join dma_loan_detail_tmp9 t6 on t1.operator_id = t6.user_id
left join dma_loan_detail_tmp10 t7 on t1.business_id = t7.business_id;


insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','dma_sal_achv_loan_detail_his', '1100', 'dma_sal_achv_loan_detail_his', 0,'${p_day}',  NOW(),  'dl' );
  
truncate table dma_sal_achv_loan_detail;
insert into dma_sal_achv_loan_detail
select  stat_dt,
		begin_issue_dt,
		expire_dt,
		act_rec_pay_dt,
		business_id ,
		business_type_nm,
		area_nm,
		branch_nm,
		customer_nm ,
		loan_rate,
		borrow_limit,
		repay_interest_way,
		operator_nm,
		acct_nm,
		rec_pay_tra_detail,
		is_issue,
		borrow_amt,
		act_rec_fee,
		total_pt_fee,
		one_tm_db_fee,
		one_tm_pt_fee,
		one_tm_fgssrv_fee,
		admin_fee,
		db_rate,
		pt_rate,
		fgssrv_rate,
		srv_rate   ,      
		dw_src_sys,
		dw_src_tbl,
		dw_ins_tm,
		dw_upd_tm,
		dw_ins_usr,
		dw_upd_usr
 from dma_sal_achv_loan_detail_his
 where part_dt = DATE_FORMAT('${pt_day}','%Y-%m-%d') ;
 

  insert into public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
values
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB END >>>>>>>>>>', '1200', 'sucucess！！', 0,'${p_day}',  NOW(),  'dl' );
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>496</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>delete_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>delete_data</from>
      <to>SQL_LOG 210</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>delete_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：核心账务系统-借款明细表
创建时间：20180413
创建人   ：dailiang
源系统	 ：tuandai_bm
数据源表：DWS_DATA.dws_agr_xd_business,
               DWS_DATA.dws_agr_xd_issue_business,
               ODS_XD_TUANDAI_BM.tb_issue_out_list_ods
               ...
运行频率：小时
注意事项： 
问题发现： 
修改记录： 
***********************
caihl20181121 分公司费用一次性收取逻辑修改
caihl20181226 处理expire_dt为空的情况
caihl20181228 依赖的tb_issue_business_apply_output_ods 改成按小时</note>
      <xloc>32</xloc>
      <yloc>16</yloc>
      <width>442</width>
      <heigth>283</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>

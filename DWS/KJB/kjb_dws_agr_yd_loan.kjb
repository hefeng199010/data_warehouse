<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>kjb_dws_agr_yd_loan</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2018/01/26 14:01:05.270</created_date>
  <modified_user>-</modified_user>
  <modified_date>2018/01/31 11:51:34.108</modified_date>
  <parameters>
    <parameter>
      <name>p_day</name>
      <default_value>20180328</default_value>
      <description/>
    </parameter>
    <parameter>
      <name>p_duty_nm</name>
      <default_value>dws_agr_yd_loan</default_value>
      <description/>
    </parameter>
  </parameters>
  <connection>
    <name>DMA_SAL_ACHV_DATA</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_DMA_SAL_ACHVNAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>public_data</name>
    <server>${UAT_DC_DB_HOST}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${UAT_DC_DB_PUBLIC_NAME}</database>
    <port>3306</port>
    <username>${UAT_DC_DB_USER}</username>
    <password>${UAT_DC_DB_PWD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection>public_data</connection>
    <schema/>
    <table>etl_kjb_log</table>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1104</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 100</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('11',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB START >>>>>>>>>>',
   '100',
   '任务开始！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>128</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>JavaScript_Return</name>
      <description/>
      <type>EVAL</type>
      <script>1 > 2 </script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 300</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'insert_data',
   '100',
   '插入数据库！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>816</xloc>
      <yloc>368</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 400</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   '>>>>>>>>>> JOB END >>>>>>>>>>',
   '100',
   '插入数据库',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1008</xloc>
      <yloc>288</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 310</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ods_insert',
   '100',
   '插入数据异常',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_set_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_set_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 200</name>
      <description/>
      <type>SQL</type>
      <sql>insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_set_date',
   '200',
   '定义日期变量！！',
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>352</xloc>
      <yloc>304</yloc>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>i_while_count</variable_name>
          <variable_value>0</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>ktr_duty_check</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_check.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>check_value</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname>pt_returnvalue</fieldname>
      <variablename>pt_returnvalue</variablename>
      <fieldtype>number</fieldtype>
      <mask/>
      <comparevalue>0</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>464</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 210 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'check_value',
   '100',
   CONCAT('${pt_returnvalue}','源表没有生成,需等待2分钟'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>512</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>Java_cycle</name>
      <description/>
      <type>EVAL</type>
      <script>var attempt = parent_job.getVariable("i_while_count");

if(attempt &lt; 10 )
{
   attempt++;
   parent_job.setVariable("i_while_count", attempt); 

   true;

}
else
{
   

   false;
}
</script>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>448</xloc>
      <yloc>720</yloc>
    </entry>
    <entry>
      <name>Wait for</name>
      <description/>
      <type>DELAY</type>
      <maximumTimeout>2</maximumTimeout>
      <scaletime>1</scaletime>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>416</xloc>
      <yloc>592</yloc>
    </entry>
    <entry>
      <name>ktr_duty_insert</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${UAT_KTR_DIR}/PUBLIC/KTR/ktr_duty_insert.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>928</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>insert_data</name>
      <description/>
      <type>SQL</type>
      <sql>

SET SESSION tmp_table_size=1024*1024*1024;
SET SESSION max_heap_table_size=1024*1024*1024;

INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','>>>>>>>>>> JOB START >>>>>>>>>>', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
  

DROP TEMPORARY TABLE IF EXISTS t_hi_loan_fee_tmp1;
CREATE TEMPORARY TABLE t_hi_loan_fee_tmp1 (
  loan_id INT(11) DEFAULT NULL COMMENT '借款ID',
  fee_name VARCHAR(100) DEFAULT NULL COMMENT '费率名',
  fee_value DECIMAL(14,4) DEFAULT NULL COMMENT '费率值',
  KEY idx_loan_id (loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO t_hi_loan_fee_tmp1
SELECT thlf.loan_id ,thlf.fee_name ,thlf.fee_value
FROM yidian.t_hi_loan_fee thlf 
WHERE fee_name IN( '月利率')
;

DROP TEMPORARY TABLE IF EXISTS t_hi_loan_fee_tmp2;
CREATE TEMPORARY TABLE t_hi_loan_fee_tmp2 (
  loan_id INT(11) DEFAULT NULL COMMENT '借款ID',
  fee_name VARCHAR(100) DEFAULT NULL COMMENT '费率名',
  fee_value DECIMAL(14,4) DEFAULT NULL COMMENT '费率值',
  KEY idx_loan_id (loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO t_hi_loan_fee_tmp2
SELECT thlf.loan_id ,thlf.fee_name ,thlf.fee_value
FROM yidian.t_hi_loan_fee thlf 
WHERE fee_name IN( '投资人标的利率')
;

-- 一点贷后基本信息表
/*
  has_main char(2) DEFAULT '-1' COMMENT '是否主借款（-1：母标；1：主子标；0：次个人标；2：次企业标）',
  issue_id取的是主子标的标的
*/
DROP TEMPORARY TABLE IF EXISTS dws_agr_yd_refund_information_tmp;
CREATE TEMPORARY TABLE dws_agr_yd_refund_information_tmp (
  runperiod VARCHAR(50) DEFAULT NULL,
  org_id INT(11) DEFAULT NULL COMMENT '机构ID',
  org_name VARCHAR(50) DEFAULT NULL COMMENT '机构名',
  org_address_province VARCHAR(20) DEFAULT NULL COMMENT '机构地址省',
  customer_name VARCHAR(50) DEFAULT NULL COMMENT '客户名',
  vehicle_number VARCHAR(20) DEFAULT NULL COMMENT '车牌号',
  loan_id INT(11) DEFAULT NULL COMMENT '借款单ID',
  issue_id VARCHAR(50) DEFAULT NULL COMMENT '标的id',
  contract_number VARCHAR(50) DEFAULT NULL COMMENT '合同号',
  loan_date DATE DEFAULT NULL COMMENT '合同日期',
  loan_money DECIMAL(12,2) DEFAULT NULL COMMENT '审核金额',
  full_scale_date DATETIME DEFAULT NULL COMMENT '满标日期',
  bidding_money DECIMAL(12,2) DEFAULT NULL COMMENT '发标金额',
  loan_period TINYINT(4) DEFAULT NULL COMMENT '审核期限',
  jkylilv VARCHAR(10) DEFAULT NULL COMMENT '月利率',
  bdnhlv VARCHAR(10) DEFAULT NULL  COMMENT '投资人标的利率',
  repayment_mode INT(11) DEFAULT NULL COMMENT '还款方式(等本等息:8000、先息后本:8001)',
  repayment_mode_name VARCHAR(50) DEFAULT NULL COMMENT '还款方式中文',
  loan_product INT(11) DEFAULT NULL COMMENT '借款产品(押证不押车:101、押车押证:102)',
  loan_product_name VARCHAR(50) DEFAULT NULL COMMENT '借款产品中文',
  loan_nature TINYINT(4) DEFAULT NULL COMMENT '借款性质（0：新增；1：结清再贷；2：借新还旧；3：先转等；4：续借）',
  loan_nature_name VARCHAR(4) DEFAULT NULL COMMENT '借款性质中文',
  bidding_platform VARCHAR(50) DEFAULT NULL COMMENT '发标平台',
  create_user_id INT(11) DEFAULT NULL COMMENT '录单风控ID',
  create_user_name VARCHAR(20) DEFAULT NULL COMMENT '录单风控',
  supervisor_id INT(11) DEFAULT NULL COMMENT '跟踪风控ID',
  supervisor_name VARCHAR(20) DEFAULT NULL COMMENT '跟踪风控',
  customer_manager_id INT(11) DEFAULT NULL COMMENT '客户经理ID',
  customer_manager_name VARCHAR(20) DEFAULT NULL COMMENT '客户经理',
  team_manager_id INT(11) DEFAULT NULL COMMENT '团队经理ID',
  team_manager_name VARCHAR(20) DEFAULT NULL COMMENT '团队经理',
  verify_person_id INT(11) DEFAULT NULL COMMENT '审核人员ID',
  verify_person_name VARCHAR(20) DEFAULT NULL COMMENT '审核人员名称',
  approval_person_id INT(11) DEFAULT NULL COMMENT '审批人员ID',
  approval_person_name VARCHAR(20) DEFAULT NULL COMMENT '审批人员名称',
  asset_side CHAR(2) DEFAULT '1' COMMENT '资产端（1：鸿特 2：一点）',
  asset_side_name VARCHAR(50) DEFAULT NULL COMMENT '资产端中文',
  org_depository_account VARCHAR(50) DEFAULT NULL COMMENT '分公司存管账号',
  first_repay_date DATE DEFAULT NULL COMMENT '首期还款日',
    refund_status TINYINT(4) DEFAULT NULL COMMENT '还款状态（1：正常；2：逾期；3：已结清）',
  is_roll_over CHAR(1) DEFAULT '0' COMMENT '是否展期（0：否 1：是）',
  roll_over_count TINYINT(2) DEFAULT '0' COMMENT '展期次数',
   settle_date DATE DEFAULT NULL COMMENT '结清日期',
  settle_type INT(2) DEFAULT NULL COMMENT '结清类型（0 未结清、1 正常结清、2 提前结清）',
  settle_period_id INT(2) DEFAULT NULL COMMENT '结清期次:正常结清不用-1，其他结清-1',
  settle_hx_date DATE DEFAULT NULL  COMMENT '结清期对应的核销时间',
  is_loss_settle INT(2) DEFAULT '0' COMMENT '是否亏损结清（0 否  1是）',
   is_law_collection INT(2) DEFAULT '0' COMMENT '是否移交法催（0 否  1 是）',
   has_disassembled CHAR(2) DEFAULT '0' COMMENT '是否拆标（1：是；0：否）',
  original_org_ids VARCHAR(500) DEFAULT NULL COMMENT '原所属机构ID',
  original_org_names VARCHAR(1000) DEFAULT NULL COMMENT '原所属机构',
  KEY inx_loan_id (loan_id),
  KEY inx_contract_number (contract_number)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;


INSERT INTO dws_agr_yd_refund_information_tmp 
 SELECT     tl.runperiod,
			tl.org_id,
			tl.org_name,
			org.org_address_province, -- 省份 
			thcl.customer_name,
			thvl.vehicle_number,
			tl.id as loan_id,
			IF(tl.has_disassembled = '0',tlb.issue_id,(SELECT tlbb.issue_id FROM yidian.t_loan_bidding tlbb WHERE tlbb.loan_id IN (SELECT tll.id FROM yidian.t_loan tll WHERE tll.disassembled_id = tl.id AND tll.has_main = '1' AND tll.status = 1 ))) issue_id,
			UPPER(tl.contract_number) AS contract_number,
			DATE_FORMAT(tl.loan_date,'%Y-%m-%d') loan_date,
			tl.loan_money,
            IF(tl.has_disassembled = 0, tlb.full_scale_time, (SELECT MIN(tlb1.full_scale_time) FROM yidian.t_loan_bidding tlb1 WHERE tlb1.loan_id IN (SELECT tl1.id FROM yidian.t_loan tl1 WHERE tl1.disassembled_id = tl.id AND tl1.status = '1'))) full_scale_date,
			tl.bidding_money,
			tl.loan_period,
			(SELECT thlf.fee_value FROM t_hi_loan_fee_tmp1 thlf WHERE thlf.loan_id = tl.id ) jkylilv,
			(SELECT thlf.fee_value FROM t_hi_loan_fee_tmp2 thlf WHERE thlf.loan_id = tl.id ) bdnhlv,
			tl.repayment_mode,
			(SELECT tcdd.dict_key FROM yidian.t_cfg_dictionary_detail tcdd WHERE tcdd.dict_value = tl.repayment_mode AND tcdd.parent_dict_code = '2') repayment_mode_name,
			tl.loan_product,
			(SELECT tcdd.dict_key FROM yidian.t_cfg_dictionary_detail tcdd WHERE tcdd.dict_value = tl.loan_product AND tcdd.parent_dict_code = '1') loan_product_name,
			tl.loan_nature,
			(CASE tl.loan_nature WHEN 0 THEN '新增' WHEN 1 THEN '结清再贷' WHEN 2 THEN '借新还旧' WHEN 3 THEN '先转等' WHEN 4 THEN '续借' ELSE NULL END) loan_nature_name,
			tl.bidding_platform,
			tlui.create_user_id,
			tlui.create_user_name,
			tlui.supervisor_id,
			tlui.supervisor_name,
			tlui.customer_manager_id,
			tlui.customer_manager_name,
			tlui.team_manager_id,
			tlui.team_manager_name,
			tlui.verify_person_id,
			tlui.verify_person_name,
			tlui.approval_person_id,
			tlui.approval_person_name,
      			tl.asset_side,
      			(CASE WHEN tl.asset_side=1 THEN '鸿特' WHEN tl.asset_side=2 THEN '一点' WHEN tl.asset_side=3 THEN '德古' ELSE tl.asset_side END ) AS asset_side_name, -- 资产端（1：鸿特 2：一点）
      			tl.org_depository_account,
                        tl.first_repay_date
                        ,tr.refund_status           --  还款状态（1：正常；2：逾期；3：已结清）                                        
                        ,tr.is_roll_over            --  是否展期（0：否 1：是）                                                                
                        ,tr.roll_over_count         --  展期次数                                                                                     
                        ,tr.settle_date             --  结清日期                                                                                     
                        ,tr.settle_type             --  结清类型（0 未结清、1 正常结清、2 提前结清）
                       -- ,(CASE WHEN tr.settle_type =1 THEN tr.due_period WHEN tr.settle_type>1 THEN tr.due_period - 1 END ) AS settle_period_id -- 结清期次 
                          ,(CASE WHEN tr.settle_type >0 THEN tra.max_actual_period ELSE NULL END) AS settle_period_id -- 结清期次
                          ,(CASE WHEN tr.settle_type >0 THEN DATE_FORMAT(tra.hx_time,'%Y-%m-%d')  ELSE NULL END) AS settle_hx_date -- 结清期对应的核销时间						  
                        ,tr.is_loss_settle          --  是否亏损结清（0 否  1是）                                                              
                        ,tr.is_law_collection       --  是否移交法催（0 否  1 是）
                        ,tl.has_disassembled
                        ,tl.original_org_ids   -- 原所属机构ID 
                        ,tl.original_org_names -- 原所属机构  
		/*FROM yidian.t_refund tr
		INNER JOIN yidian.t_loan tl ON tl.id = tr.loan_id
		*/
		FROM yidian.t_loan tl 
		left JOIN yidian.t_refund tr ON tl.id = tr.loan_id
		LEFT JOIN yidian.t_hi_customer_loan thcl ON thcl.loan_id = tl.id
		LEFT JOIN yidian.t_loan_bidding tlb ON tlb.loan_id = tl.id
		LEFT JOIN (SELECT thvl.loan_id,thvl.vehicle_number FROM yidian.t_hi_vehicle_loan thvl) thvl ON thvl.loan_id = tl.id
		LEFT JOIN yidian.t_loan_user_info tlui ON tlui.loan_id = tl.id
		LEFT JOIN  yidian.t_cfg_organization org  ON tl.org_id = org.id
		LEFT JOIN (SELECT tra.loan_id,MAX(tra.actual_period) AS max_actual_period ,MAX(tra.create_time) AS hx_time
                         FROM yidian.t_refund_actual tra
                        GROUP BY tra.loan_id) tra ON tl.id=tra.loan_id
		WHERE tl.status = 1 AND tl.has_main = '-1' 
		   AND ((IF(tl.has_disassembled = 0, 
                tlb.bidding_status = 3,
                EXISTS(SELECT 1 FROM yidian.t_loan_bidding tlb1 WHERE tlb1.loan_id IN (SELECT tl1.id FROM yidian.t_loan tl1 WHERE tl1.disassembled_id = tl.id AND tl1.status = '1') AND tlb1.bidding_status = 3)
              )
            ) OR tl.flow_id = 1100)
		 -- and tl.flow_id =1100 -- add by caihl20190107 流程结束(包含满标未提现完的数据)
		-- AND trp.id BETWEEN start_s AND end_n AND IF(tr.settle_type IS NULL OR tr.settle_type = '0',TRUE, EXISTS (SELECT 1 FROM yidian.t_refund_actual t WHERE t.loan_id = trp.loan_id AND trp.period &lt;= t.actual_period)); 
              ; 


INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','1:dws_agr_yd_refund_information_tmp', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
  
 
/*has_datasyn 信贷数据同步-真实还款（0未同步，1已同步） 
has_disassembled 是否拆标（1：是；0：否）
status 状态（1：正常；0：禁用） */

/*非拆标的本金计算*/
DROP TEMPORARY TABLE IF EXISTS t_refund_actual_no_disassembled_tmp;
CREATE TEMPORARY TABLE t_refund_actual_no_disassembled_tmp (
  loan_id INT(11) DEFAULT NULL COMMENT '借款单ID',
  bj DECIMAL(12,2) NOT NULL DEFAULT '0',
  sh_lx DECIMAL(12,2) NOT NULL DEFAULT 0.00 COMMENT '实还利息',
  KEY idx_loan_id (loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO  t_refund_actual_no_disassembled_tmp
SELECT 
tra.loan_id ,SUM(IFNULL(tra.bj,0)) AS bj, SUM(IFNULL(tra.lx,0)) AS sh_lx
    FROM yidian.t_refund_actual tra 
 GROUP BY tra.loan_id
 ;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','2:非拆标的本金计算', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
   
 
/*拆标的本金计算*/
DROP TEMPORARY TABLE IF EXISTS t_refund_actual_yes_disassembled_tmp ;
CREATE TEMPORARY TABLE t_refund_actual_yes_disassembled_tmp (
  disassembled_id INT(11) DEFAULT NULL COMMENT '拆标ID',
  bj DECIMAL(12,2) NOT NULL DEFAULT '0',
  sh_lx DECIMAL(12,2) NOT NULL DEFAULT 0.00 COMMENT '实还利息',
  KEY idx_disassembled_id (disassembled_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO t_refund_actual_yes_disassembled_tmp
SELECT       
   tl1.disassembled_id ,SUM(IFNULL(tra.bj,0)) AS bj, SUM(IFNULL(tra.lx,0)) AS sh_lx
    FROM
      yidian.t_loan tl1,
      yidian.t_refund_actual tra 
    WHERE tl1.id = tra.loan_id 
      AND tl1.disassembled_id IS NOT NULL
     GROUP BY tl1.disassembled_id
      ;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','3:拆标的本金计算', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );


  /*计算逾期天数*/
DROP TEMPORARY TABLE IF EXISTS t_refund_period_tmp;
CREATE TEMPORARY TABLE t_refund_period_tmp (
  loan_id INT(11) NOT NULL COMMENT '借款单ID',
  overdue_days INT(5) DEFAULT NULL,
  -- yh_lx DECIMAL(12,2) DEFAULT 0.00 COMMENT '应还日期',
  KEY idx_loan_id (loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO t_refund_period_tmp
SELECT 
             trp.loan_id
             ,SUM(IFNULL(trp.overdue_days,0)) AS overdue_days
            -- ,SUM(IFNULL(trp.lx,0))           AS yh_lx
             FROM yidian.t_refund_period trp 
             WHERE trp.refund_status IN (3,4)
             GROUP BY trp.loan_id
             ;
 
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','4:计算逾期天数', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
 
 /*计算应还金额*/
 DROP TEMPORARY TABLE IF EXISTS t_refund_period_yh_tmp;
CREATE TEMPORARY TABLE t_refund_period_yh_tmp (
  loan_id INT(11) NOT NULL COMMENT '借款单ID',
  yh_p2p_service DECIMAL(34,2) DEFAULT NULL,
  yh_gpsfwf DECIMAL(34,2) DEFAULT NULL,
  yh_margin DECIMAL(34,2) DEFAULT NULL,
  yh_insurance DECIMAL(34,2) DEFAULT NULL,
  yh_lx        DECIMAL(34,2) DEFAULT NULL,
  KEY idx_loan_id(loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
INSERT INTO t_refund_period_yh_tmp
SELECT 
 trp.loan_id
,SUM(IFNULL(trp.p2p_service,0)) AS yh_p2p_service
,SUM(IFNULL(trp.gpsfwf     ,0)) AS yh_gpsfwf
,SUM(IFNULL(trp.margin     ,0)) AS yh_margin
,SUM(IFNULL(trp.insurance  ,0)) AS yh_insurance
,SUM(IFNULL(trp.lx  ,0))        AS yh_lx			
FROM yidian.t_refund_period trp
GROUP BY trp.loan_id 			
;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','4_1:计算应还金额', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
  
 /*计算实还金额*/
DROP TEMPORARY TABLE IF EXISTS t_refund_actual_sh_tmp;
CREATE TEMPORARY TABLE t_refund_actual_sh_tmp (
  loan_id INT(11) DEFAULT NULL COMMENT '借款单ID',
  sh_p2p_service DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  sh_gpsfwf DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  sh_margin DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  sh_insurance DECIMAL(34,2) NOT NULL DEFAULT '0.00',
  KEY idx_loan_id (loan_id)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;

INSERT INTO t_refund_actual_sh_tmp
SELECT
traa.loan_id 
,IFNULL(SUM(traa.p2p_service),0)   AS sh_p2p_service 
,IFNULL(SUM(traa.gpsfwf),0)        AS sh_gpsfwf     
,IFNULL(SUM(traa.margin),0)        AS sh_margin    
,IFNULL(SUM(traa.insurance),0)     AS sh_insurance  
FROM yidian.t_refund_actual traa
GROUP BY traa.loan_id 
;
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','4_2:计算实还金额', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
  
 
/*参考一点 t_rp_lending_data_vice 可以对数*/
ALTER TABLE DWS_DATA.dws_agr_yd_loan TRUNCATE PARTITION dws_agr_yd_loan_${pt_day} ; 
INSERT INTO  DWS_DATA.dws_agr_yd_loan 
SELECT 
 tt.runperiod
,tt.org_id
,tt.org_name
,tt.org_address_province
,tt.customer_name
,tt.vehicle_number
,tt.loan_id
,tt.issue_id
,tt.contract_number
,tt.loan_date
,tt.loan_money
,tt.full_scale_date
,tt.bidding_money
,tt.loan_period
,tt.jkylilv
,tt.bdnhlv
,tt.repayment_mode
,tt.repayment_mode_name
,tt.loan_product
,tt.loan_product_name
,tt.loan_nature
,tt.loan_nature_name
,tt.bidding_platform
,tt.create_user_id
,tt.create_user_name
,tt.supervisor_id
,tt.supervisor_name
,tt.customer_manager_id
,tt.customer_manager_name
,tt.team_manager_id
,tt.team_manager_name
,tt.verify_person_id
,tt.verify_person_name
,tt.approval_person_id
,tt.approval_person_name
,tt.asset_side
,tt.asset_side_name
,tt.org_depository_account
,tt.first_repay_date
,tt.refund_status
,tt.is_roll_over
,tt.roll_over_count
,tt.settle_date
,tt.settle_type
,tt.settle_period_id -- 结清期次
,tt.settle_hx_date   --  结清期对应的核销时间
,tt.due_date_settle  -- 结清期对应的应还日期
,tt.is_loss_settle
,tt.actual_bj
,(tt.bidding_money - tt.actual_bj) AS left_prin
,tt.yh_lx
,tt.sh_lx
,(tt.yh_lx - tt.sh_lx) AS left_interest -- 剩余利息
,tt.overdue_days
,(tt.yh_gpsfwf+tt.yh_margin+tt.yh_insurance ) - (tt.sh_gpsfwf+tt.sh_margin+tt.sh_insurance)   AS left_fgwfwf      -- 剩余分公司月服务费（GPS服务费+保证金+平台服务费）
,(tt.yh_p2p_service - tt.sh_p2p_service )                                                     AS left_p2p_service -- 剩余p2p服务费
, 'yidian' AS dw_src_sys
, 't_refund_actual,t_loan,t_refund,t_refund_period,t_hi_customer_loan' AS dw_src_tbl
, CURRENT_TIMESTAMP AS dw_ins_tm
, CURRENT_TIMESTAMP AS dw_upd_tm
, 'caihl' AS dw_ins_usr
, 'caihl' AS dw_upd_usr
, DATE_FORMAT('${pt_day}','%Y-%m-%d')	AS	part_dt	     --	分区日期 
,tt.original_org_ids   -- 原所属机构ID 
,tt.original_org_names -- 原所属机构  
FROM (
SELECT 
       tl.runperiod
      ,tl.org_id
      ,tl.org_name
      ,tl.org_address_province
      ,tl.customer_name
      ,tl.vehicle_number
      ,tl.loan_id
      ,tl.issue_id
      ,tl.contract_number
      ,tl.loan_date
      ,tl.loan_money
      ,tl.full_scale_date
      ,tl.bidding_money
      ,tl.loan_period
      ,tl.jkylilv
      ,tl.bdnhlv
      ,tl.repayment_mode
      ,tl.repayment_mode_name
      ,tl.loan_product
      ,tl.loan_product_name
      ,tl.loan_nature
      ,tl.loan_nature_name
      ,tl.bidding_platform
      ,tl.create_user_id
      ,tl.create_user_name
      ,tl.supervisor_id
      ,tl.supervisor_name
      ,tl.customer_manager_id
      ,tl.customer_manager_name
      ,tl.team_manager_id
      ,tl.team_manager_name
      ,tl.verify_person_id
      ,tl.verify_person_name
      ,tl.approval_person_id
      ,tl.approval_person_name
      ,tl.asset_side
      ,tl.asset_side_name
      ,tl.org_depository_account
      ,tl.first_repay_date
      ,tl.refund_status
      ,tl.is_roll_over
      ,tl.roll_over_count
      ,tl.settle_date
      ,IFNULL(tl.settle_type,0) AS settle_type -- 对于为空的判断为未结清
      ,tl.settle_period_id -- 结清期次
	  ,tl.settle_hx_date   --  结清期对应的核销时间
	  ,trp1.due_date            AS due_date_settle  -- 结清期对应的应还日期
      ,tl.is_loss_settle
        ,IF(
          tl.has_disassembled = 0,
          IFNULL((tra.bj), 0),
          IFNULL((tra1.bj), 0)
          ) AS actual_bj,
          IFNULL(yh.yh_lx,0) AS yh_lx -- 应还利息
        , IF(
          tl.has_disassembled = 0,
          IFNULL((tra.sh_lx), 0),
          IFNULL((tra1.sh_lx), 0)
          ) AS sh_lx                 -- 实还利息
        , (CASE WHEN tl.settle_type >0 THEN 0 ELSE IFNULL(rp.overdue_days,0) END) AS overdue_days -- 对于结清的单 逾期天数为0
  		,IFNULL(yh.yh_p2p_service     ,0)  yh_p2p_service
        ,IFNULL(yh.yh_gpsfwf          ,0)  yh_gpsfwf     
        ,IFNULL(yh.yh_margin          ,0)  yh_margin     
        ,IFNULL(yh.yh_insurance       ,0)  yh_insurance  
        ,IFNULL(sh.sh_p2p_service     ,0)  sh_p2p_service
        ,IFNULL(sh.sh_gpsfwf          ,0)  sh_gpsfwf     
        ,IFNULL(sh.sh_margin          ,0)  sh_margin     
        ,IFNULL(sh.sh_insurance       ,0)  sh_insurance
        ,tl.original_org_ids   -- 原所属机构ID 
        ,tl.original_org_names -- 原所属机构    
      FROM dws_agr_yd_refund_information_tmp tl 
        LEFT JOIN  t_refund_actual_no_disassembled_tmp tra     ON tra.loan_id = tl.loan_id
        LEFT JOIN  t_refund_actual_yes_disassembled_tmp  tra1  ON tra1.disassembled_id = tl.loan_id
        LEFT JOIN t_refund_period_tmp rp                       ON rp.loan_id = tl.loan_id  
		LEFT JOIN t_refund_period_yh_tmp yh                    ON yh.loan_id = tl.loan_id
		LEFT JOIN t_refund_actual_sh_tmp sh                    ON sh.loan_id = tl.loan_id
		LEFT JOIN yidian.t_refund_period trp1                  ON tl.loan_id = trp1.loan_id AND tl.settle_period_id = trp1.period
      ) tt;
   
INSERT INTO public_data.tb_duty_detail_log
  (duty_id,duty_nm,duty_type, deal_nm,step_id, step_desc, row_cnt, state_dt,create_tm, create_usr)
VALUES
  ('${pt_dutyno}', '${p_duty_nm}','1','5:end>>>', '0', '总共4步！！', 0,'${pt_day}',  NOW(),  'caihl' );
  
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>DMA_SAL_ACHV_DATA</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>448</yloc>
    </entry>
    <entry>
      <name>SQL_LOG 120</name>
      <description/>
      <type>SQL</type>
      <sql>
insert into ods_state_log
  (duty_id,
   duty_nm,
   duty_type,
   deal_nm,
   step_id,
   step_desc,
   row_cnt,
   state_dt,
   create_tm,
   create_usr
   )
values
  ('${pt_dutyno}',
   '${p_duty_nm}',
	'1',
   'ktr_duty_check',
   '100',
   CONCAT('${pt_returnvalue}','  源表或依赖任务异常'),
   0,
   '${p_day}',
   NOW(),
   'dl'
	
  )</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>public_data</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>576</xloc>
      <yloc>720</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>SQL_LOG 100</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 400</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_set_date</from>
      <to>SQL_LOG 200</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 310</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 100</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>ktr_set_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 200</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_check</from>
      <to>check_value</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>SQL_LOG 210 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 210 2 2</from>
      <to>Java_cycle</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>Wait for</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Wait for</from>
      <to>ktr_duty_check</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ktr_duty_insert</from>
      <to>SQL_LOG 400</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 300</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check_value</from>
      <to>insert_data</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Java_cycle</from>
      <to>SQL_LOG 120</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 120</from>
      <to>JavaScript_Return</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>insert_data</from>
      <to>SQL_LOG 310</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL_LOG 300</from>
      <to>ktr_duty_insert</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>*************************							
功      能 ：一点车贷业务基本信息表（主键为借据号loan_id）
创建时间：20180926
创建人   ：caihl
源系统	 ：yidian
数据源表：
运行频率：天
注意事项： 
问题发现： 
修改记录： 
***********************
20180926 new created
20180930 新增一些t_loan t_refund字段
20181008 对于结清的单，逾期天数判断为0
20181015 新增应还利息 实还利息和剩余利息
20181019 将借据号的基本信息加工到该表 
20181022 新增剩余p2p服务费
20181026 应还利息修改
20181107 增加结清期次字段settle_period_id
20181123 结清期次字段settle_period_id逻辑修改，取最大的实还期次
20181126 结清日：根据最后一期核销日去判断t_refund_actual.create_time
20190107 将满标未提现的数据加入到目标表</note>
      <xloc>0</xloc>
      <yloc>0</yloc>
      <width>442</width>
      <heigth>363</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>192</backgroundcolorred>
      <backgroundcolorgreen>192</backgroundcolorgreen>
      <backgroundcolorblue>192</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>
